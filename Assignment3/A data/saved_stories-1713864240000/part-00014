{"aid": "40127425", "title": "Threat Actors Are Abusing GitHub's File Upload Feature to Host Malware", "url": "https://socket.dev/blog/how-threat-actors-are-abusing-github-file-upload-feature-to-host-malware", "domain": "socket.dev", "votes": 2, "user": "feross", "posted_at": "2024-04-23 01:17:07", "comments": 0, "source_title": "How Threat Actors are Abusing GitHub\u2019s File Upload Feature to Host Malware - Socket", "source_text": "How Threat Actors are Abusing GitHub\u2019s File Upload Feature to Host Malware -\nSocket\n\nJoin our webinar on Tuesday, April 23, at 11am EDTThe XZ Utils Attack: Why\nTraditional CVE Tools Aren't Enough.Register \u2192\n\nSign inDemo\n\n# How Threat Actors are Abusing GitHub\u2019s File Upload Feature to Host Malware\n\n## GitHub is susceptible to a CDN flaw that allows attackers to host malware\non any public repository.\n\nSarah Gooding\n\nApril 23, 2024\n\nIn a recent discovery, GitHub was found susceptible to a CDN (content delivery\nnetwork) flaw that allows attackers to host malware. This appears to be a\nsecurity issue or a bug that exposes the risks associated with CDNs used by\nmajor software development platforms. It\u2019s part of a growing trend where\nGitHub, a platform integral to software development, is becoming a vector for\ncybersecurity threats.\n\nLast week McAfee reported that a new packed variant of the Redline Stealer\ntrojan, a prevalent malware strain, was found to be leveraging Lua bytecode to\nperform malicious behavior. One notable feature of its infection chain is that\nthe trojanized git repository appears to be hosted on Microsoft\u2019s GitHub\naccount.\n\n> https[:]//github[.]com/microsoft/vcpkg/files/14125503/Cheat.Lab.2.7.2.zip\n\nWhat is actually happening here is that attackers have exploited this bug in\nGitHub comments to spread malware by uploading files that are then hosted in\nGitHub\u2019s Amazon S3 instance for corresponding repository.\n\nLast month software engineer Justas Masiulis tweeted an example of malware\nabusing GitHub attachments to create file links in legitimate repositories.\nThe example referenced a file that appears to be hosted on the Microsoft MSRC\nSecurity Research GitHub repository.\n\nGitHub does not appear to have taken any action against this type of abuse\nbeyond simply removing the offending files.\n\nSergei Frankoff, co-founder of automated malware analysis services provider\nOpen Analysis, tweeted a quick walkthrough video of how attackers can host\nmalware or any type of file on other people\u2019s repositories by exploiting\nGitHub issues and comments. He performed a demo on one of his own\nrepositories.\n\n\u201cThe way you do it is open an issue, and then drop your file into the issues,\u201d\nFrankoff said. \u201cIt gets uploaded and saved under the tree of the GitHub repo,\nand then you can access it with that link.\n\n\u201cThe stealthy way to do this is to actually just close the issue so you don\u2019t\nactually submit it. Just upload the file in the message box and then, kill the\nissue and the file stays. So there\u2019s no indication that you did that.\u201d\n\nFrankoff explained that the paths for /assets, traditionally used for\nreleases, is confusingly similar to /files:\n\n> <github user>/<github repo>/assets/<file>\n\n> <github user>/<github repo>/files/<file>\n\nAttackers leverage this confusion to lend their malware links more legitimacy.\nIt\u2019s similar to \u201cstarjacking\u201d confusion where attackers link their package to\na popular package's source code repository on GitHub that has a high number of\nstars.\n\nFrankoff speculated that GitHub\u2019s servers likely have forensics to identify\nmore information about people who are abusing this mechanism. So far they\nhaven\u2019t been quick to crack down on this abuse.\n\nOne person responded on Twitter that he is using this vulnerability to use\nGithub's CDN for uploading images to his blog. He creates an issue on his own\nrepo, uploads images, and closes the issue to get a free CDN for his Netlify-\nhosted blog.\n\nBleeping Computer confirmed that the comments feature on GitLib is also\nsubject to the same abuse, only with a different URL structure.\n\n>\n> https[:]//gitlab[.]com/inkscape/inkscape/uploads/edfdbc997689255568a7c81db3f3dc51/InkScape-2024-Latest.exe\n\n>\n> https[:]//gitlab[.]com/wireshark/wireshark/uploads/b4162053fbb4dc6ee4f673c532009e16/WireShark-v4.2.4-stable-\n> release.exe\n\nOne notable difference is that GitLab users must be logged in to upload files,\nbut having an account may not be a strong deterrent.\n\n## Security Implications of Abusing GitHub and GitLab Uploads#\n\nBeyond the seemingly innocuous abuse of GitHub\u2019s CDN for hosting blog post\nimages, there are many novel, malicious ways this bug could be used:\n\n  * Spoofing Security Tools: An attacker could upload malicious versions of popular security patches or tools within repositories that host cybersecurity software. For instance, they might upload a trojanized version of a well-known antivirus tool update file, tricking users into downloading and executing malware under the guise of enhancing security.\n  * Impersonating Development Tools: In repositories that store development tools or plugins, attackers could upload malicious \"updates\" or \"extensions.\" This could be particularly effective in repositories for IDEs (Integrated Development Environments) like Visual Studio Code or popular development frameworks, where the additional files could be presented as performance enhancements or new features.\n  * Malware in Data Science Repositories: For repositories hosting data science projects or datasets, an attacker could add malicious data files or code notebooks that include hidden malicious code. When these notebooks are run, they could execute actions ranging from data theft to environment manipulation on the user\u2019s machine.\n  * Open Source Project Hijacks: Threat actors could target repositories of abandoned or less actively maintained open source projects. They might add new \"contributions\" that include malicious code, which could then be pulled into forks or clones of the project by unsuspecting developers.\n  * Exploiting Firmware and Hardware Projects: In repositories dealing with firmware or hardware drivers, uploading compromised firmware files or driver updates could lead to direct manipulation of physical devices. Users downloading these updates might unknowingly install firmware that could alter device behavior or allow remote access.\n\nOpen Analysis has a detailed writeup of how this GitHub bug was used to infect\ngame hackers with Lua malware. It\u2019s likely not the first attempt to abuse\nGitHub file uploads to deliver a malicious file. In addition to the piles of\nmalware that\u2019s openly hosted on the platform \u201cfor educational purposes,\u201d\nGitHub has also struggled to contain the automated creation of repositories\nhosting obfuscated malware.\n\nThis method of abuse applies to any public repository on GitHub or GitLab.\nDevelopers and researchers should be aware of these techniques to disguise\nmalicious software as legitimate projects. Never blindly download files from\nseemingly trustworthy locations, like popular GitHub repositories, without\nproperly verifying their integrity.\n\nSubscribe to our newsletter\n\nGet notified when we publish new security blog posts!\n\n## Related posts\n\nBack to all posts\n\nSecurity News\n\n### The Dark Side of Open Source\n\nAt Node Congress, Socket CEO Feross Aboukhadijeh uncovers the darker aspects\nof open source, where applications that rely heavily on third-party\ndependencies can be exploited in supply chain attacks.\n\nBy Sarah Gooding - Apr 19, 2024\n\nResearch\n\nSecurity News\n\n### npm Package for ReExt React Components Library Exfiltrates Git Credentials\n\nThe Socket Research team found this npm package includes code for collecting\nsensitive developer information, including your operating system username, Git\nusername, and Git email.\n\nBy Sarah Gooding, Socket Research Team - Apr 18, 2024\n\nSecurity News\n\n### OpenJS: \u201cXZ Utils Cyberattack Likely Not an Isolated Incident\u201d\n\nOpenJS is warning of social engineering takeovers targeting open source\nprojects after receiving a credible attempt on the foundation.\n\nBy Sarah Gooding - Apr 17, 2024\n\nProduct\n\n  * Package Alerts\n\n  * Integrations\n\n  * Docs\n\n  * Pricing\n\n  * FAQ\n\n  * Roadmap\n\nAbout\n\n  * About\n\n  * Love\n\n  * Blog\n\n  * Glossary\n\n  * Discord Community\n\n  * CareersHiring\n\n  * Send Feedback\n\n  * Contact Us\n\n  * System Status\n\nPackages\n\n  * npm Package Directory\n\n  * Explore npm Packages\n\n  * Go Package Directory\n\n  * Explore Go Packages\n\n  * Maven Package Directory\n\n  * Explore Maven Packages\n\n  * PyPi Package Directory\n\n  * Explore PyPi Packages\n\n  * Most Popular JS Packages\n\n  * Top JavaScript Maintainers\n\n  * Removed npm Packages\n\n  * Random npm Package\n\nStay in touch\n\nGet open source security insights delivered straight into your inbox.\n\n  * Terms\n  * Privacy\n  * Security\n\nMade with \u26a1\ufe0f by Socket Inc\n\n", "frontpage": false}
