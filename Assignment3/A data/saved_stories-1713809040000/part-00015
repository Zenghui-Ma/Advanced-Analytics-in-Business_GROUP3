{"aid": "40112090", "title": "Gmux \u2013 raise the PRs for a single feature across multiple repos", "url": "https://github.com/samlader/gmux", "domain": "github.com/samlader", "votes": 1, "user": "calpaterson", "posted_at": "2024-04-22 07:24:10", "comments": 0, "source_title": "GitHub - samlader/gmux: CLI tool to manage & automate repetitive Git workflows across multiple Github repositories.", "source_text": "GitHub - samlader/gmux: CLI tool to manage & automate repetitive Git workflows\nacross multiple Github repositories.\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nsamlader / gmux Public\n\n  * Notifications\n  * Fork 0\n  * Star 8\n\nCLI tool to manage & automate repetitive Git workflows across multiple Github\nrepositories.\n\n### License\n\nMIT license\n\n8 stars 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# samlader/gmux\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n2 Branches\n\n3 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nsamladerAdd spacingApr 21, 202418a9837 \u00b7 Apr 21, 2024Apr 21, 2024\n\n## History\n\n59 Commits  \n  \n### gmux\n\n|\n\n### gmux\n\n| Prompt engineering| Apr 20, 2024  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Initial commit| Feb 17, 2024  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| Initial commit| Feb 17, 2024  \n  \n### README.md\n\n|\n\n### README.md\n\n| Add spacing| Apr 21, 2024  \n  \n### setup.py\n\n|\n\n### setup.py\n\n| Add support for local LLMs| Apr 20, 2024  \n  \n## Repository files navigation\n\n# gmux\n\nA simple command-line tool designed to automate repetitive Git workflows\nacross multiple Github repositories.\n\nCommon tasks like cloning repositories and performing commits occur in\nparallel, while pull requests are dynamically generated - enabling you to ship\nchanges at lightning speed. \u26a1\n\n## Installation\n\nBefore using gmux, make sure you have the required dependencies installed:\n\n    \n    \n    # brew install git git --version # brew install gh gh --version\n\nInstall gmux using the following command:\n\n    \n    \n    pip3 install https://github.com/samlader/gmux/archive/refs/tags/v0.2.0.zip\n\n## Usage\n\n### 1\\. Initialize a New Directory\n\nUse the init command to create a new working directory for gmux, along with a\npull request template:\n\n    \n    \n    gmux init --directory=<directory_name>\n\n### 2\\. Clone Multiple Repositories\n\nClone all repositories from a specified GitHub organization or user:\n\n    \n    \n    gmux clone --org=<organization_or_user> [--filter=<regex_filter>]\n\n### 3\\. Git Commands\n\nExecute any Git command for all repositories. Dynamic variables for each\nrepository can be used.\n\n    \n    \n    gmux git [GIT_COMMAND] [--filter=<regex_filter>]\n\n#### Dynamic Variables\n\n  * @default: The default branch of a repository\n\n  * @current: The current branch of the repository\n\n### 4\\. Dynamic Pull Requests\n\nCreate pull requests for each repository:\n\n    \n    \n    gmux pr\n\nPull requests use the template (PR_TEMPLATE.md) created in the root directory\nby default.\n\n#### Features\n\n##### Jinja Expressions\n\nTemplates support Jinja expressions and the following context variables are\nprovided:\n\n  * repository_name (name of the repository)\n  * diff_files (files with changes against the base branch)\n\n##### Text Generation\n\nTemplates support local LLM-based text generation using the ollama_chat macro.\n\nThis macro requires an installation of ollama and accepts two arguments:\n\n  * model (name of the model, all available models can be found here)\n  * prompt (text prompt given to the model)\n\n#### Example template\n\n    \n    \n    ## Overview This PR contains {{ diff_files|length }} changes for {{ repository_name }}. {% if \"README.md\" in diff_files %} The documentation has been updated to reflect these changes accordingly. {% endif %} {{ ollama_chat(\"llama3\", \"Write some guidelines on the usage of React hooks\") }} ## Changes {% for diff_file in diff_files %} - {{ diff_file }} {% endfor %}\n\n### 5\\. Arbitrary Commands\n\nExecute a command in each repository. Useful for batch operations across\nmultiple projects.\n\n    \n    \n    gmux cmd [COMMAND] [--filter=<regex_filter>]\n\n## Examples\n\n    \n    \n    # Initialize a new directory gmux init # Clone service repositories from the organization \"example-org\" gmux clone --org=example-org --filter=\"*-service\" # Create a new branch on all repositories gmux git checkout -b feature-branch # Make code modifications codemod -m --extensions html \\ '<font *color=\"?(.*?)\"?>(.*?)</font>' \\ '<span style=\"color: \\1;\">\\2</span>' # Commit changes gmux git commit -m \"Implement new feature\" # Create pull requests for all repositories gmux pr\n\n## Contributions\n\nContributions and bug reports are welcome! Feel free to open issues, submit\npull requests or contact me if you need any support.\n\n## License\n\nThis project is licensed under the MIT License.\n\n## About\n\nCLI tool to manage & automate repetitive Git workflows across multiple Github\nrepositories.\n\n### Resources\n\nReadme\n\n### License\n\nMIT license\n\nActivity\n\n### Stars\n\n8 stars\n\n### Watchers\n\n1 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases 2\n\nv0.2.0 Latest\n\nApr 20, 2024\n\n\\+ 1 release\n\n## Packages 0\n\nNo packages published\n\n## Languages\n\n  * Python 100.0%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
