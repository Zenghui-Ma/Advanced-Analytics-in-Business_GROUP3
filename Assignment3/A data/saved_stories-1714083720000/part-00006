{"aid": "40158489", "title": "\"Testing on the Toilet\" (2007)", "url": "https://testing.googleblog.com/2007/01/introducing-testing-on-toilet.html", "domain": "googleblog.com", "votes": 1, "user": "zerojames", "posted_at": "2024-04-25 15:09:37", "comments": 0, "source_title": "Introducing \"Testing on the Toilet\"", "source_text": "Google Testing Blog: Introducing \"Testing on the Toilet\"\n\n## Testing Blog\n\n## Introducing \"Testing on the Toilet\"\n\nSunday, January 21, 2007\n\nWe want you to write more tests. Yes, you. You've already been told that tests\nare the safety net that protects you when you need to refactor your code, or\nwhen another developer adds features. You even know that tests can help with\nthe design of your code.\n\nBut, although you've read the books and heard the lectures, maybe you need a\nlittle more inspiration, tips, and prodding. And you need it to be in a place\nwhere when you see it, you can't ignore it.\n\nThat's where we can help. We're the \"Google Testing Grouplet,\" a small band of\nvolunteers who are passionate about software testing.\n\nWe're unveiling the public release of \"Testing on the Toilet\": one of Google's\nlittle secrets that has helped us to inspire our developers to write well-\ntested code. We write flyers about everything from dependency injection to\ncode coverage, and then regularly plaster the bathrooms all over Google with\neach episode, almost 500 stalls worldwide. We've received a lot of feedback\nabout it. Some favorable (\"This is great because I'm always forgetting to\nbring my copy of Linux Nerd 2000 to the bathroom!\") and some not (\"I'm trying\nto use the bathroom, can you folks please just LEAVE ME ALONE?\"). Even the\nWashington Post noticed.\n\nWe've decided to share this secret weapon with the rest of the world to help\nspread our passion for testing, and to provide a fun and easy way for you to\neducate yourself and the rest of your company about these important tricks and\ntechniques.\n\nWe'll be putting episodes on this blog on a regular basis and providing PDFs\nso you can print them out and put them up in your own bathrooms, hallways,\nkitchens, moon bases, secret underground fortresses, billionaire founders'\nPriuses, wherever. Send your photos and stories to TotT@google.com and let us\nknow how Testing on the Toilet is received at your company.\n\nAnd meanwhile, keep writing those tests.\n\nGoogle\n\nLabels: TotT\n\n#### 55 comments :\n\n  1. maciejJanuary 24, 2007 at 3:59:00 PM PST\n\nWill you be posting the back catalog of past TotT installments?\n\nReplyDelete\n\nReplies\n\nReply\n\n  2. Pascal AlbertyJanuary 25, 2007 at 4:32:00 AM PST\n\nGreat idea. Thanks guys !\n\nReplyDelete\n\nReplies\n\nReply\n\n  3. Marc \"Slyoldfox\" VanbrabantJanuary 25, 2007 at 4:36:00 AM PST\n\nThis comment has been removed by the author.\n\nReplyDelete\n\nReplies\n\nReply\n\n  4. Greg BulmashJanuary 25, 2007 at 3:51:00 PM PST\n\nUncle John's Bathroom Reader watch out! :-)\n\nReplyDelete\n\nReplies\n\nReply\n\n  5. PepijnJanuary 25, 2007 at 4:28:00 PM PST\n\nA similar thing was/is in use at a place I worked. People made an effort to\nstay in the toilet for a long time (doodling on their PDA) and later claimed\nthey were reading the work notes... :)\n\nReplyDelete\n\nReplies\n\nReply\n\n  6. UnknownJanuary 25, 2007 at 5:37:00 PM PST\n\nwhen i'm on the toilet, i really just want to do my business, not read about\nboring test advice. something more thought-provoking would be nice..\n\nReplyDelete\n\nReplies\n\nReply\n\n  7. UnknownJanuary 25, 2007 at 5:51:00 PM PST\n\nI've just installed a Wi-Fi printer in my bathroom. Can Google just print the\npublications directly?\n\nReplyDelete\n\nReplies\n\nReply\n\n  8. Surfer51January 25, 2007 at 6:06:00 PM PST\n\nMy new Dihydrogen monoxide powered mini laptop has helped me tremendously when\nharold calls...\n\nNow I have TotT...whoa...life is good.\n\nReplyDelete\n\nReplies\n\nReply\n\n  9. Anthony PersaudJanuary 25, 2007 at 7:10:00 PM PST\n\nCan you make it a podcast like feed so that I can download the pdfs whenever a\nnew one is available on the iTunes store? That would be awesome!\n\nReplyDelete\n\nReplies\n\nReply\n\n  10. UnknownJanuary 25, 2007 at 7:31:00 PM PST\n\nTesting: \"Bombs, away!\" *listen* *plop!* Success!\n\nReplyDelete\n\nReplies\n\nReply\n\n  11. Keith WozniakJanuary 25, 2007 at 7:32:00 PM PST\n\nSounds great to already have reading material available rather than having to\nprint something out, get it from the printer, then carry it in\n\nReplyDelete\n\nReplies\n\nReply\n\n  12. PsyberianJanuary 25, 2007 at 8:29:00 PM PST\n\nGoogle doing this...mmmmkay....\n\nHowever, I shudder to think about the PHBs who will use this to other ends...\n\nReplyDelete\n\nReplies\n\nReply\n\n  13. doubleAJanuary 25, 2007 at 8:38:00 PM PST\n\nSaves toilet paper too!\n\nReplyDelete\n\nReplies\n\nReply\n\n  14. Joe GallagherJanuary 25, 2007 at 9:43:00 PM PST\n\nHm. I have to say, I think this is misguided.\n\nI've worked for a long time in the testing/QA engineering field for software\n(seems like every company calls it something different, and there are\ndifferent expectations of each, but that just leads to my point). My point is\nthat QA needs to have a bright line between it and development. No doubt,\ndevelopers need to be good at creating good unit testing. By the same token,\ngood QA/Testers need to be good at development.\n\nBut the two should remain separate. Go to any mature industry's engineering\ndepartment, and ask how much of the release testing is done or defined by the\nactual development engineers. The answer will be you'll be laughed out of the\noffice. There's good reason for this.\n\nThis is a sign of the immaturity of the software development industry. We're\ngetting there, though. I've worked for a couple of the truly big Seattle\nsoftware interests, and they are slowly getting more mature in how they deal\nwith QA. The key is, (for as good and happy as developers doing a good job\ndeveloping unit testing for their own work): SDEs are not QAEs, and the\ndistinction should not be blurred, if you want to maintain true quality.\n\nReplyDelete\n\nReplies\n\nReply\n\n  15. UnknownJanuary 25, 2007 at 10:06:00 PM PST\n\nand providing PDFs How about just a printer friendly version without comments?\n\nReplyDelete\n\nReplies\n\nReply\n\n  16. getswJanuary 25, 2007 at 10:08:00 PM PST\n\nWhen I go to the john, I create the Bush cabinet, I don't worry about anything\nmore than watching Cheney and Rice being flushed to a place they belong.\n\nReplyDelete\n\nReplies\n\nReply\n\n  17. PrufraxJanuary 25, 2007 at 11:58:00 PM PST\n\nI think you may be missing a certain level of irony in your \"positive\ncomments\"... You may also be missing a certain level of fibre from your diet\nif you are regularly on the loo long enough to read through so much...\n\nReplyDelete\n\nReplies\n\nReply\n\n  18. defaultJanuary 26, 2007 at 1:37:00 AM PST\n\nA picture of those bathrooms would be very informative and entertaining.\nPlease...\n\nReplyDelete\n\nReplies\n\nReply\n\n  19. Alessio PaceJanuary 26, 2007 at 2:25:00 AM PST\n\nSimply great!! :-)\n\nA related curiosity: a friend of mine had in his bathroom some maths formulas\nhe wasn't able to remember easily :-)\n\nReplyDelete\n\nReplies\n\nReply\n\n  20. chunkybaconJanuary 26, 2007 at 3:47:00 AM PST\n\ni guess this gives a whole new meaning to a \"Googlebomb\".\n\nReplyDelete\n\nReplies\n\nReply\n\n  21. Joel OdomJanuary 26, 2007 at 3:57:00 AM PST\n\nThese folks obviously need to eat more fiber.\n\nReplyDelete\n\nReplies\n\nReply\n\n  22. UnknownJanuary 26, 2007 at 5:52:00 AM PST\n\nHoly shit !!!\n\nReplyDelete\n\nReplies\n\nReply\n\n  23. Major TomJanuary 26, 2007 at 6:10:00 AM PST\n\nTo respond to Joe #302 You're wrong. I'm a developer in a fortune 500 company\nand I test everything I do. By the time it goes to Alpha test, only field\nanomalies break my code. So to say \"SDEs are not QAEs, and the distinction\nshould not be blurred, if you want to maintain true quality.\" you're, well,\nfull of crap. Your statements should be flushed. Not everyone has poor\nsoftware developers working for them. A true programmer can take the project\nfrom cradle to grave, or more aptly from napkin scribblings to deployment and\nnot have problems. I have 3000 sites with my software for over three years and\nhave had 2 bugs related to errors on my part. Proper Software Engineering\nincludes heavy testing during development. I also know of one company that\nspends Billions (Microsoft) on everything you stated, and well, let their end\nproduct speak for itself. It does not support your conclusion. I rest my case.\n-T-\n\nReplyDelete\n\nReplies\n\nReply\n\n  24. Mike BriaJanuary 26, 2007 at 6:52:00 AM PST\n\nOne word: awesome. (okay, I lied) And, thanks.\n\nReplyDelete\n\nReplies\n\nReply\n\n  25. strimpsterJanuary 26, 2007 at 6:55:00 AM PST\n\nTo respond to Joe #302 I think that you may want to rethink your position and\nhelp usher your company into quicker development. Everyone in your company\nshould be involved in QA activities because it is everyone's job. If the\ndevelopers learn from their own mistakes, then they should be constantly\nimproving and not have to bother you with errors that could be fixed by them.\nThe QAE should be worrying more about integration testing rather than unit\ntesting, but the SDE should also ensure that their code is scalable and will\nnot cause errors due to an inability to forsee problems.\n\nReplyDelete\n\nReplies\n\nReply\n\n  26. RobertJanuary 26, 2007 at 6:56:00 AM PST\n\newwwwwww. possible marketing backfire? \"google\" & \"crap\"...\n\nReplyDelete\n\nReplies\n\nReply\n\n  27. Consultant NinjaJanuary 26, 2007 at 7:41:00 AM PST\n\nI have a simple question as a former-programmer, now business guy, between dev\nand QA.\n\nWhy not put pay performance targets on both sides as incentives per testing\nrelease?\n\nIn other words, each QA person gets $10 for each bug they find (up to 10, or\nwhatever). Each development person gets $10 for the number of bugs not found\nunder a certain target (10, or whatever).\n\nSeems like an easy way to get people more motivated about the whole testing\nprocess.\n\nReplyDelete\n\nReplies\n\nReply\n\n  28. StewartJanuary 26, 2007 at 8:23:00 AM PST\n\nTo respond to Major Tom: I commend you on having only 2 bugs in your portion\nof code with a 3000 site deployment. However, I'm wondering if you're an\nanomaly and am concerned that this methodology sets a dangerous precedent.\nConsidering the approach of a development engineer should be, and in the best\ncompanies is, fundamentally different from that of a test engineer. The DE is\nsolving a positive functional problem, while the TE is addressing the\nvalidation and exceptions associated with the DE's solution. When presented\nwith requirements from (in most cases) Marketing PMs, the DE considers how to\nmake the feature/product work, while the TE considers where and how the\nfeature/product will be deployed (functionality and performance testing) and\nunder what circumstances it might break (stress, robustness, and negative\ntesting). As much as we try in our smaller organization to unite the DE and TE\nmindset to save headcount and to arguably improve unit testing prior to the\nhand-off to TEs, they will always remain firmly divided.\n\nReplyDelete\n\nReplies\n\nReply\n\n  29. UnknownJanuary 26, 2007 at 8:59:00 AM PST\n\nIts a great idea ... Well as long as I am not asked to do 'pairing' inside the\ntoilet.\n\nReplyDelete\n\nReplies\n\nReply\n\n  30. Russ NelsonJanuary 26, 2007 at 10:15:00 AM PST\n\nI had very good success writing my own tests as I was writing libdomainkeys.\nAs I wrote the code, I would create the test. Every branch was labelled with a\ncomment naming the test which forced that branch to be executed. Too bad our\ntext editors don't (usually) support hot-linking between source files.\n\nReplyDelete\n\nReplies\n\nReply\n\n  31. UnknownJanuary 26, 2007 at 11:44:00 AM PST\n\nGives a new meaning to \"toilet training\" !\n\nReplyDelete\n\nReplies\n\nReply\n\n  32. BPDecafJanuary 27, 2007 at 4:37:00 AM PST\n\nThank you for your sane and sensible comments Major Tom.\n\nReplyDelete\n\nReplies\n\nReply\n\n  33. Jeff FryJanuary 27, 2007 at 6:56:00 PM PST\n\nMichael said...\n\nI have a simple question as a former-programmer, now business guy, between dev\nand QA.\n\nWhy not put pay performance targets on both sides as incentives per testing\nrelease?\n\nIn other words, each QA person gets $10 for each bug they find (up to 10, or\nwhatever). Each development person gets $10 for the number of bugs not found\nunder a certain target (10, or whatever).\n\nSeems like an easy way to get people more motivated about the whole testing\nprocess.\n\nThis sounds like a well intentioned idea, but it leads inevitably toward\ndisastrous consequences.\n\nReplyDelete\n\nReplies\n\nReply\n\n  34. Ken KuhlmanJanuary 27, 2007 at 7:35:00 PM PST\n\nAnd here I've always thought of testing as a crappy, #2 priority. Thanks for\nthrowing another log on the fire & helping me see the light!\n\n-Ken\n\nReplyDelete\n\nReplies\n\nReply\n\n  35. Jeffrey FredrickJanuary 27, 2007 at 10:22:00 PM PST\n\nJust reading material? You can do better.\n\n(From eXtreme Feedback)\n\nReplyDelete\n\nReplies\n\nReply\n\n  36. PhilJanuary 27, 2007 at 10:37:00 PM PST\n\nRe: SDE's are not QAE's.\n\nI think a point to be made here is that engineers of any sort tend to get\naccustomed to an idea or algorithm or whatever they've been working on. They\nsee it as working just fine. The QA people are there to ensure that your idea\nof fine agrees with everyone elses. Sure, maybe it doesn't have bugs, but\nmaybe the interface isn't as intuitive as it might be, or whatever. The point\nis, the more people that look at it before production, the more likely it is\nto be useful and useable. If you want to streamline your development timeline,\nyou include QA people in the development cycle, to add their input as the\nproject progresses. That way problems can be identified and resolved before it\nbecomes a major problem. But you already knew that - it's your basic\nconcurrent engineering model you learned about in college. I hope.\n\nReplyDelete\n\nReplies\n\nReply\n\n  37. Adam MonsenJanuary 27, 2007 at 11:13:00 PM PST\n\nI actually googled for \"Linux Nerd 2000\" to see if I was missing out on some\ncool new magazine. Heh.\n\nReplyDelete\n\nReplies\n\nReply\n\n  38. Pradeep SoundararajanJanuary 28, 2007 at 9:56:00 PM PST\n\nMichelle from Google suggested to share the following with you all:\n\nKudos to the effort of brainstorming the idea of testing bumper(Harry Robinson\nstyle) stickers and tests in toilets.\n\nHere are my 2 cents:\n\nToilet stickers:\n\n1\\. The better you code, the lesser it stinks. 2. You expect the toilet to be\nclean, as we expect your code to be. 3. You mess, we spot, you clean. 4. You\ndropped the paper roll by mistake. Fix it ! 5. Thanks for remembering that you\nneed to go back and fix the bug I found. 6. for ($i=0,$i< ($i--1);++$i) - I am\nnot reminding your coding error :) 7. 234/8 - No! It's a cricket match score\nand not 234 bugs per 8 KLOC. 8. I am your friend but unfortunately our\ncustomers aren't. 9. The more time you spend here, the less time you distract\nme and the more bugs I find. 10. Did you come here running to think about the\nexplanation you want to offer on why you missed that bug? 11. Don't believe me\nwhen I say; your code is working fine so far. I just want to give you a bigger\nsurprise. 12. I heard you say, \"Please leave me alone\" and that is why I am\nnot reminding you of the bug that took the longest time for you to fix it.\n\nTests:\n\n1\\. An end user thought of running our program with a platform we no longer\nsupport. Should he get an error message - \"You are not supposed to that\" ? 2.\n\"Arggh! The page is corrupted.\" - Does this mean you were unable to handle an\nexception? 3. I am going on a 3 week vacation and while I come back, I will\nhave a report that my script generated on the reliability test. Are you sure,\nI wont see anything in RED? 4. \"Sorry, no donut for you\" - Who got the donut\nthen? 5. The voice kept breaking, when I was using a dial up connection. Did\n._ _ _ know? 6. I hear too many click sounds when I login. Do I have an option\nto hear less clicks? 7. I refer to James Bach's 36 heuristics to test. Do you\nuse them to code? 8. When firewall is ON, your code isn't. 9. Proxies do not\nby pass bugs. 10. I tried closing the window in between. It goes away smoothy\nwithout the error message you expected to see. 11. I am always amazed at your\ncoding skills but not the way you build your code. 12. His code never merges\nwith anyone. Beware if you are merging with him. 13. I found a bug with your\nunit test script and hence I know what to test. 14. Last time my developer\nforgot to enable the logger. He spent a week convincing me to reproduce the\nissue. 15. Psst! Don't tell this to anyone. I look at our competitor product\nknown issues and test them on our product. This helped me catch bugs faster :)\n\nReplyDelete\n\nReplies\n\nReply\n\n  39. abhitestJanuary 29, 2007 at 12:37:00 AM PST\n\naa guys nice idea, when is the release...\n\nReplyDelete\n\nReplies\n\nReply\n\n  40. AddictivKaosJanuary 29, 2007 at 5:13:00 AM PST\n\ndebugging code sucks; testing rocks; debugging test code really, really sucks\n\nReplyDelete\n\nReplies\n\nReply\n\n  41. Ben SimoFebruary 1, 2007 at 3:31:00 PM PST\n\nMichael said...\n\nI have a simple question as a former-programmer, now business guy, between dev\nand QA.\n\nWhy not put pay performance targets on both sides as incentives per testing\nrelease?\n\nIn other words, each QA person gets $10 for each bug they find (up to 10, or\nwhatever). Each development person gets $10 for the number of bugs not found\nunder a certain target (10, or whatever).\n\nSeems like an easy way to get people more motivated about the whole testing\nprocess.\n\nThis is a horrible idea.\n\nI will not improve quality. It will not improve relations between business,\ndevelopers, and testers. In fact, it will make relations worse within the\ncompany and can lead to real bug escapes that impact customers.\n\nThis will only lead to finger pointing and time wasted chasing unimportant and\nduplicate \"bugs\".\n\nAs a tester, I have often had to make the decision about reporting a bug as\none or 100,000. I don't know if the 100,000 errors my automated test found are\ndue to 100,000 different problems in the code or just one. I could report them\nseparately, or I could report them in groups, or I could pick up the phone and\ntalk to a developer than could help me determine how the bug should be\nreported.\n\nAnd what if the bug exists because a QA person did a poor job of reviewing the\nrequirements? I could easily provide input to requirements that I know will\nlead to bugs just to get a bonus.\n\nNot all bugs are due to a developer making a mistake in their piece of code.\nSome are due to bad requirements given to the developer. Some are due to bugs\nsomeone else created. If one developer's code does not properly interact with\nanother developer's code, who is to blame? If the issue to bad documentation\nand requirements, do we blame QA?\n\nAnd then we could argue about what is and what is not a bug.\n\nThere was a Dilbert cartoon many years ago about the idea of rewards for\nfixing bugs: Now, I'm going to code me a new minivan.\n\nReplyDelete\n\nReplies\n\nReply\n\n  42. AdamFebruary 4, 2007 at 4:28:00 PM PST\n\nI like the idea...some of the best ideas come to me when I'm in the \"john\" ^^\nlol\n\nReplyDelete\n\nReplies\n\nReply\n\n  43. Seo Practices GuideFebruary 7, 2007 at 7:34:00 AM PST\n\nThat is a great idea, I will talk my boss into it, a \"SEO Testing Practices\nProgram in the Toilet\", amazing, thanks.\n\nReplyDelete\n\nReplies\n\nReply\n\n  44. WoodyMarch 6, 2007 at 4:49:00 AM PST\n\nGreat idea to share the testing experiences from Google with the whole world!\n\nHowever you promised to post TotT's \"on a regular basis\". The last TotT\nepisode was published over a month ago. So what's this regular basis?\n\nReplyDelete\n\nReplies\n\nReply\n\n  45. Nate MurrayMarch 7, 2007 at 8:10:00 PM PST\n\nI also had a question about the regularity of this. I think its a great idea,\nbut I've had a hard time finding the collection of these. Is there a place for\npeople to submit these, because I could come up with a few episodes.\n\nReplyDelete\n\nReplies\n\nReply\n\n  46. Komail NooriAugust 17, 2007 at 5:16:00 AM PDT\n\nI like the idea. I will definetely try it out.\n\nRegards, Komail Noori Web Site Design - SEO Expert\n\nReplyDelete\n\nReplies\n\nReply\n\n  47. M@rceOctober 2, 2008 at 9:15:00 AM PDT\n\nExcelente aporte a toda la comunidad de testers en todo el mundo; nos d\u00e1 una\nvisi\u00f3n m\u00e1s cercana del entorno laboral y relacional dentro de Google. Gracias\ny saludos!!\n\nReplyDelete\n\nReplies\n\nReply\n\n  48. RohitJuly 10, 2009 at 9:57:00 AM PDT\n\nYou get it! It's one serene place for thinking of creative ideas.\n\nKudos!\n\nReplyDelete\n\nReplies\n\nReply\n\n  49. SureshAugust 26, 2009 at 5:40:00 AM PDT\n\nIt seems funniest activity i ever seen...!! any way time saving work\n\nReplyDelete\n\nReplies\n\nReply\n\n  50. AnonymousSeptember 15, 2009 at 3:56:00 PM PDT\n\nUntil I saw this post, I always thought it was Google Tricks of the Trade.\n\nI guess sometimes truth is stranger than fiction!\n\nReplyDelete\n\nReplies\n\nReply\n\n  51. RNB ResearchSeptember 19, 2009 at 5:58:00 AM PDT\n\nInteresting text. You have a nice blog. Keep it up!\n\nReplyDelete\n\nReplies\n\nReply\n\n  52. Movies Gallery 2011April 26, 2011 at 6:38:00 AM PDT\n\nSuch a wonderful idea you shown up. Thanks for sharing.\n\nReplyDelete\n\nReplies\n\nReply\n\n  53. AnonymousFebruary 13, 2013 at 3:03:00 AM PST\n\nGreat Idea\n\nReplyDelete\n\nReplies\n\nReply\n\n  54. AnonymousJanuary 21, 2017 at 9:03:00 PM PST\n\n10 Years have passed, you're still the Lighthouse.\n\nReplyDelete\n\nReplies\n\nReply\n\n  55. Hemant LatawaAugust 19, 2021 at 1:01:00 AM PDT\n\n13 Years passed now. I dont know think they are still in lighthouse\n\nReplyDelete\n\nReplies\n\nReply\n\nAdd comment\n\nLoad more...\n\nThe comments you read and contribute here belong only to the person who posted\nthem. We reserve the right to remove off-topic comments.\n\n## Labels\n\n  * TotT 95\n  * GTAC 61\n  * James Whittaker 42\n  * Misko Hevery 32\n  * Anthony Vallone 27\n  * Code Health 25\n  * Patrick Copeland 23\n  * Jobs 18\n  * Andrew Trenk 12\n  * C++ 11\n  * Patrik H\u00f6glund 8\n  * JavaScript 7\n  * Allen Hutchison 6\n  * George Pirocanac 6\n  * Zhanyong Wan 6\n  * Harry Robinson 5\n  * Java 5\n  * Julian Harty 5\n  * Alberto Savoia 4\n  * Ben Yu 4\n  * Erik Kuefler 4\n  * Philip Zembrod 4\n  * Shyam Seshadri 4\n  * Adam Bender 3\n  * Chrome 3\n  * Dillon Bly 3\n  * John Thomas 3\n  * Lesley Katzen 3\n  * Marc Kaplan 3\n  * Markus Clermont 3\n  * Max Kanat-Alexander 3\n  * Sonal Shah 3\n  * APIs 2\n  * Abhishek Arya 2\n  * Alan Myrvold 2\n  * Alek Icev 2\n  * Android 2\n  * April Fools 2\n  * Chaitali Narla 2\n  * Chris Lewis 2\n  * Chrome OS 2\n  * Diego Salas 2\n  * Dori Reuveni 2\n  * Jason Arbon 2\n  * Jochen Wuttke 2\n  * Kostya Serebryany 2\n  * Marc Eaddy 2\n  * Marko Ivankovi\u0107 2\n  * Mobile 2\n  * Oliver Chang 2\n  * Simon Stewart 2\n  * Stefan Kennedy 2\n  * Test Flakiness 2\n  * Tony Voellm 2\n  * WebRTC 2\n  * Yiming Sun 2\n  * Yvette Nameth 2\n  * Zuri Kemp 2\n  * Aaron Jacobs 1\n  * Adam Porter 1\n  * Adam Raider 1\n  * Adel Saoud 1\n  * Alan Faulkner 1\n  * Alex Eagle 1\n  * Anantha Keesara 1\n  * Antoine Picard 1\n  * App Engine 1\n  * Ari Shamash 1\n  * Arif Sukoco 1\n  * Benjamin Pick 1\n  * Bob Nystrom 1\n  * Bruce Leban 1\n  * Carlos Arguelles 1\n  * Carlos Israel Ortiz Garc\u00eda 1\n  * Cathal Weakliam 1\n  * Christopher Semturs 1\n  * Clay Murphy 1\n  * Dagang Wei 1\n  * Dan Shi 1\n  * Dan Willemsen 1\n  * Dave Chen 1\n  * Dave Gladfelter 1\n  * David Mandelberg 1\n  * Derek Snyder 1\n  * Diego Cavalcanti 1\n  * Dmitry Vyukov 1\n  * Eduardo Bravo Ortiz 1\n  * Ekaterina Kamenskaya 1\n  * Elliott Karpilovsky 1\n  * Espresso 1\n  * Felipe Sodr\u00e9 1\n  * Francois Aube 1\n  * Google+ 1\n  * Goran Petrovic 1\n  * Goranka Bjedov 1\n  * Hank Duan 1\n  * Havard Rast Blok 1\n  * Hongfei Ding 1\n  * Jason Elbaum 1\n  * Jason Huggins 1\n  * Jay Han 1\n  * Jeff Hoy 1\n  * Jeff Listfield 1\n  * Jessica Tomechak 1\n  * Jim Reardon 1\n  * Joe Allan Muharsky 1\n  * Joel Hynoski 1\n  * John Micco 1\n  * John Penix 1\n  * Jonathan Rockway 1\n  * Jonathan Velasquez 1\n  * Josh Armour 1\n  * Julie Ralph 1\n  * Kai Kent 1\n  * Karin Lundberg 1\n  * Kaue Silveira 1\n  * Kevin Bourrillion 1\n  * Kevin Graney 1\n  * Kirkland 1\n  * Kurt Alfred Kluever 1\n  * Manjusha Parvathaneni 1\n  * Marek Kiszkis 1\n  * Marius Latinis 1\n  * Mark Ivey 1\n  * Mark Manley 1\n  * Mark Striebeck 1\n  * Matt Lowrie 1\n  * Meredith Whittaker 1\n  * Michael Bachman 1\n  * Michael Klepikov 1\n  * Mike Aizatsky 1\n  * Mike Wacker 1\n  * Mona El Mahdy 1\n  * Noel Yap 1\n  * Palak Bansal 1\n  * Patricia Legaspi 1\n  * Per Jacobsson 1\n  * Peter Arrenbrecht 1\n  * Peter Spragins 1\n  * Phil Norman 1\n  * Phil Rollet 1\n  * Pooja Gupta 1\n  * Project Showcase 1\n  * Radoslav Vasilev 1\n  * Rajat Dewan 1\n  * Rajat Jain 1\n  * Rich Martin 1\n  * Richard Bustamante 1\n  * Roshan Sembacuttiaratchy 1\n  * Ruslan Khamitov 1\n  * Sam Lee 1\n  * Sean Jordan 1\n  * Sharon Zhou 1\n  * Shiva Garg 1\n  * Siddartha Janga 1\n  * Simran Basi 1\n  * Stan Chan 1\n  * Stephen Ng 1\n  * Tejas Shah 1\n  * Test Analytics 1\n  * Test Engineer 1\n  * Tim Lyakhovetskiy 1\n  * Titus Winters 1\n  * Tom O'Neill 1\n  * Vojta J\u00edna 1\n  * automation 1\n  * dead code 1\n  * iOS 1\n  * mutation testing 1\n\n## Archive\n\n  * \u25ba 2024 (5)\n\n    * \u25ba Apr (3)\n    * \u25ba Mar (1)\n    * \u25ba Feb (1)\n\n  * \u25ba 2023 (14)\n\n    * \u25ba Dec (2)\n    * \u25ba Nov (2)\n    * \u25ba Oct (5)\n    * \u25ba Sep (3)\n    * \u25ba Aug (1)\n    * \u25ba Apr (1)\n\n  * \u25ba 2022 (2)\n\n    * \u25ba Feb (2)\n\n  * \u25ba 2021 (3)\n\n    * \u25ba Jun (1)\n    * \u25ba Apr (1)\n    * \u25ba Mar (1)\n\n  * \u25ba 2020 (8)\n\n    * \u25ba Dec (2)\n    * \u25ba Nov (1)\n    * \u25ba Oct (1)\n    * \u25ba Aug (2)\n    * \u25ba Jul (1)\n    * \u25ba May (1)\n\n  * \u25ba 2019 (4)\n\n    * \u25ba Dec (1)\n    * \u25ba Nov (1)\n    * \u25ba Jul (1)\n    * \u25ba Jan (1)\n\n  * \u25ba 2018 (7)\n\n    * \u25ba Nov (1)\n    * \u25ba Sep (1)\n    * \u25ba Jul (1)\n    * \u25ba Jun (2)\n    * \u25ba May (1)\n    * \u25ba Feb (1)\n\n  * \u25ba 2017 (17)\n\n    * \u25ba Dec (1)\n    * \u25ba Nov (1)\n    * \u25ba Oct (1)\n    * \u25ba Sep (1)\n    * \u25ba Aug (1)\n    * \u25ba Jul (2)\n    * \u25ba Jun (2)\n    * \u25ba May (3)\n    * \u25ba Apr (2)\n    * \u25ba Feb (1)\n    * \u25ba Jan (2)\n\n  * \u25ba 2016 (15)\n\n    * \u25ba Dec (1)\n    * \u25ba Nov (2)\n    * \u25ba Oct (1)\n    * \u25ba Sep (2)\n    * \u25ba Aug (1)\n    * \u25ba Jun (2)\n    * \u25ba May (3)\n    * \u25ba Apr (1)\n    * \u25ba Mar (1)\n    * \u25ba Feb (1)\n\n  * \u25ba 2015 (14)\n\n    * \u25ba Dec (1)\n    * \u25ba Nov (1)\n    * \u25ba Oct (2)\n    * \u25ba Aug (1)\n    * \u25ba Jun (1)\n    * \u25ba May (2)\n    * \u25ba Apr (2)\n    * \u25ba Mar (1)\n    * \u25ba Feb (1)\n    * \u25ba Jan (2)\n\n  * \u25ba 2014 (24)\n\n    * \u25ba Dec (2)\n    * \u25ba Nov (1)\n    * \u25ba Oct (2)\n    * \u25ba Sep (2)\n    * \u25ba Aug (2)\n    * \u25ba Jul (3)\n    * \u25ba Jun (3)\n    * \u25ba May (2)\n    * \u25ba Apr (2)\n    * \u25ba Mar (2)\n    * \u25ba Feb (1)\n    * \u25ba Jan (2)\n\n  * \u25ba 2013 (16)\n\n    * \u25ba Dec (1)\n    * \u25ba Nov (1)\n    * \u25ba Oct (1)\n    * \u25ba Aug (2)\n    * \u25ba Jul (1)\n    * \u25ba Jun (2)\n    * \u25ba May (2)\n    * \u25ba Apr (2)\n    * \u25ba Mar (2)\n    * \u25ba Jan (2)\n\n  * \u25ba 2012 (11)\n\n    * \u25ba Dec (1)\n    * \u25ba Nov (2)\n    * \u25ba Oct (3)\n    * \u25ba Sep (1)\n    * \u25ba Aug (4)\n\n  * \u25ba 2011 (39)\n\n    * \u25ba Nov (2)\n    * \u25ba Oct (5)\n    * \u25ba Sep (2)\n    * \u25ba Aug (4)\n    * \u25ba Jul (2)\n    * \u25ba Jun (5)\n    * \u25ba May (4)\n    * \u25ba Apr (3)\n    * \u25ba Mar (4)\n    * \u25ba Feb (5)\n    * \u25ba Jan (3)\n\n  * \u25ba 2010 (37)\n\n    * \u25ba Dec (3)\n    * \u25ba Nov (3)\n    * \u25ba Oct (4)\n    * \u25ba Sep (8)\n    * \u25ba Aug (3)\n    * \u25ba Jul (3)\n    * \u25ba Jun (2)\n    * \u25ba May (2)\n    * \u25ba Apr (3)\n    * \u25ba Mar (3)\n    * \u25ba Feb (2)\n    * \u25ba Jan (1)\n\n  * \u25ba 2009 (54)\n\n    * \u25ba Dec (3)\n    * \u25ba Nov (2)\n    * \u25ba Oct (3)\n    * \u25ba Sep (5)\n    * \u25ba Aug (4)\n    * \u25ba Jul (15)\n    * \u25ba Jun (8)\n    * \u25ba May (3)\n    * \u25ba Apr (2)\n    * \u25ba Feb (5)\n    * \u25ba Jan (4)\n\n  * \u25ba 2008 (75)\n\n    * \u25ba Dec (6)\n    * \u25ba Nov (8)\n    * \u25ba Oct (9)\n    * \u25ba Sep (8)\n    * \u25ba Aug (9)\n    * \u25ba Jul (9)\n    * \u25ba Jun (6)\n    * \u25ba May (6)\n    * \u25ba Apr (4)\n    * \u25ba Mar (4)\n    * \u25ba Feb (4)\n    * \u25ba Jan (2)\n\n  * \u25bc 2007 (41)\n\n    * \u25ba Oct (6)\n    * \u25ba Sep (5)\n    * \u25ba Aug (3)\n    * \u25ba Jul (2)\n    * \u25ba Jun (2)\n    * \u25ba May (2)\n    * \u25ba Apr (7)\n    * \u25ba Mar (5)\n    * \u25ba Feb (5)\n    * \u25bc Jan (4)\n\n      * Where are the developer-testers and tester-develop...\n      * TotT: Better Stubbing in Python\n      * Welcome to the Google Testing Blog\n      * Introducing \"Testing on the Toilet\"\n\n## Feed\n\n  * Google\n  * Privacy\n  * Terms\n\nDiese Website verwendet Cookies von Google, um Dienste anzubieten und Zugriffe\nzu analysieren. Deine IP-Adresse und dein User-Agent werden zusammen mit\nMesswerten zur Leistung und Sicherheit f\u00fcr Google freigegeben. So k\u00f6nnen\nNutzungsstatistiken generiert, Missbrauchsf\u00e4lle erkannt und behoben und die\nQualit\u00e4t des Dienstes gew\u00e4hrleistet werden.Weitere InformationenOk\n\n", "frontpage": false}
