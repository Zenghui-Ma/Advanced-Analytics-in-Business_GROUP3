{"aid": "40052939", "title": "Show HN: Typesync \u2013 Autogenerate types for all Firestore clients", "url": "https://github.com/kafkas/typesync", "domain": "github.com/kafkas", "votes": 4, "user": "seymurkafkas", "posted_at": "2024-04-16 15:06:56", "comments": 0, "source_title": "GitHub - kafkas/typesync: Autogenerate Firestore type definitions for all platforms", "source_text": "GitHub - kafkas/typesync: Autogenerate Firestore type definitions for all\nplatforms\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nkafkas / typesync Public\n\n  * Notifications\n  * Fork 0\n  * Star 7\n\nAutogenerate Firestore type definitions for all platforms\n\ndocs.typesync.org\n\n### License\n\nAGPL-3.0 license\n\n7 stars 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# kafkas/typesync\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n10 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nkafkas0.1.1d36049e \u00b7\n\n## History\n\n85 Commits  \n  \n### .circleci\n\n|\n\n### .circleci\n\n| Add 2 new firebase platforms (#103)  \n  \n### .vscode\n\n|\n\n### .vscode\n\n| Separate renderers from generators (#45)  \n  \n### ci\n\n|\n\n### ci\n\n| ci: init integration test workflow (#90)  \n  \n### public\n\n|\n\n### public\n\n| Fix json schema (#105)  \n  \n### scripts\n\n|\n\n### scripts\n\n| Generate JSON schema for Intellisense (#85)  \n  \n### src\n\n|\n\n### src\n\n| Rename pathToDefinition to definition (#104)  \n  \n### tests/test-poetry-project\n\n|\n\n### tests/test-poetry-project\n\n| ci: init integration test workflow (#90)  \n  \n### .eslintignore\n\n|\n\n### .eslintignore\n\n| Set up tests (#39)  \n  \n### .eslintrc.json\n\n|\n\n### .eslintrc.json\n\n| Convert to esm and set up ink (#66)  \n  \n### .firebaserc\n\n|\n\n### .firebaserc\n\n| Generate JSON schema for Intellisense (#85)  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Add Python tests (#84)  \n  \n### .prettierignore\n\n|\n\n### .prettierignore\n\n| Implement docs for models and fields (#6)  \n  \n### .prettierrc.json\n\n|\n\n### .prettierrc.json\n\n| Set up import sorter (#30)  \n  \n### CHANGELOG.md\n\n|\n\n### CHANGELOG.md\n\n| Release prep (#102)  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| Release prep (#102)  \n  \n### README.md\n\n|\n\n### README.md\n\n| Release prep (#102)  \n  \n### babel.config.js\n\n|\n\n### babel.config.js\n\n| Set up tests (#39)  \n  \n### firebase.json\n\n|\n\n### firebase.json\n\n| Generate JSON schema for Intellisense (#85)  \n  \n### jest.config.global.ts\n\n|\n\n### jest.config.global.ts\n\n| Set up tests (#39)  \n  \n### jest.config.ts\n\n|\n\n### jest.config.ts\n\n| Convert to esm and set up ink (#66)  \n  \n### package.json\n\n|\n\n### package.json\n\n| 0.1.1  \n  \n### tsconfig.build.json\n\n|\n\n### tsconfig.build.json\n\n| Generate JSON schema for Intellisense (#85)  \n  \n### tsconfig.json\n\n|\n\n### tsconfig.json\n\n| Convert to esm and set up ink (#66)  \n  \n### tsconfig.test.json\n\n|\n\n### tsconfig.test.json\n\n| Convert to esm and set up ink (#66)  \n  \n### yarn.lock\n\n|\n\n### yarn.lock\n\n| Generate JSON schema for Intellisense (#85)  \n  \n## Repository files navigation\n\n# Typesync\n\nAutogenerate Firestore type definitions for all platforms\n\nTypesync is an open-source schema management tool for Firestore. It allows you\nto maintain a single source of truth for your Firestore architecture. With\nthis schema in place, you can effortlessly auto-generate type definitions for\nmultiple platforms like TypeScript, Python, Swift and more using the CLI tool.\nTypesync also lets you generate other useful things like Firestore Rules,\nCloud Functions boilerplate and documentation for your models.\n\nView the full documentation (docs) \u25b8\n\n    \n    \n    %%{ init: { 'theme': 'base', 'themeVariables': { 'primaryColor': '#fff', 'primaryTextColor': '#000', 'primaryBorderColor': '#000', 'lineColor': '#000', 'secondaryColor': '#006100', 'tertiaryColor': '#fff' } } }%% graph LR; A[Typesync schema]; A --> B[CLI]; B --> C[TypeScript]; B --> D[Swift]; B --> E[Python]; B --> F[Cloud Functions boilerplate]; B --> G[Security Rules]; C --> H[Codebase]; D --> H; E --> H; F --> H; G --> H;\n\n## Overview\n\n  1. Installation\n  2. Quick Start\n  3. License\n\n## Installation\n\nYou can install the Typesync CLI either globally or on a per-project basis\n(locally) depending on your use case. Both options are perfectly valid but,\nwhen possible, it's a good idea to install it locally to explicitly tie your\nproject to a specific Typesync CLI version.\n\nPrerequisite: The Typesync CLI requires Node.js 18 or above to be installed on\nyour machine.\n\n    \n    \n    npm i -g typesync-cli\n\n## Quick Start\n\nOnce you've installed the Typesync CLI, create a directory within your project\nfor your Typesync definition (e.g. /definition) and add the following YAML\nfile into it.\n\n    \n    \n    # yaml-language-server: $schema=https://schema.typesync.org/v0.1.json UserRole: model: alias docs: Represents a user's role within a project. type: type: enum members: - label: Owner value: owner - label: Admin value: admin - label: Member value: member User: model: document docs: Represents a user that belongs to a project. type: type: object fields: username: type: string docs: A string that uniquely identifies the user within a project. role: type: UserRole created_at: type: timestamp\n\nThen run typesync generate to generate the types for the relevant platform.\nFor example, if your project is a Node.js backend that uses Firebase Admin SDK\n(version 11), run the following command:\n\n    \n    \n    typesync generate --definition 'definition/**/*.yml' --platform ts:firebase-admin:11 --outFile models.ts\n\nThis will generate the types and write them to the specified outFile. Feel\nfree to change this to any other path within your project.\n\nYou can now edit the definition as you wish. Feel free to add, remove or\nrename the models and run the generation command as many times as you need.\n\nYou can also split your definition into multiple files. The --definition\n'definition/**/*.yml' option ensures that the Typesync CLI will treat all the\nYAML files under /definition as your Typesync definition.\n\n# License\n\nThis project is made available under the AGPL-3.0 License.\n\n## About\n\nAutogenerate Firestore type definitions for all platforms\n\ndocs.typesync.org\n\n### Resources\n\nReadme\n\n### License\n\nAGPL-3.0 license\n\nActivity\n\n### Stars\n\n7 stars\n\n### Watchers\n\n1 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases\n\n10 tags\n\n## Contributors 2\n\n  * kafkas Anar Kafkas\n  * seymurkafkas Seymur Kafkas\n\n## Languages\n\n  * TypeScript 91.7%\n  * Python 3.1%\n  * JavaScript 2.8%\n  * HTML 1.4%\n  * Other 1.0%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
