{"aid": "40145750", "title": "Show HN: I ported Suno AI's Bark model in C for fast realistic audio generation", "url": "https://github.com/PABannier/bark.cpp", "domain": "github.com/pabannier", "votes": 1, "user": "el_pa_b", "posted_at": "2024-04-24 15:42:55", "comments": 0, "source_title": "GitHub - PABannier/bark.cpp: Port of Suno AI's Bark in C/C++ for fast inference", "source_text": "GitHub - PABannier/bark.cpp: Port of Suno AI's Bark in C/C++ for fast\ninference\n\nSkip to content\n\n## Navigation Menu\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nPABannier / bark.cpp Public\n\n  * Notifications\n  * Fork 36\n  * Star 514\n\nPort of Suno AI's Bark in C/C++ for fast inference\n\n### License\n\nMIT license\n\n514 stars 36 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# PABannier/bark.cpp\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n6 Branches\n\n1 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nprzemocci : add building in MSYS2 environments (Windows) (#153)Apr 22,\n2024d8bd0fd \u00b7 Apr 22, 2024Apr 22, 2024\n\n## History\n\n92 Commits  \n  \n### .github/workflows\n\n|\n\n### .github/workflows\n\n| ci : add building in MSYS2 environments (Windows) (#153)| Apr 22, 2024  \n  \n### .vscode\n\n|\n\n### .vscode\n\n| sync: use encodec's latest version as a submodule (#124)| Feb 13, 2024  \n  \n### assets\n\n|\n\n### assets\n\n| doc/mnt: update README with proper cloning instructions + banner (#125)| Oct\n29, 2023  \n  \n### encodec.cpp @ 68e1801\n\n|\n\n### encodec.cpp @ 68e1801\n\n| model : supporting Bark small model (#149)| Apr 20, 2024  \n  \n### examples\n\n|\n\n### examples\n\n| cmake : fix server example building on MSYS2 environments (Windows) (#...|\nApr 22, 2024  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Minor improvements (#147)| Apr 16, 2024  \n  \n### .gitmodules\n\n|\n\n### .gitmodules\n\n| sync: use encodec's latest version as a submodule (#124)| Feb 13, 2024  \n  \n### CMakeLists.txt\n\n|\n\n### CMakeLists.txt\n\n| dbg: fix the forward pass (#139)| Apr 10, 2024  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| DOC Add license file (#25)| Jul 30, 2023  \n  \n### README.md\n\n|\n\n### README.md\n\n| model : supporting Bark small model (#149)| Apr 20, 2024  \n  \n### bark.cpp\n\n|\n\n### bark.cpp\n\n| model : supporting Bark small model (#149)| Apr 20, 2024  \n  \n### bark.h\n\n|\n\n### bark.h\n\n| model : supporting Bark small model (#149)| Apr 20, 2024  \n  \n### convert.py\n\n|\n\n### convert.py\n\n| model : supporting Bark small model (#149)| Apr 20, 2024  \n  \n### download_weights.py\n\n|\n\n### download_weights.py\n\n| model : supporting Bark small model (#149)| Apr 20, 2024  \n  \n### requirements.txt\n\n|\n\n### requirements.txt\n\n| mnt: add back requirements.txt (#141)| Apr 10, 2024  \n  \n## Repository files navigation\n\n# bark.cpp\n\nRoadmap / encodec.cpp / ggml\n\nInference of SunoAI's bark model in pure C/C++.\n\n## Description\n\nWith bark.cpp, our goal is to bring real-time realistic multilingual text-to-\nspeech generation to the community.\n\n  * Plain C/C++ implementation without dependencies\n  * AVX, AVX2 and AVX512 for x86 architectures\n  * CPU and GPU compatible backends\n  * Mixed F16 / F32 precision\n  * 4-bit, 5-bit and 8-bit integer quantization\n  * Metal and CUDA backends\n\nModels supported\n\n  * Bark Small\n  * Bark Large\n\nModels we want to implement! Please open a PR :)\n\n  * AudioCraft (#62)\n  * AudioLDM2 (#82)\n  * Piper (#135)\n\nDemo on Google Colab (#95)\n\nHere is a typical run using bark.cpp:\n\n    \n    \n    make -j && ./main -p \"This is an audio generated by bark.cpp\" __ __ / /_ ____ ______/ /__ _________ ____ / __ \\/ __ `/ ___/ //_/ / ___/ __ \\/ __ \\ / /_/ / /_/ / / / ,< _ / /__/ /_/ / /_/ / /_.___/\\__,_/_/ /_/|_| (_) \\___/ .___/ .___/ /_/ /_/ bark_tokenize_input: prompt: 'This is an audio generated by bark.cpp' bark_tokenize_input: number of tokens in prompt = 513, first 8 tokens: 20795 20172 20199 33733 58966 20203 28169 20222 Generating semantic tokens: [========> ] (17%) bark_print_statistics: sample time = 10.98 ms / 138 tokens bark_print_statistics: predict time = 614.96 ms / 4.46 ms per token bark_print_statistics: total time = 633.54 ms Generating coarse tokens: [==================================================>] (100%) bark_print_statistics: sample time = 3.75 ms / 410 tokens bark_print_statistics: predict time = 3263.17 ms / 7.96 ms per token bark_print_statistics: total time = 3274.00 ms Generating fine tokens: [==================================================>] (100%) bark_print_statistics: sample time = 38.82 ms / 6144 tokens bark_print_statistics: predict time = 4729.86 ms / 0.77 ms per token bark_print_statistics: total time = 4772.92 ms write_wav_on_disk: Number of frames written = 65600. main: load time = 324.14 ms main: eval time = 8806.57 ms main: total time = 9131.68 ms\n\nHere are typical audio pieces generated by bark.cpp:\n\n## Usage\n\nHere are the steps to use Bark.cpp\n\n### Get the code\n\n    \n    \n    git clone --recursive https://github.com/PABannier/bark.cpp.git cd bark.cpp git submodule update --init --recursive\n\n### Build\n\nIn order to build bark.cpp you must use CMake:\n\n    \n    \n    mkdir build cd build cmake .. cmake --build . --config Release\n\n### Prepare data & Run\n\n    \n    \n    # Install Python dependencies python3 -m pip install -r requirements.txt # Download the Bark checkpoints and vocabulary python3 download_weights.py --out-dir ./models --models bark-small bark # Convert the model to ggml format python3 convert.py --dir-model ./models/bark-small --use-f16 # run the inference ./build/examples/main/main -m ./models/bark-small/ggml_weights.bin -p \"this is an audio generated by bark.cpp\" -t 4\n\n### (Optional) Quantize weights\n\nWeights can be quantized using the following strategy: q4_0, q4_1, q5_0, q5_1,\nq8_0.\n\nNote that to preserve audio quality, we do not quantize the codec model. The\nbulk of the computation is in the forward pass of the GPT models.\n\n    \n    \n    ./build/examples/quantize/quantize ./ggml_weights.bin ./ggml_weights_q4.bin q4_0\n\n### Seminal papers\n\n  * Bark\n\n    * Text Prompted Generative Audio\n  * Encodec\n\n    * High Fidelity Neural Audio Compression\n  * GPT-3\n\n    * Language Models are Few-Shot Learners\n\n### Contributing\n\nbark.cpp is a continuous endeavour that relies on the community efforts to\nlast and evolve. Your contribution is welcome and highly valuable. It can be\n\n  * bug report: you may encounter a bug while using bark.cpp. Don't hesitate to report it on the issue section.\n  * feature request: you want to add a new model or support a new platform. You can use the issue section to make suggestions.\n  * pull request: you may have fixed a bug, added a features, or even fixed a small typo in the documentation, ... you can submit a pull request and a reviewer will reach out to you.\n\n### Coding guidelines\n\n  * Avoid adding third-party dependencies, extra files, extra headers, etc.\n  * Always consider cross-compatibility with other operating systems and architectures\n\n## About\n\nPort of Suno AI's Bark in C/C++ for fast inference\n\n### Topics\n\nmachine-learning text-to-speech inference\n\n### Resources\n\nReadme\n\n### License\n\nMIT license\n\nActivity\n\n### Stars\n\n514 stars\n\n### Watchers\n\n31 watching\n\n### Forks\n\n36 forks\n\nReport repository\n\n## Releases\n\n1 tags\n\n## Packages 0\n\nNo packages published\n\n## Contributors 9\n\n## Languages\n\n  * C++ 84.8%\n  * Python 14.3%\n  * CMake 0.9%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
