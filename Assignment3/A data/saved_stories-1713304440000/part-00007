{"aid": "40052471", "title": "Active Record Transaction Callbacks", "url": "https://greg.molnar.io/blog/active-record-transaction-callbacks/", "domain": "molnar.io", "votes": 1, "user": "thunderbong", "posted_at": "2024-04-16 14:33:25", "comments": 0, "source_title": "Active Record transaction callbacks", "source_text": "Active Record transaction callbacks | Greg Molnar\n\n# Active Record transaction callbacks\n\n15 Apr 2024\n\n#activerecord\n\nI'd like to let you know that my book is finally done and if you want to learn\nabout how to avoid security issues during code review, you should read it:\nSecure code review for Rails Developers.\n\nActive Record introduced transaction callbacks recently. This change allows\nyou to have a callback for the whole transaction, rather than to just have\ncallbacks on a record\u2019s after_commit event. To make this possible,\nActiveRecord::Base.transaction yields a transaction object now and the\ncallback can be registered on that:\n\n    \n    \n    Order.transaction do |transaction| Order.pending.each do |order| order.process! end transaction.after_commit do AdminMailer.orders_processed.deliver_later end end\n\nIn the above example the notification to the admin will only happen if the\ntransaction is committed. We could also hook into the after_rollback callback:\n\n    \n    \n    Order.transaction do |transaction| Order.pending.each do |order| order.process! end transaction.after_commit do AdminMailer.orders_processed.deliver_later end transaction.after_rollback do AdminMailer.orders_processing_failed.deliver_later end end\n\n## Hire me for a penetration test\n\nLet's find the security holes before the bad guys do.\n\nLearn more\n\n## Or follow me on Twitter\n\n## I run an indie startup providing vulnerability scanning for your Ruby on\nRails app.\n\nIt is free to use at the moment, and I am grateful for any feedback about it.\nIf you would like to give it a spin, you can do it here: Vulnerability\nScanning for your Ruby on Rails app!\n\n## Related posts\n\n##\n\nSecure code review checklist\n\n26 Mar 2024\n\nRead article\n\n26 Mar 2024\n\n##\n\nBrute-forcing 2FA with Ruby\n\n23 Mar 2024\n\nRead article\n\n23 Mar 2024\n\n##\n\nSecuring a VPS\n\n06 Feb 2024\n\nRead article\n\n06 Feb 2024\n\n##\n\nThe link_to helper in Rails - Rails Tricks Issue 25\n\n30 Jan 2024\n\nRead article\n\n30 Jan 2024\n\n##\n\nThe 3 pillars of AAA\n\n29 Jan 2024\n\nRead article\n\n29 Jan 2024\n\nAbout Blog Shorts Career Secure code review for Rails Developers Newsletter\nUses Penetration Testing\n\n\u00a9 2023 Greg Molnar. All rights reserved.\n\n", "frontpage": false}
