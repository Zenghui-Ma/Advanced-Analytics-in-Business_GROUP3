{"aid": "40046877", "title": "HSTS Preload List Submission", "url": "https://hstspreload.org/", "domain": "hstspreload.org", "votes": 1, "user": "aragonite", "posted_at": "2024-04-15 23:39:55", "comments": 0, "source_title": "HSTS Preload List Submission", "source_text": "HSTS Preload List Submission\n\nOn GitHub\n\n## Information\n\nThis form is used to submit domains for inclusion in Chrome's HTTP Strict\nTransport Security (HSTS) preload list. This is a list of sites that are\nhardcoded into Chrome as being HTTPS only.\n\nMost major browsers (Chrome, Firefox, Opera, Safari, IE 11 and Edge) also have\nHSTS preload lists based on the Chrome list. (See the HSTS compatibility\nmatrix.)\n\n## Submission Requirements\n\nIf a site sends the preload directive in an HSTS header, it is considered to\nbe requesting inclusion in the preload list and may be submitted via the form\non this site.\n\nIn order to be accepted to the HSTS preload list through this form, your site\nmust satisfy the following set of requirements:\n\n  1. Serve a valid certificate.\n  2. Redirect from HTTP to HTTPS on the same host, if you are listening on port 80.\n  3. Serve all subdomains over HTTPS.\n\n     * In particular, you must support HTTPS for the www subdomain if a DNS record for that subdomain exists.\n     * Note: HSTS preloading applies to all subdomains, including internal subdomains that are not publicly accessible.\n  4. Serve an HSTS header on the base domain for HTTPS requests:\n\n     * The max-age must be at least 31536000 seconds (1 year).\n     * The includeSubDomains directive must be specified.\n     * The preload directive must be specified.\n     * If you are serving an additional redirect from your HTTPS site, that redirect must still have the HSTS header (rather than the page it redirects to).\n\nFor more details on HSTS, please see RFC 6797. Here is an example of a valid\nHSTS header:\n\nStrict-Transport-Security: max-age=63072000; includeSubDomains; preload\n\nYou can check the status of your request by entering the domain name again in\nthe form above, or consult the current Chrome preload list by visiting\nchrome://net-internals/#hsts in your browser. Note that new entries are\nhardcoded into the Chrome source code and can take several months before they\nreach the stable version.\n\n## Continued Requirements\n\nYou must make sure your site continues to satisfy the submission requirements\nat all times. Note that removing the preload directive from your header will\nmake your site immediately eligible for the removal form, and that sites may\nbe removed automatically in the future for failing to keep up the\nrequirements.\n\nIn particular, the requirements above apply to all domains submitted through\nhstspreload.org on or after October 11, 2017 (i.e. preloaded after Chrome 63)\n\nThe same requirements apply to earlier domains submitted on or after February\n29, 2016 (i.e. preloaded after Chrome 50), except that the required max-age\nfor those domains is only 10886400 seconds.\n\n## Deployment Recommendations\n\nIf your site is committed to HTTPS and you want to preload HSTS, we suggest\nthe following steps:\n\n  1. Examine all subdomains (and nested subdomains) of your site and make sure that they work properly over HTTPS.\n\n     * Note: This also includes internal subdomains that are not publicly accessible.\n  2. Add the Strict-Transport-Security header to all HTTPS responses and ramp up the max-age in stages, using the following header values:\n\n     * 5 minutes: max-age=300; includeSubDomains\n     * 1 week: max-age=604800; includeSubDomains\n     * 1 month: max-age=2592000; includeSubDomains\n\nDuring each stage, check for broken pages and monitor your site's metrics\n(e.g. traffic, revenue). Fix any problems that come up and then wait the full\nmax-age of the stage before you move on. For example, wait a month in the last\nstage.\n\n  3. Once you're confident that there will be no more issues, increase the max-age to 2 years and submit your site to the preload list:\n\n     * 2 years, requesting to be preloaded: max-age=63072000; includeSubDomains; preload\n\nIf you have a group of employees or users who can beta test the deployment,\nconsider trying the first few ramp-up stages on those users. Then make sure to\ngo through all stages for all users, starting over from the beginning.\n\nConsult the Mozilla Web Security guidelines and the Google Web Fundamentals\npages on security for more concrete advice about HTTPS deployment.\n\n## Preloading Should Be Opt-In\n\nIf you maintain a project that provides HTTPS configuration advice or provides\nan option to enable HSTS, do not include the preload directive by default. We\nget regular emails from site operators who tried out HSTS this way, only to\nfind themselves on the preload list by the time they find they need to remove\nHSTS to access certain subdomains. Removal tends to be slow and painful for\nthose sites.\n\nProjects that support or advise about HSTS and HSTS preloading should ensure\nthat site operators understand the long-term consequences of preloading before\nthey turn it on for a given domain. They should also be informed that they\nneed to meet additional requirements and submit their site to hstspreload.org\nto ensure that it is successfully preloaded (i.e. to get the full protection\nof the intended configuration).\n\n## Removal\n\nBe aware that inclusion in the preload list cannot easily be undone. Domains\ncan be removed, but it takes months for a change to reach users with a Chrome\nupdate and we cannot make guarantees about other browsers. Don't request\ninclusion unless you're sure that you can support HTTPS for your entire site\nand all its subdomains in the long term.\n\nHowever, we will generally honor requests to be removed from Chrome's preload\nlist if you find that you have a subdomain that you cannot serve over HTTPS\nfor strong technical or cost reasons. To request removal, please visit the\nremoval form.\n\n## TLD Preloading\n\nOwners of gTLDs, ccTLDs, or any other public suffix domains are welcome to\npreload HSTS across all their registerable domains. This ensures robust\nsecurity for the whole TLD, and is much simpler than preloading each\nindividual domain. Please contact us if you're interested, or would like to\nlearn more.\n\n## Contact\n\nWant to remove your domain? Please visit the removal form.\n\nElse, if you have questions or requests that are not covered by this site,\nemail us here using an appropriate subject line and one of the preload list\nmaintainers will be in contact soon.\n\n", "frontpage": false}
