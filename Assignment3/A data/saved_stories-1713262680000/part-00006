{"aid": "40046713", "title": "The architecture of ollama \u2013 my researches and learnings", "url": "https://blog.inoki.cc/2024/04/15/Ollama/", "domain": "inoki.cc", "votes": 2, "user": "inoki", "posted_at": "2024-04-15 23:11:37", "comments": 0, "source_title": "On the architecture of ollama", "source_text": "On the architecture of ollama | Inoki in the world\n\n## Inoki\n\n### Computer Scientist\n\nEarth\n\n### Board\n\nWelcome to Inoki's Blog. You can find my work on IME, Embedded System an more\non here.\n\n### Recent Posts\n\n  * On the architecture of ollama\n\n2024-04-15\n\n  * \u3010\u8bd1\u3011\u89e3\u91ca SDXL \u7684\u9690\u7a7a\u95f4\n\n2024-02-18\n\n  * \u3010\u8bd1\u3011\u5173\u4e8e USB-C \u7684\u4e00\u5207:\u793a\u4f8b\u7535\u8def\n\n2023-09-14\n\n  * \u3010\u8bd1\u3011\u5173\u4e8e USB-C \u7684\u4e00\u5207:\u9ad8\u901f\u63a5\u53e3\n\n2023-09-14\n\n  * \u3010\u8bd1\u3011\u5173\u4e8e USB-C \u7684\u4e00\u5207:\u7535\u963b\u548c\u7535\u5b50\u6807\u8bb0(E-marker)\n\n2023-09-13\n\n### Tag Cloud\n\nABL AI ARM ASIX Aboot Algorithm Android Bare Metal Bootloader Bug C++ Chrome\nOS Cloud Input Computer Graphics Craft Cross Compile Cuda Debian Debug Docker\nDynamic Programming EDK2 EFI Embedded System FFmpeg GBDK GDB Go HTTP Hardware\nHash Heterogeneous Computing IBus IME IoT JTAG KDE KDE Connect KDE Frameworks\nLLM Leetcode Linux Linux Driver LoRa LoRaWAN Man OpenCL Pack Python QUIC Qemu\nQt Raspberry Pi Ray Tracing Router Rust SDDM SDR SDXL Source Code Stable\nDiffusion System UART USB Ubuntu VSCode Visual Studio Vulkan WSL Win 10 ARM\nWin 10 IoT Windows XBL epoll iOS ibus-libpinyin macOS ollama openwrt private\nsysfs \u4e2d\u6587 \u786c\u4ef6 \u7ffb\u8bd1 \u9a71\u52a8\n\n### Tags\n\n  * ABL11\n  * AI1\n  * ARM3\n  * ASIX2\n  * Aboot3\n  * Algorithm1\n  * Android13\n  * Bare Metal2\n  * Bootloader13\n  * Bug3\n  * C++1\n  * Chrome OS1\n  * Cloud Input4\n  * Computer Graphics1\n  * Craft2\n  * Cross Compile3\n  * Cuda1\n  * Debian1\n  * Debug2\n  * Docker1\n  * Dynamic Programming1\n  * EDK21\n  * EFI1\n  * Embedded System5\n  * FFmpeg2\n  * GBDK2\n  * GDB1\n  * Go2\n  * HTTP1\n  * Hardware3\n  * Hash1\n  * Heterogeneous Computing1\n  * IBus5\n  * IME1\n  * IoT5\n  * JTAG1\n  * KDE2\n  * KDE Connect8\n  * KDE Frameworks2\n  * LLM1\n  * Leetcode1\n  * Linux21\n  * Linux Driver3\n  * LoRa5\n  * LoRaWAN5\n  * Man1\n  * OpenCL1\n  * Pack1\n  * Python2\n  * QUIC1\n  * Qemu1\n  * Qt2\n  * Raspberry Pi5\n  * Ray Tracing1\n  * Router3\n  * Rust1\n  * SDDM1\n  * SDR4\n  * SDXL1\n  * Source Code2\n  * Stable Diffusion1\n  * System1\n  * UART1\n  * USB4\n  * Ubuntu2\n  * VSCode1\n  * Visual Studio1\n  * Vulkan1\n  * WSL1\n  * Win 10 ARM1\n  * Win 10 IoT2\n  * Windows2\n  * XBL1\n  * epoll1\n  * iOS1\n  * ibus-libpinyin4\n  * macOS1\n  * ollama1\n  * openwrt1\n  * private3\n  * sysfs1\n  * \u4e2d\u658752\n  * \u786c\u4ef64\n  * \u7ffb\u8bd133\n  * \u9a71\u52a81\n\n### Categories\n\n  * AI2\n\n    * LLM1\n    * Stable Diffusion1\n  * Algorithm1\n\n    * Hash1\n  * Bug3\n\n    * Cuda1\n    * Docker1\n    * Linux Driver1\n    * WSL1\n  * Build1\n  * Chinese1\n  * Chrome OS1\n  * Computer Graphics1\n\n    * Vulkan1\n  * Dairy3\n  * Data Structure1\n\n    * Algorithm1\n  * EDK21\n  * Embedded System9\n\n    * Cross Compile3\n\n      * Router3\n    * IoT2\n\n      * Win 10 IoT2\n    * Raspberry Pi6\n  * FFmpeg2\n  * GBDK2\n  * Hardware3\n  * IME1\n  * Inoki Home Made1\n\n    * Qt1\n\n      * EFI1\n  * KDE2\n\n    * Craft1\n\n      * Blueprints1\n  * KDE Connect8\n\n    * \u4e2d\u65871\n  * KDE Frameworks2\n  * Leetcode1\n\n    * Dynamic Programming1\n  * Linux22\n\n    * Android13\n\n      * Bootloader9\n    * Driver1\n    * Wayland3\n    * man1\n\n      * 7-Miscellanea1\n    * sysfs1\n  * Linux Driver2\n  * LoRa5\n  * Modern C++1\n  * OpenCL1\n  * Package1\n\n    * Debian1\n  * Programming Language2\n\n    * Python2\n  * Protocol1\n  * Qt1\n  * Rust1\n  * SDR4\n  * Source Code4\n\n    * Linux Driver2\n\n      * USB-Net2\n    * Python2\n  * System1\n\n    * Utility1\n\n      * Build tool1\n  * Translation19\n\n    * Chinese19\n  * USB4\n  * VSCode1\n  * iOS1\n  * ibus-libpinyin4\n  * \u786c\u4ef64\n\n# On the architecture of ollama\n\n2024-04-15 LLM, ollama Comments Word Count: 6.3k(words) Read Count:\n39(minutes)\n\nRecently, I took a chance to explore ollama project, because I want to enable\nthe support of my AMD graphic card (with a not bad VRAM - 32G!) on Windows.\nThere is already the support on Linux, based on AMD ROCm. It should be kind of\nout-of-box on Windows, thanks to the release of ROCm on Windows. But ollama\nprevents me from using it. So, I tried both ZLUDA and modified the code of\nollama to get what I wanted.\n\nThis feature is already merged and released in ollama v0.1.29. To avoid\nmissing the details and the things I 've learnt, this blog is in charge of\nnoting the architecture of ollama for myself.\n\nTo me, ollama is a thin but smart enough wrapper to llama.cpp. It is really\nend-user friendly, and provides a web interface and a cli interface, in order\nto run and interact with a lot of Large Language Models (LLMs). Indeed, in\nmost cases, it\u2019s llama.cpp who loads and runs the models, and ollama just\n\u201cpilots\u201d (yes, I use a term that AI generations are famaliar with) the\nllama.cpp. I will give a discussion about this part later.\n\nThis post assumes that you are able to read golang code or some other C-like\ncode. For special points in the code, I would give some brief descriptions or\nmetaphores for better understanding.\n\nIn this post, I will first give the project structure of ollama. Then, the\ncore architecture and implementations around llama.cpp along with the build\nsystems will be decipted. Next, I will describe how ollama chooses the device\n(hardware in general) to run an LLM. Finally, the web service, client and the\nutilities along with the other parts will be introduced, to finish the post.\n\n# Porject structure\n\nYou can get the source code of ollama on GitHub. The project is mainly written\nin Golang. Here is a table of brief descriptions for each directory:\n\nDir name| Description  \n---|---  \napi| Client API lib in go  \napp| Desktop application (mainly a tray)  \nauth| Authentification  \ncmd| Commands and handlers  \ndocs| Documentations  \nexamples| Examples to use ollama  \nformat| Utitility to format units and time  \ngpu| GPU and acceleration detection  \nllm| Implementations to run llama.cpp  \nmacapp| Desktop application for Mac  \nopenai| OpenAI API wrapper for ollama  \nparser| Model information and message parser  \nprogress| Utility to show loading progress  \nreadline| Utility to read inputs from terminal  \nscripts| Scripts for build and publish  \nserver| Server implementation in go  \nversion| Version information  \n  \nNotice that the directories can be changed anytime, since the project is under\nactive development.\n\n# The hero behind: llama.cpp\n\nLet\u2019s first start by an introduction to the core, llama.cpp.\n\nThe llama.cpp is included as a submodule in ollama. You can find it in llm\ndirectory. There are also the needed files around it in the same directory. We\nwill see them in details later.\n\nThe llama.cpp project itself is an Open Soource library for the inference of\nMeta\u2019s LLaMA model in pure C/C++, at very first. And it is extended to run\nmore models, such as Mistral, and Google Gemma (supported very recently). It\nleverages the capability of ggml, another project created by the same author,\nto run it natively on different platforms (compared to Python project).\n\n## Supported backends\n\nCurrently, some of the supported inference backends in llama.cpp are as\nfollows through ggml:\n\n  * It can run AVX, AVX2 and AVX512 on x86 for llama.cpp, or NEON on ARM.\n  * With MPI (e.g. MPICH and OpenMPI), ggml allows to run models on CPU or CPU clusters.\n  * Apple Metal is integrated to support GPUs on macOS and iOS, including GPUs on Mac and Apple made GPU on iOS devices or Apple Silicon Mac.\n  * An old open standard, OpenCL is used by ggml based on the BLAS architecture.\n  * NVIDIA GPUs are supported by cuBLAS.\n  * Recent AMD GPUs are supported through hipBLAS, which is parts of AMD ROCm with almost same APIs as cuBLAS.\n  * What caught my attention recently, is the Vulkan support in llama.cpp. The (buggy) support was initially started by Nomic through their kompute framework. The recent progress is a pure implementation in ggml using the Vulkan libs directly.\n\nThese backends allow developers to run LLMs that work across multiple\nplatforms, from desktop computers to smartphones and beyond. Additionally,\nllama.cpp also provides native support for Linux (including Android Linux),\nWindows, macOS, and various other operating systems, such as iOS (see\nwhispher.cpp on iOS) and even WebAssembly (whispher.wasm).\n\nTherefore, it should be very nature that ollama is born with the supports of\nthe platforms and operating systems.\n\n# Build system\n\nNext, let\u2019s take a look at the build system to know how ollama plays with\nllama.cpp.\n\nC or Cpp projects usually come up with cmake (although there are more choices\nnow) to handle the compilation, linking, etc. So does llama.cpp: it uses\ncompile definitions (or flags) to leverage different backends. For instance:\n\n  * LLAMA_AVX, LLAMA_AVX2, LLAMA_AVX512 for the AVX supports;\n  * LLAMA_METAL for the Apple Metal support;\n  * LLAMA_CUBLAS for the NVIDIA CUDA support;\n  * and LLAMA_HIPBLAS for the AMD ROCm support.\n\nHowever, ollama itself is a go project leveraging the build system provided by\ngo. Both of the two build systems co-exist to build the different parts:\n\n  * cmake builds llama.cpp with a few files from ollama.cpp, to pilot and provide interfaces;\n  * go build systems compile, link and pack the rest parts to make an application and cli of ollama.\n\nAparts from pure go code, the go build systems need cgo to build some C-family\ncode as well. There are examples in llm directory (dyn_ext_server.c file to\nload and provide interfaces) and gpu directory (gpu_info_cuda.c,\ngpu_info_rocm.c and gpu_info_darwin.m are C or Objective-C implementations to\ndetect GPUs).\n\nThe go build system in ollama also run the commands to call cmake for the\nllama.cpp building, by leveraging go generate. This work lays in the\nllm/generate directory, e.g. on Linux:\n\n    \n    \n    1 2 3\n\n|\n\n    \n    \n    package generate//go:generate bash ./gen_linux.sh  \n  \n---|---  \n  \nllm/generate/generate_darwin.go tells go generate to run the gen_linux.sh\nscript to build the llama.cpp part.\n\n## Some scripts for different platforms\n\nCurrently, there are gen_common.sh, gen_linux.sh and gen_darwin.sh to build\nllama.cpp for ollama on Unix-like OS, such as macOS and Linux. Meanwhile, it\u2019s\ngen_windows.ps1 PowerShell script on Windows.\n\nLet\u2019s take an example to build llama.cpp with AVX support on Linux:\n\n    \n    \n    1 2 3 4 5 6\n\n|\n\n    \n    \n    init_vars CMAKE_DEFS=\"${COMMON_CPU_DEFS} -DLLAMA_AVX=on -DLLAMA_AVX2=off -DLLAMA_AVX512=off -DLLAMA_FMA=off -DLLAMA_F16C=off ${CMAKE_DEFS}\" BUILD_DIR=\"${LLAMACPP_DIR}/build/linux/${ARCH}/cpu_avx\" echo \"Building AVX CPU\" build compress_libs  \n  \n---|---  \n  \nThe first three lines initialize the variables to prepare the build. The\ninit_vars calls a sub-procedure in gen_common.sh to prepare common variables\nsuch as:\n\n    \n    \n    1 2\n\n|\n\n    \n    \n    CMAKE_DEFS=\"\" CMAKE_TARGETS=\"--target ext_server\"  \n  \n---|---  \n  \nwhere CMAKE_TARGETS will set the build target to ext_server. This target is a\nlibrary to provide interfaces and functions from llama.cpp to ollama, we will\ntalk about it in the next section.\n\nIn CMAKE_DEFS, only LLAMA_AVX is enabled. And COMMON_CPU_DEFS is defined as\nfollows, to make dynamic library with position independent code (for gcc it\nwill be converted to a -fpic flag):\n\n    \n    \n    1\n\n|\n\n    \n    \n    COMMON_CPU_DEFS=\"-DCMAKE_POSITION_INDEPENDENT_CODE=on -DLLAMA_NATIVE=off\"  \n  \n---|---  \n  \nIt outputs \u201cBuilding AVX CPU\u201d in the terminal. The build sub-procedure then\ncalls cmake:\n\n    \n    \n    1 2 3 4 5 6 7 8 9 10 11 12 13\n\n|\n\n    \n    \n    build() { cmake -S ${LLAMACPP_DIR} -B ${BUILD_DIR} ${CMAKE_DEFS} cmake --build ${BUILD_DIR} ${CMAKE_TARGETS} -j8 mkdir -p ${BUILD_DIR}/lib/ g++ -fPIC -g -shared -o ${BUILD_DIR}/lib/libext_server.${LIB_EXT} \\ ${GCC_ARCH} \\ ${WHOLE_ARCHIVE} ${BUILD_DIR}/examples/server/libext_server.a ${NO_WHOLE_ARCHIVE} \\ ${BUILD_DIR}/common/libcommon.a \\ ${BUILD_DIR}/libllama.a \\ -Wl,-rpath,\\$ORIGIN \\ -lpthread -ldl -lm \\ ${EXTRA_LIBS} }  \n  \n---|---  \n  \nAfter the build by cmake, it will make a libext_server dynamic library (.dll\non Windows, .so on Linux/BSD, and .dylib on macOS). The library contains the\ncompiled code from examples/server under llama.cpp\n(examples/server/libext_server.a), command and core code of llama.cpp -\ncommon/libcommoa.a and libllama.a. They will be embedded into the main go\nprogram to facilite the distribution, as \u201cpayloads\u201d of the executable.\n\nFinally, it compresses the payloads to make the executable smaller:\n\n    \n    \n    1 2 3 4 5 6 7 8 9 10 11 12 13 14\n\n|\n\n    \n    \n    compress_libs() { echo \"Compressing payloads to reduce overall binary size...\" pids=\"\" rm -rf ${BUILD_DIR}/lib/*.${LIB_EXT}*.gz for lib in ${BUILD_DIR}/lib/*.${LIB_EXT}* ; do gzip --best -f ${lib} & pids+=\" $!\" done echo for pid in ${pids}; do wait $pid done echo \"Finished compression\" }  \n  \n---|---  \n  \nThe dynamic library will finally reside under a cpu_avx directory in the build\nfolder. If it builds for the other variants (such as GPUs), they will be in\ndifferent directories in the build folder.\n\n# Pilot llama.cpp\n\nThen, let us go back to the llm directory, to see the implementations in\nollama built on top of llama.cpp.\n\nThe most important parts for ollama to pilot llama.cpp are:\n\n  1. In ext_server, the wrapper implementations provides the functions that ollama can call, such as llama_server_init to init an llama.cpp instance, llama_server_completion to complete a chat, or llama_server_embedding to compute the embeddings for texts.\n  2. An extra makefile (CMakeLists) is also contained in ext_server, to build the code with the llama.cpp/examples/server example as a library. It can then be loaded by dyn_ext_server code under llm, to serve with the llama.cpp instance.\n  3. The libraries are embedded into the go program using go embed package, and extract during the runtime.\n  4. Besides, the calls to the functions in ext_server carry the some parameters defined in llm directory. In general, the requests and responses are passed in JSON format, and contains more structural information. They are defined in such as ggml.go (decribing the models) and llama.go (describing the different requests and responses).\n  5. To dynamically manage the llama.cpp instances, ollama provides some patches to the original llama.cpp.\n\nLet\u2019s study them one by one.\n\n## 1\\. External server\n\nWe first take a look at ext_server. We already know that the dynamic libraries\nare built during the generation. But how will they be used?\n\nIn llm/dyn_ext_server.go, the newDynExtServer is in charge of loading the\ndynamic libraries, initialize a llama.cpp instance and start the event loop to\nreceive any requests and generate the responses.\n\n### Dynamic library loading and server starting\n\nIn newDynExtServer, the go function calls a C function named by dyn_init to\nload the dynamic library. The description and the needed functions are loaded\ninto a struct_dynamic_llama_server description, and wrapped in dynExtServer, a\ngo struct.\n\nThey are then used in a another C function, dyn_llama_server_init, with the\nparameters to run a llama.cpp server, for the server instance initialization.\n\nWithout issue, newDynExtServer will call the last C function during the\ninitialization, dyn_llama_server_start. The server will be running and is then\nable to receive requests from ollama.\n\nThe aforementioned C functions are in llm/dyn_ext_server.c and declared in\nllm/dyn_ext_server.h. Let\u2019s take a quick look at dyn_init:\n\n    \n    \n    1 2\n\n|\n\n    \n    \n    void dyn_init(const char *libPath, struct dynamic_llama_server *s, ext_server_resp_t *err);  \n  \n---|---  \n  \nIt accepts a library path libPath as argument, and returns a\ndynamic_llama_server instance or an error through the C pointers (or memory\naddress to those who are not familiar with C, go is able to handle them like\ngo struct, store them and pass to the other C functions).\n\nThe dynamic_llama_server struct is capable of storing the address of necessary\nC functions, and the reference to the loaded dynamic library. Its definition\nis as below:\n\n    \n    \n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\n\n|\n\n    \n    \n    struct dynamic_llama_server { void *handle; void (*llama_server_init)(ext_server_params_t *sparams, ext_server_resp_t *err); void (*llama_server_start)(); void (*llama_server_stop)(); void (*llama_server_completion)(const char *json_req, ext_server_resp_t *resp); void (*llama_server_completion_next_result)(const int task_id, ext_server_task_result_t *result); void (*llama_server_completion_cancel)(const int task_id, ext_server_resp_t *err); void (*llama_server_release_task_result)(ext_server_task_result_t *result); void (*llama_server_tokenize)(const char *json_req, char **json_resp, ext_server_resp_t *err); void (*llama_server_detokenize)(const char *json_req, char **json_resp, ext_server_resp_t *err); void (*llama_server_embedding)(const char *json_req, char **json_resp, ext_server_resp_t *err); void (*llama_server_release_json_resp)(char **json_resp); };  \n  \n---|---  \n  \nThe core functionality of dyn_init is to load a dynamic library indicated by\nlibPath, read the symbol tables, find the addresses of needed C functions, and\nstore them into an instance of dynamic_llama_server structure. The libPath\ncould be the path of one of the built dynamic libraries with the libext_server\nprefix. So that the built libraries based on llama.cpp can be used by ollama.\n\nOnce loaded, the calls to dyn_llama_server_start and dyn_llama_server_start\nare indeed direct calls to the C functions from the dynamic libraries:\n\n    \n    \n    1 2 3 4 5 6 7 8 9\n\n|\n\n    \n    \n    inline void dyn_llama_server_init(struct dynamic_llama_server s, ext_server_params_t *sparams, ext_server_resp_t *err) { s.llama_server_init(sparams, err); }inline void dyn_llama_server_start(struct dynamic_llama_server s) { s.llama_server_start(); }  \n  \n---|---  \n  \nAfter calling dyn_llama_server_start, the llama.cpp server created from a\ndynamic library is ready to make predictions.\n\n### Prediction\n\nWhen ollama receives a prediction request, it calls Predict on a dynExtServer\ninstance. This function is able to formats the request (will see this later),\nand calls a C function, dyn_llama_server_completion, for start the prediction:\n\n    \n    \n    1 2 3 4 5\n\n|\n\n    \n    \n    inline void dyn_llama_server_completion(struct dynamic_llama_server s, const char *json_req, ext_server_resp_t *resp) { s.llama_server_completion(json_req, resp); }  \n  \n---|---  \n  \nAs you see, it\u2019s also a direct call to the function loaded from one of the\ndynamic libraries built on top of llama.cpp.\n\nA really good design in this part is the stream-like response, thanks to the\nfn func(PredictResult) argument in the Predict function. It is a callback\nfunction, which allows to send continously the responses as soon as it gets:\n\n    \n    \n    1 2 3 4 5\n\n|\n\n    \n    \n    if p.Content != \"\" { fn(PredictResult{ Content: p.Content, }) }  \n  \n---|---  \n  \nIt also relies on the convenient call to\ndyn_llama_server_completion_next_result (althoug it\u2019s also a direct call to a\nloaded C function llama_server_completion_next_result from a dynamic library\nbased on llama.cpp).\n\n### Others\n\nThe other calls are similar as well. You can find them in\nllm/dyn_ext_server.go and llm/dyn_ext_server.c, such as\ndyn_llama_server_tokenize, dyn_llama_server_detokenize for tokenization or\ndetokenization, and dyn_llama_server_embedding for computing the embeddings.\n\n## 2\\. llama.cpp as a server for ollama\n\nLet\u2019s next check the C parts: how ollama uses llama.cpp as an LLM server.\n\nIn the beginning of llm/dyn_ext_server.go, there are a bench of build\ninstructions in the comments for cgo:\n\n    \n    \n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\n\n|\n\n    \n    \n    /* #cgo CFLAGS: -I${SRCDIR}/ext_server -I${SRCDIR}/llama.cpp -I${SRCDIR}/llama.cpp/common -I${SRCDIR}/llama.cpp/examples/server #cgo CFLAGS: -DNDEBUG -DLLAMA_SERVER_LIBRARY=1 -D_XOPEN_SOURCE=600 -DACCELERATE_NEW_LAPACK -DACCELERATE_LAPACK_ILP64 #cgo CFLAGS: -Wmissing-noreturn -Wextra -Wcast-qual -Wno-unused-function -Wno-array-bounds #cgo CPPFLAGS: -Ofast -Wextra -Wno-unused-function -Wno-unused-variable -Wno-deprecated-declarations #cgo darwin CFLAGS: -D_DARWIN_C_SOURCE #cgo darwin CPPFLAGS: -DGGML_USE_ACCELERATE #cgo darwin CPPFLAGS: -DGGML_USE_METAL -DGGML_METAL_NDEBUG #cgo darwin LDFLAGS: -lc++ -framework Accelerate #cgo darwin LDFLAGS: -framework Foundation -framework Metal -framework MetalKit -framework MetalPerformanceShaders #cgo linux CFLAGS: -D_GNU_SOURCE #cgo linux LDFLAGS: -lrt -ldl -lstdc++ -lm #cgo linux windows LDFLAGS: -lpthread#include <stdlib.h> #include \"dyn_ext_server.h\"*/  \n  \n---|---  \n  \nThey are able to set different build and link flags for different platforms\n(darwin for macOS, and of course linux for Linux while windows for Windows).\nSo that cgo is able to find the C header files (declarations of the existing\ntypes and functions) to compile and link llm/dyn_ext_server.c with the go\nparts.\n\nLet\u2019s then go to check the C functions used in ollama, from the dynamic\nlibrary. As two examples, we start with llama_server_init and\nllama_server_start.\n\nTheir impementations are located in llm/ext_server/ext_server.cpp, which is\nset as a library target named by ext_server in llm/ext_server/CMakeLists.txt.\nDuring the building the target, this file will be compiled with llama.cpp\nexample server together. The compiled result is one of the dynamic libraries\nthat we mentioned.\n\nAs a result, the C functions in ext_server.cpp can be called from ollama, and\nare able to leverage the functions in llama.cpp. It actually acts as a bridge\nbetween the two projects, and makes the example server in llama.cpp a server\nfor ollama.\n\nDuring the initialization, llama_server_init parses the parameters to create a\ncontext for the server, and calls the functions provided by llama.cpp:\n\n    \n    \n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n\n|\n\n    \n    \n    void llama_server_init(ext_server_params *sparams, ext_server_resp_t *err) { /* ... */ llama = new llama_server_context; /* ... */ llama_backend_init(); llama_numa_init(params.numa); /* ... */ if (!llama->load_model(params)) { // an error occurred that was not thrown err->id = -1; snprintf(err->msg, err->msg_len, \"error loading model %s\", params.model.c_str()); return; } /* ... */ llama->initialize(); /* ... */ }  \n  \n---|---  \n  \nFor example, it calls llama_backend_init to initalize the backend (could be\nAVX, CUDA, etc), and llama_numa_init to initilize the NUMA (if exists). Then\nit calls the load_model function in the server context with the given\nparameters to load the model and finilize the initialization with initialize\nfunction.\n\nIn case of error, the error messages are formatted to the err argument to\nreturn and be processed in go parts.\n\nMeanwhile in llama_server_start:\n\n    \n    \n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\n\n|\n\n    \n    \n    void llama_server_start() { assert(llama != NULL); // TODO mutex to protect thread creation ext_server_thread = std::thread([&]() { try { LOG_TEE(\"llama server main loop starting\\n\"); ggml_time_init(); llama->queue_tasks.on_new_task(std::bind( &llama_server_context::process_single_task, llama, std::placeholders::_1)); llama->queue_tasks.on_finish_multitask(std::bind( &llama_server_context::on_finish_multitask, llama, std::placeholders::_1)); llama->queue_tasks.on_all_tasks_finished(std::bind( &llama_server_context::run_on_all_tasks_finished, llama)); llama->queue_results.on_multitask_update(std::bind( &llama_server_queue::update_multitask, &llama->queue_tasks, std::placeholders::_1, std::placeholders::_2, std::placeholders::_3 )); llama->queue_tasks.start_loop(); } catch (std::exception &e) { LOG_TEE(\"caught exception in llama server main loop: %s\\n\", e.what()); } catch (...) { LOG_TEE(\"caught unknown exception in llama server main loop\\n\"); } LOG_TEE(\"\\nllama server shutting down\\n\"); llama_backend_free(); }); }  \n  \n---|---  \n  \nIt sets some callbacks for the task processing, and starts an event loop in a\nnew thread. The event loop is in charge of the predictions. So that the call\nto llama_server_start is returned immediately.\n\nMore detailed implementations of such C functions can be found in the same\nfile, i.e. llm/ext_server/ext_server.cpp.\n\n## 3\\. Embed libraries as payloads\n\nThen, let\u2019s explore how the payloads are done.\n\nIn the go files with payload_* prefix, we can see the choice of ollama. For\ninstance, there is two lines to embed every ext_server libraries with\ndifferent variants in llm/payload_linux.go:\n\n    \n    \n    1 2\n\n|\n\n    \n    \n    //go:embed llama.cpp/build/linux/*/*/lib/* var libEmbed embed.FS  \n  \n---|---  \n  \nAll the built libraries under llama.cpp/build/linux/*/*/lib/ are embedded as\npayloads using a filesystem like interface. So that ollama can access them\nlike reading and writing in a filesystem.\n\nDuring the initialization of ollama, Init in llm/payload_common.go will call\nnativeInit:\n\n    \n    \n    1 2 3\n\n|\n\n    \n    \n    func Init() error { return nativeInit() }  \n  \n---|---  \n  \nIt mainly works on extracting the dynamic libraries from the file system to a\ntemporary location, and check driver access permission if applicable:\n\n    \n    \n    1 2 3\n\n|\n\n    \n    \n    libs, err := extractDynamicLibs(payloadsDir, \"llama.cpp/build/*/*/*/lib/*\") /* ... */ err := verifyDriverAccess()  \n  \n---|---  \n  \nAfter the extraction, ollama is able to format the library path (libPath used\nin the dyn_init function in the External server subsection). The way to choose\nthe running environment and the matching library will be presented in the\nDecide where to run section.\n\n## 4\\. Formatted request and response\n\nLet\u2019s then go back to the function arguments used in the C functions.\n\n    \n    \n    1 2 3 4 5 6 7 8 9 10 11\n\n|\n\n    \n    \n    inline void dyn_llama_server_init(struct dynamic_llama_server s, ext_server_params_t *sparams, ext_server_resp_t *err) { s.llama_server_init(sparams, err); }inline void dyn_llama_server_completion(struct dynamic_llama_server s, const char *json_req, ext_server_resp_t *resp) { s.llama_server_completion(json_req, resp); }  \n  \n---|---  \n  \nIn their function signatures, we can see the function arguments they use:\next_server_params_t in dyn_llama_server_init, and a json_req byte array in\ndyn_llama_server_completion.\n\nThe ext_server_params_t argument is a C struct carrying the configurations to\nlaunch the llama server, which will be interpreted later in\nllm/ext_server/server.cpp(We do not expand this part due to shortage of\npages).\n\nMeanwhile, the json_req for the completion call is used as follows, in\nllm/ext_server/ext_server.cpp:\n\n    \n    \n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\n\n|\n\n    \n    \n    void llama_server_completion(const char *json_req, ext_server_resp_t *resp) { assert(llama != NULL && json_req != NULL && resp != NULL); resp->id = -1; resp->msg[0] = '\\0'; try { if (shutting_down) { throw std::runtime_error(\"server shutting down\"); } json data = json::parse(json_req); resp->id = llama->queue_tasks.get_new_id(); llama->queue_results.add_waiting_task_id(resp->id); llama->request_completion(resp->id, data, false, false, -1); } catch (std::exception &e) { snprintf(resp->msg, resp->msg_len, \"exception %s\", e.what()); } catch (...) { snprintf(resp->msg, resp->msg_len, \"Unknown exception during completion\"); } }  \n  \n---|---  \n  \nIndeed, it contains the completion request in json format, including the\nprompt, temperature, etc. We can see that llama_server_completion creates a\ntask for it and return the task ID through resp in the normal path. Otherwise,\nit formats the error information for returning.\n\nIf you are interested in its detailed format, please check\nllm/dyn_ext_server.go file.\n\n## 5\\. Patches\n\nThere are a few extra modifications on the original version of llama.cpp, to\nadapt the usage of multiple llama servers in ollama.\n\nFor example, the following patch exports ggml_free_cublas and call it to\nrelease an instance of llama server:\n\n    \n    \n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\n\n|\n\n    \n    \n    diff --git a/examples/server/server.cpp b/examples/server/server.cpp index 7800c6e7..be30db23 100644 --- a/examples/server/server.cpp +++ b/examples/server/server.cpp @@ -30,6 +30,10 @@ #include <atomic> #include <signal.h>+#ifdef GGML_USE_CUBLAS +extern \"C\" GGML_CALL void ggml_free_cublas(void); +#endif + using json = nlohmann::json;struct server_params @@ -353,6 +357,9 @@ struct llama_server_context llama_free_model(model); model = nullptr; } +#ifdef GGML_USE_CUBLAS + ggml_free_cublas(); +#endif }  \n  \n---|---  \n  \n## Wrap them up\n\nWith all the extra modules and modifications on llama.cpp, ollama is thus able\nto start a llama server as needed, dynamically choosing the hardware with the\nsupports of different hardware in the different compiled dynamic libraries\n(see Build system). After running the llama server, the extra modules provided\nby ollama allow to send the completion request, and retrieve the replies\nlater.\n\nTil now, it should be clear with a global view on the ollama architecture\nbehind (or we can call it backend, as usual). For the details in the backend,\nreaders can check the source code since they are subjective to be changed very\noften. After all, ollama is under active development.\n\nThere are still a few mysteries:\n\n  * backend side: how ollama knows which hardware and which dynamic libraries to choose?\n  * frontend side: which kind of frontend does it provide?\n\nThe following sections might be the answers for these questions.\n\n# Decide where to run\n\nLet\u2019s go back to the dynamic libraries and libPath argument in the dyn_init,\nmentioned in Dynamic library loading and server starting. We have already\nknown in Embed libraries as payloads, that ollama will extract the embedded\ndynamic libraries to a temporary directory, and load them by formating and\npassing libPath to dyn_init.\n\nThe question is: how ollama chooses the libraries by passing the different\nlibPath argument?\n\nThe libPath is passed as the first argument library in the newDynExtServer\nfunction implemented in llm/dyn_ext_server.go. It is updated on Windows by a\ncall to gpu.UpdatePath(filepath.Dir(library)), in order to add the parent\ndirectory to the PATH. So that the dynamic libraries can be loaded seamlessly.\nHowever, it\u2019s not necessary to do so on Linux or macOS.\n\nTherefore, we can know that the libPath here is already a full path to the\ndynamic library files. Let\u2019s then check where the libPath is generated.\n\nA simple search gives a response in the newLlmServer function under\nllm/llm.go:\n\n    \n    \n    1 2 3 4 5 6 7 8 9\n\n|\n\n    \n    \n    err2 := fmt.Errorf(\"unable to locate suitable llm library\") for _, dynLib := range dynLibs { srv, err := newDynExtServer(dynLib, model, adapters, projectors, opts) if err == nil { return srv, nil } slog.Warn(fmt.Sprintf(\"Failed to load dynamic library %s %s\", dynLib, err)) err2 = err }  \n  \n---|---  \n  \nIt iterates the dynLibs to call newDynExtServer function. Once there is one\nsuccessful loading, it returns the llama server instance.\n\nAt the beginning of newLlmServer, the dynLibs are generally retrieved in\ngetDynLibs function, which is an ordered list of dynamic libraries to try:\n\n    \n    \n    1 2 3 4\n\n|\n\n    \n    \n    func newLlmServer(gpuInfo gpu.GpuInfo, model string, adapters, projectors []string, opts api.Options) (LLM, error) { dynLibs := getDynLibs(gpuInfo) /* ... */ }  \n  \n---|---  \n  \nThe order is a preference, which takes the GPU information from gpuInfo\ngpu.GpuInfo. It is not forcely to be the \u201cGPU information\u201d, it can also\nindicate to use a certain CPU variant. I think ollama team may change it very\nsoon.\n\nIn general, the returned dynLibs are from a key-value mapping availableDynLibs\nin llm/payload_common.go. It is generated in nativeInit, after the extraction\nof all the dynamic libraries:\n\n    \n    \n    1 2 3 4 5 6 7 8 9 10 11\n\n|\n\n    \n    \n    func nativeInit() error { /* ... */ /* Extract dynamic libraries in temporary directory */ /* ... */ for _, lib := range libs { // The last dir component is the variant name variant := filepath.Base(filepath.Dir(lib)) availableDynLibs[variant] = lib } /* ... */ }  \n  \n---|---  \n  \nThe key is the last component of the full path, except the library file name.\nFor example, it is be cpu, cpu_avx, cpu_avx2, cuda_v11.3 and rocm_v5.7 on my\nPC. And the values are certainly the full path.\n\nWe can first take a look at the general processing in getDynLibs\nfunction(which is implemented in llm/payload_common.go), by ignoring some\nplatform-specific cases.\n\nThe first step is to find the exact match of the requested one from the \u201cGPU\ninformation\u201d:\n\n    \n    \n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\n\n|\n\n    \n    \n    exactMatch := \"\" dynLibs := []string{} altDynLibs := []string{} requested := gpuInfo.Library if gpuInfo.Variant != \"\" { requested += \"_\" + gpuInfo.Variant } // Try to find an exact match for cmp := range availableDynLibs { if requested == cmp { exactMatch = cmp dynLibs = []string{availableDynLibs[cmp]} break } }  \n  \n---|---  \n  \nIt makes a requested string by Library with an appended Variant from the \u201cGPU\ninformation\u201d. If there is one matched extacly to the requested string, the\nfirst library path in dynLibs would be the path to the requested library. The\nfirst library path will also be the first to try during the loading.\n\nIt then tries GPU libraries with not exact matches (where there could be some\nversion mismatches, etc.):\n\n    \n    \n    1 2 3 4 5 6 7 8 9 10 11 12\n\n|\n\n    \n    \n    // Then for GPUs load alternates and sort the list for consistent load ordering if gpuInfo.Library != \"cpu\" { for cmp := range availableDynLibs { if gpuInfo.Library == strings.Split(cmp, \"_\")[0] && cmp != exactMatch { altDynLibs = append(altDynLibs, cmp) } } slices.Sort(altDynLibs) for _, altDynLib := range altDynLibs { dynLibs = append(dynLibs, availableDynLibs[altDynLib]) } }  \n  \n---|---  \n  \nNext, it tries to prioritize the fastest (maybe) CPU variant by calling\nanother utility function GetCPUVariant:\n\n    \n    \n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\n\n|\n\n    \n    \n    // Load up the best CPU variant if not primary requested if gpuInfo.Library != \"cpu\" { variant := gpu.GetCPUVariant() // If no variant, then we fall back to default // If we have a variant, try that if we find an exact match // Attempting to run the wrong CPU instructions will panic the // process if variant != \"\" { for cmp := range availableDynLibs { if cmp == \"cpu_\"+variant { dynLibs = append(dynLibs, availableDynLibs[cmp]) break } } } else { dynLibs = append(dynLibs, availableDynLibs[\"cpu\"]) } }  \n  \n---|---  \n  \nThis utility is defined in gpu/cpu_common.go. It detects the CPU extensions on\nx86 platform:\n\n    \n    \n    1 2 3 4 5 6 7 8 9 10 11 12 13\n\n|\n\n    \n    \n    func GetCPUVariant() string { if cpu.X86.HasAVX2 { slog.Info(\"CPU has AVX2\") return \"avx2\" } if cpu.X86.HasAVX { slog.Info(\"CPU has AVX\") return \"avx\" } slog.Info(\"CPU does not have vector extensions\") // else LCD return \"\" }  \n  \n---|---  \n  \nThe order will give avx2 as the highest preference, then avx, and finally the\npure CPU variant.\n\nFinally, it fallbacks to CPU variant if none of the above methods work:\n\n    \n    \n    1 2 3 4 5 6 7 8 9 10 11\n\n|\n\n    \n    \n    func getDynLibs(gpuInfo gpu.GpuInfo) []string { /* Apple specific loading */ /* ... */// Finally, if we didn't find any matches, LCD CPU FTW if len(dynLibs) == 0 { dynLibs = []string{availableDynLibs[\"cpu\"]} } slog.Debug(fmt.Sprintf(\"ordered list of LLM libraries to try %v\", dynLibs)) return dynLibs }  \n  \n---|---  \n  \nThe dynLibs are then returned for the loading tries.\n\nWe can now explore how the \u201cGPU information\u201d gpuInfo is generated to make the\npreference possible. The New function in llm/llm.go calls newLlmServer with\nthe \u201cGPU information\u201d as the first argument. It completes many important\nworks:\n\n  1. Open, load and detect the parameters of an LLM.\n  2. Load \u201cGPU information\u201d: info := gpu.GetGPUInfo().\n  3. Check the VRAM and the compatibility of the model to the hardware.\n\nThe initial detection is performed in 2. However, it is also possible that the\nmodel is marked as incompatible to the model. In this case, it will fallback\nto the CPU with the fastest variant:\n\n    \n    \n    1 2\n\n|\n\n    \n    \n    info.Library = \"cpu\" info.Variant = gpu.GetCPUVariant()  \n  \n---|---  \n  \nLet\u2019s only concentrate on 2, to see what happened in the GetGPUInfo function.\n\n## Apple Metal\n\nLet\u2019s start with the most special platform. Apple macOS platform, including\nthe XNU kernel and the userspace, is usually called darwin.\n\nIn the aformentioned getDynLibs, the Darwin detection is very simple:\n\n    \n    \n    1 2 3 4 5 6 7 8 9 10 11\n\n|\n\n    \n    \n    // Short circuit if we know we're using the default built-in (darwin only) if gpuInfo.Library == \"default\" { return []string{\"default\"} } // TODO - temporary until we have multiple CPU variations for Darwin // Short circuit on darwin with metal only if len(availableDynLibs) == 1 { if _, onlyMetal := availableDynLibs[\"metal\"]; onlyMetal { return []string{availableDynLibs[\"metal\"]} } }  \n  \n---|---  \n  \nIt uses default library according to the \u201cGPU information\u201d, or just use metal.\nThe gpu.GetGPUInfo() is in gpu/gpu_darwin.go, as simple as possible:\n\n    \n    \n    1 2 3 4 5 6 7 8 9 10 11 12 13 14\n\n|\n\n    \n    \n    func GetGPUInfo() GpuInfo { mem, _ := getCPUMem() if runtime.GOARCH == \"amd64\" { return GpuInfo{ Library: \"cpu\", Variant: GetCPUVariant(), memInfo: mem, } } return GpuInfo{ Library: \"metal\", memInfo: mem, } }  \n  \n---|---  \n  \nWe can see that, it gets the memory information and detects whether ollama is\nrunning on the Intel x86_64/amd64 platform. If so, it just uses the CPU with\nthe fastest extension. Otherwise, only ARM Mac can leverage the Metal API to\naccelerate.\n\nFrom my best know, the AMD graphic cards on Intel Mac should also have Metal\nsupport. But it will not be used on Intel Mac by ollama. Probably, it\u2019s just\ndue to the outdated drivers or the outdated graphic cards itself.\n\n## Nvidia CUDA and AMD ROCm\n\nWe then check the general detection of Nvidia and AMD GPUs, since they are\nkind of coupled together in ollama.\n\nThe implementation is in gpu/gpu.go:\n\n    \n    \n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27\n\n|\n\n    \n    \n    func GetGPUInfo() GpuInfo { // TODO - consider exploring lspci (and equivalent on windows) to check for // GPUs so we can report warnings if we see Nvidia/AMD but fail to load the libraries gpuMutex.Lock() defer gpuMutex.Unlock() if gpuHandles == nil { initGPUHandles() }// All our GPU builds on x86 have AVX enabled, so fallback to CPU if we don't detect at least AVX cpuVariant := GetCPUVariant() if cpuVariant == \"\" && runtime.GOARCH == \"amd64\" { slog.Warn(\"CPU does not have AVX or AVX2, disabling GPU support.\") }var memInfo C.mem_info_t resp := GpuInfo{} /* Getting the actual GPU information */ /* ... */ /* Fallback to CPU if no GPU detected */ /* ... */resp.DeviceCount = uint32(memInfo.count) resp.FreeMemory = uint64(memInfo.free) resp.TotalMemory = uint64(memInfo.total) return resp }  \n  \n---|---  \n  \nThe first block calls initGPUHandles to define the GPU libraries to search, in\norder to use them to get the GPU information. For Nvidia, it detects nvml.dll\nfor discrete graphic cards on Windows, libnvidia-ml.so on Linux, and\nlibcudart.so* on some special devices, such as Jetson family (thanks to a\nrecent PR).\n\nThe second block detects the CPU variant, it somehow requires at least AVX\nvariant from the CPU to enable the GPU support.\n\nIt then checks the handles and uses the libraries to lookup GPUs accordingly.\n\nFor Nvidia discrete GPUs:\n\n    \n    \n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n\n|\n\n    \n    \n    if gpuHandles.nvml != nil && (cpuVariant != \"\" || runtime.GOARCH != \"amd64\") { C.nvml_check_vram(*gpuHandles.nvml, &memInfo) if memInfo.err != nil { slog.Info(fmt.Sprintf(\"[nvidia-ml] error looking up NVML GPU memory: %s\", C.GoString(memInfo.err))) C.free(unsafe.Pointer(memInfo.err)) } else if memInfo.count > 0 { // Verify minimum compute capability var cc C.nvml_compute_capability_t C.nvml_compute_capability(*gpuHandles.nvml, &cc) if cc.err != nil { slog.Info(fmt.Sprintf(\"[nvidia-ml] error looking up NVML GPU compute capability: %s\", C.GoString(cc.err))) C.free(unsafe.Pointer(cc.err)) } else if cc.major > CudaComputeMin[0] || (cc.major == CudaComputeMin[0] && cc.minor >= CudaComputeMin[1]) { slog.Info(fmt.Sprintf(\"[nvidia-ml] NVML CUDA Compute Capability detected: %d.%d\", cc.major, cc.minor)) resp.Library = \"cuda\" } else { slog.Info(fmt.Sprintf(\"[nvidia-ml] CUDA GPU is too old. Falling back to CPU mode. Compute Capability detected: %d.%d\", cc.major, cc.minor)) } } }  \n  \n---|---  \n  \nIt calls a C function nvml_check_vram implemented in gpu/gpu_info_nvml.c to\nget the VRAM. If found one usable device, it will also check the compute\ncapability through nvml_compute_capability, to make sure that the device is\nusable.\n\nThis design has prevented me from using ZLUDA to run an LLM through ollama on\nmy AMD graphic card on Windows. Because ZLUDA was marking this function as\nunimplemented at that time. However, there is already the support to my AMD\ngraphic card. I do not need the ZLUDA anymore now.\n\nI just would just skip the Cudart support because it\u2019s not a common case.\nLet\u2019s go through the recent exciting AMD support now!\n\nThe code in GetGPUInfo for AMD is very short:\n\n    \n    \n    1 2 3 4 5 6\n\n|\n\n    \n    \n    else { AMDGetGPUInfo(&resp) if resp.Library != \"\" { return resp } }  \n  \n---|---  \n  \nYou may notice that it is an \u201celse\u201d. So, along with the \u201cif\u201d clause, AMD will\nbe tried, only if Nvidia handle is not detected. This would cause an issue:\nwhen there are Nvidia GPU libraries installed, however no GPU detected or the\ndetected GPUs are not compatible, AMD graphic cards would never be detected as\nwell. I opened an issue for this.\n\nOK, let go back to the GetGPUInfo. If Nvidia graphic card is detected, the\nLibrary in the \u201cGPU information\u201d will be set to cuda. For AMD, it will be\nrocm.\n\nSo, if the detection succeeded, the \u201cGPU information\u201d will work with the\navailableDynLibs to prioritize the library paths for cuda_* or rocm_*\nvariants. That unveils how the GPUs are detected and potentially used when\ncreating the llama servers from a bunch of dynamic libraries.\n\n# Web service and client\n\nLet\u2019s then take a look at the \u201cfrontend\u201d! There is indeed no so-called\nfrontend in ollama. Instead, it provides a bench of Web APIs, just like most\nof the other LLM services.\n\nThe basic Web APIs are implemented in server, mostly in the server/routes.go\nmodule. The full API endpoints are avaialble at GitHub. Here, we also just\ntake the chat completion endpoint as a quick example to build the view from\nthe API endpoint to what we have seen above. The endpoint is defined as:\n\n    \n    \n    1\n\n|\n\n    \n    \n    r.POST(\"/api/chat\", ChatHandler)  \n  \n---|---  \n  \nwhere ChatHandler is a callback to handle the request. It creates and parses\nthe request in a var req api.ChatRequest struct. The handler will do a lot of\nthings such as loading the model, to make sure that the prediction is\npossible.\n\nWhen everything is ready, the most important thing is here:\n\n    \n    \n    1 2 3 4 5 6 7 8 9 10\n\n|\n\n    \n    \n    // Start prediction predictReq := llm.PredictOpts{ Prompt: prompt, Format: req.Format, Images: images, Options: opts, } if err := loaded.runner.Predict(c.Request.Context(), predictReq, fn); err != nil { ch <- gin.H{\"error\": err.Error()} }  \n  \n---|---  \n  \nIt prepares the prediction request with the prompt (user inputs, prompts,\netc.), images, and other options. Then it calls the Prediction function of\nrunner, where the runner needs to implement the LLM interface under the llm\nmodule:\n\n    \n    \n    1 2 3 4 5 6 7 8 9 10 11\n\n|\n\n    \n    \n    var loaded struct { mu sync.Mutexrunner llm.LLMexpireAt time.Time expireTimer *time.Timer*Model *api.Options }  \n  \n---|---  \n  \nThe LLM interface is:\n\n    \n    \n    1 2 3 4 5 6 7\n\n|\n\n    \n    \n    type LLM interface { Predict(context.Context, PredictOpts, func(PredictResult)) error Embedding(context.Context, string) ([]float64, error) Encode(context.Context, string) ([]int, error) Decode(context.Context, []int) (string, error) Close() }  \n  \n---|---  \n  \nAnd the implementation of Predict is from dynExtServer described in Prediction\nsection. It will then call dyn_llama_server_completion and thus request the\nstarted llama server from one of the dynamic libraries.\n\nSo, we have the link now.\n\n## Go API of Ollama\n\nIntrinsically, ollama provides a wrapper in Go under api. Users can leverage\nit to call the Web APIs easier. Indeed, ollama itself also uses the Go wrapper\nto provide the actual frontend - a terminal UI.\n\nThere are also Python and JavaScript/TypeScript bindings:\n\n  * https://github.com/ollama/ollama-python\n  * https://github.com/ollama/ollama-js\n\n## OpenAI API wrapper\n\nDesipte of the native API endpoints, ollama also provides an OpenAI API-\ncompatible (well, partially compatible) endpoint in server/routes.go:\n\n    \n    \n    1 2\n\n|\n\n    \n    \n    // Compatibility endpoints r.POST(\"/v1/chat/completions\", openai.Middleware(), ChatHandler)  \n  \n---|---  \n  \nIt\u2019s indeed a convertor from OpenAI requests to ollama native requests, and\nvice-versa for responses. You can check openai/openai.go if it\u2019s interesting\nto you.\n\n# Other utilities\n\nThe terminal UI leverages the Go wrapper of the Web API endpoints to provide a\nterminal-based conversations. It needs some utilities such as readline to\ninteract with the user inputs in the terminal, and progress to show the\nprogress.\n\nThere are also the auth for API endpoint authentification, cmd for cli\ncommands provider, format for unit conversion, parser for model file parsing,\netc. Check them in detail as your wish. This post has been long enough and\njust concentrate on the overall architecture of ollama. I am also eager to\nseeing the other posts about it \ud83d\ude09\n\n# Conclusion\n\nFinally, I would end up with a simple figure for the ollama architecture\nbefore runtime:\n\nI would say as well: ollama is a thin (maybe not so thin) but smart enough\nwrapper of llama.cpp. Although it still has a few drawbacks, we really need as\nmany these kinds of wrappers as possible, to make the life easier for any end-\nusers.\n\n>   * Permanent Link: https://blog.inoki.cc/2024/04/15/Ollama/\n>\n\n### InokiComputer Scientist\n\nPh.D in Computer Science, major in Embedded System and AI.\n\nPosts\n\nOn the architecture of ollama\n\nRecently, I took a chance to explore ollama project, because I want to enable\nthe support of my AMD graphic card (with a not bad VRAM - 32G!) on Windo\n\n\u3010\u8bd1\u3011\u89e3\u91ca SDXL \u7684\u9690\u7a7a\u95f4\n\n\u539f\u6587\u5730\u5740:https://huggingface.co/blog/TimothyAlexisVass/explaining-the-sdxl-latent-\nspace \u7b80\u77ed\u7684\u80cc\u666f \u7279\u522b\u611f\u8c22 Ollin Boer Bohan Haoming\u3001 Cristina Segalin \u548c Birchlabs\n\n\u3010\u8bd1\u3011\u5173\u4e8e USB-C \u7684\u4e00\u5207:\u793a\u4f8b\u7535\u8def\n\n\u539f\u6587\u94fe\u63a5:https://hackaday.com/2023/08/07/all-about-usb-c-example-circuits/ \u5728\u4e0a\u4e00\u7bc7\nUSB-C \u6587\u7ae0\u53d1\u8868\u540e\u7684\u516d\u4e2a\u6708\u91cc,\u6211\u60f3\u4e86\u5f88\u591a\u53ef\u4ee5\u6539\u8fdb\u8fd9\u4e9b\u6587\u7ae0\u7684\u65b9\u6cd5\u3002\u5f53\u7136,\u6709\u8fd9\u79cd\u611f\u89c9\u662f\u6b63\u5e38\u7684,\u751a\u81f3\u662f\u610f\u6599\u4e4b\u4e2d\u7684\u3002\u6211\u73b0\u5728\u8ba4\u4e3a,\u6211\u53ef\u4ee5\u5f25\u8865\u4e00\u4e9b\u4e0d\u8db3\u3002\u4f8b\u5982\n\n\u3010\u8bd1\u3011\u5173\u4e8e USB-C \u7684\u4e00\u5207:\u9ad8\u901f\u63a5\u53e3\n\n\u539f\u6587\u94fe\u63a5:https://hackaday.com/2023/01/17/all-about-usb-c-high-speed-interfaces/\nUSB-C \u7684\u60ca\u4eba\u4e4b\u5904\u5728\u4e8e\u5b83\u7684\u9ad8\u901f\u6027\u80fd\u3002\u5176\u5f15\u811a\u63d0\u4f9b\u4e86\u56db\u4e2a\u9ad8\u901f\u5dee\u5206\u4fe1\u53f7\u7ebf\u5bf9\u548c\u51e0\u4e2a\u4f4e\u901f\u4fe1\u53f7\u7ebf\u5bf9,\u8ba9\u60a8\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u6bd4\u786c\u5e01\u8fd8\u5c0f\u7684\u8fde\u63a5\u5668\u4f20\u8f93\u5927\u91cf\u6570\u636e\u3002\u4f46\u5e76\u975e\u6240\n\n\u3010\u8bd1\u3011\u5173\u4e8e USB-C \u7684\u4e00\u5207:\u7535\u963b\u548c\u7535\u5b50\u6807\u8bb0(E-marker)\n\n\u539f\u6587\u94fe\u63a5:https://hackaday.com/2023/01/04/all-about-usb-c-resistors-and-emarkers/\n\u5982\u679c\u60a8\u4e00\u76f4\u5173\u6ce8\u6211\u4eec\u7684 USB-C \u7cfb\u5217\u6587\u7ae0,\u5c31\u4f1a\u77e5\u9053 USB-C \u7535\u7f06\u4e2d\u7684 CC \u7ebf\u7528\u4e8e\u901a\u4fe1\u548c\u65cb\u8f6c\u68c0\u6d4b\u3002\u4e0d\u8fc7\u4e0d\u4e3a\u4eba\u77e5\u7684\u662f,USB-C \u6709\u4e24\u79cd\u901a\u4fe1\u534f\n\nPages\n\nAbout me \u5173\u4e8e\n\nTo be continued...\n\nall-archives\n\nall-tags\n\nall-categories\n\nSpringer Free Books\n\nFrom Reddit: Fundamentals of Power Electronics\nhttp://link.springer.com/openurl?genre=book&amp;isbn=978-0-306-48048-5\nHandbook of the Life Course http\n\nCategories\n\nAIAI\n\nLLMAI/LLM\n\nStable DiffusionAI/Stable-Diffusion\n\nTranslationTranslation\n\nChineseTranslation/Chinese\n\nTags\n\nLLMLLM\n\nollamaollama\n\n\u7ffb\u8bd1\u7ffb\u8bd1\n\n\u4e2d\u6587\u4e2d\u6587\n\nAIAI\n\n## Welcome\n\n# This site asks for consent to use your data\n\n  * perm_identity\n\nPersonalised advertising and content, advertising and content measurement,\naudience research and services development\n\n  * devices\n\nStore and/or access information on a device\n\n  * How can I change my choice?\n\n  * What if I don't consent?\n\n  * How does legitimate interest work?\n\n  * Do I have to consent to everything?\n\nYour personal data will be processed and information from your device\n(cookies, unique identifiers, and other device data) may be stored by,\naccessed by and shared with 136 TCF vendor(s) and 63 ad partner(s), or used\nspecifically by this site or app.\n\nSome vendors may process your personal data on the basis of legitimate\ninterest, which you can object to by managing your options below. Look for a\nlink at the bottom of this page or in our privacy policy where you can\nwithdraw consent.\n\nData preferences\n\n# Manage your data\n\nYou can choose how your personal data is used. Vendors want your permission to\ndo the following:\n\nTCF vendors\n\n## Store and/or access information on a device\n\nCookies, device or similar online identifiers (e.g. login-based identifiers,\nrandomly assigned identifiers, network based identifiers) together with other\ninformation (e.g. browser type and information, language, screen size,\nsupported technologies etc.) can be stored or read on your device to recognise\nit each time it connects to an app or to a website, for one or several of the\npurposes presented here.\n\nView details\n\n## Use limited data to select advertising\n\nAdvertising presented to you on this service can be based on limited data,\nsuch as the website or app you are using, your non-precise location, your\ndevice type or which content you are (or have been) interacting with (for\nexample, to limit the number of times an ad is presented to you).\n\nView details\n\n## Create profiles for personalised advertising\n\nInformation about your activity on this service (such as forms you submit,\ncontent you look at) can be stored and combined with other information about\nyou (for example, information from your previous activity on this service and\nother websites or apps) or similar users. This is then used to build or\nimprove a profile about you (that might include possible interests and\npersonal aspects). Your profile can be used (also later) to present\nadvertising that appears more relevant based on your possible interests by\nthis and other entities.\n\nView details\n\n## Use profiles to select personalised advertising\n\nAdvertising presented to you on this service can be based on your advertising\nprofiles, which can reflect your activity on this service or other websites or\napps (like the forms you submit, content you look at), possible interests and\npersonal aspects.\n\nView details\n\n## Create profiles to personalise content\n\nInformation about your activity on this service (for instance, forms you\nsubmit, non-advertising content you look at) can be stored and combined with\nother information about you (such as your previous activity on this service or\nother websites or apps) or similar users. This is then used to build or\nimprove a profile about you (which might for example include possible\ninterests and personal aspects). Your profile can be used (also later) to\npresent content that appears more relevant based on your possible interests,\nsuch as by adapting the order in which content is shown to you, so that it is\neven easier for you to find content that matches your interests.\n\nView details\n\n## Use profiles to select personalised content\n\nContent presented to you on this service can be based on your content\npersonalisation profiles, which can reflect your activity on this or other\nservices (for instance, the forms you submit, content you look at), possible\ninterests and personal aspects. This can for example be used to adapt the\norder in which content is shown to you, so that it is even easier for you to\nfind (non-advertising) content that matches your interests.\n\nView details\n\n## Measure advertising performance\n\nInformation regarding which advertising is presented to you and how you\ninteract with it can be used to determine how well an advert has worked for\nyou or other users and whether the goals of the advertising were reached. For\ninstance, whether you saw an ad, whether you clicked on it, whether it led you\nto buy a product or visit a website, etc. This is very helpful to understand\nthe relevance of advertising campaigns.\n\nView details\n\n## Measure content performance\n\nInformation regarding which content is presented to you and how you interact\nwith it can be used to determine whether the (non-advertising) content e.g.\nreached its intended audience and matched your interests. For instance,\nwhether you read an article, watch a video, listen to a podcast or look at a\nproduct description, how long you spent on this service and the web pages you\nvisit etc. This is very helpful to understand the relevance of (non-\nadvertising) content that is shown to you.\n\nView details\n\n## Understand audiences through statistics or combinations of data from\ndifferent sources\n\nReports can be generated based on the combination of data sets (like user\nprofiles, statistics, market research, analytics data) regarding your\ninteractions and those of other users with advertising or (non-advertising)\ncontent to identify common characteristics (for instance, to determine which\ntarget audiences are more receptive to an ad campaign or to certain contents).\n\nView details\n\n## Develop and improve services\n\nInformation about your activity on this service, such as your interaction with\nads or content, can be very helpful to improve products and services and to\nbuild new products and services based on user interactions, the type of\naudience, etc. This specific purpose does not include the development or\nimprovement of user profiles and identifiers.\n\nView details\n\n## Use limited data to select content\n\nContent presented to you on this service can be based on limited data, such as\nthe website or app you are using, your non-precise location, your device type,\nor which content you are (or have been) interacting with (for example, to\nlimit the number of times a video or an article is presented to you).\n\nView details\n\n## Ensure security, prevent and detect fraud, and fix errors\n\nYour data can be used to monitor for and prevent unusual and possibly\nfraudulent activity (for example, regarding advertising, ad clicks by bots),\nand ensure systems and processes work properly and securely. It can also be\nused to correct any problems you, the publisher or the advertiser may\nencounter in the delivery of content and ads and in your interaction with\nthem.\n\nView details\n\n## Deliver and present advertising and content\n\nCertain information (like an IP address or device capabilities) is used to\nensure the technical compatibility of the content or advertising, and to\nfacilitate the transmission of the content or ad to your device.\n\nView details\n\n## Match and combine data from other data sources\n\nInformation about your activity on this service may be matched and combined\nwith other information relating to you and originating from various sources\n(for instance your activity on a separate online service, your use of a\nloyalty card in-store, or your answers to a survey), in support of the\npurposes explained in this notice.\n\nView details\n\n## Link different devices\n\nIn support of the purposes explained in this notice, your device might be\nconsidered as likely linked to other devices that belong to you or your\nhousehold (for instance because you are logged in to the same service on both\nyour phone and your computer, or because you may use the same Internet\nconnection on both devices).\n\nView details\n\n## Identify devices based on information transmitted automatically\n\nYour device might be distinguished from other devices based on information it\nautomatically sends when accessing the Internet (for instance, the IP address\nof your Internet connection or the type of browser you are using) in support\nof the purposes exposed in this notice.\n\nView details\n\n## Use precise geolocation data\n\nWith your acceptance, your precise location (within a radius of less than 500\nmetres) may be used in support of the purposes explained in this notice.\n\nView details\n\nVendor preferences\n\n# Confirm our vendors\n\nVendors can use your data to provide services. Declining a vendor can stop\nthem from using the data you shared.\n\nTCF vendors\n\n## Exponential Interactive, Inc d/b/a VDX.tv\n\nCookie duration: 90 (days).\n\nData collected and processed: IP addresses, Non-precise location data,\nBrowsing and interaction data, Device identifiers, Users\u2019 profiles, Privacy\nchoices, Probabilistic identifiers\n\nmore\n\nCookie duration resets each session.\n\nView details | Storage details | Privacy policylaunch\n\n## Roq.ad GmbH\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nPrecise location data, Privacy choices, Authentication-derived identifiers,\nProbabilistic identifiers\n\nmore\n\nCookie duration resets each session.\n\nView details | Storage details | Privacy policylaunch\n\n## AdMaxim Limited\n\nCookie duration: 30 (days).\n\nData collected and processed: IP addresses, Browsing and interaction data,\nProbabilistic identifiers\n\nmore\n\nCookie duration resets each session.\n\nView details | Privacy policylaunch\n\n## Index Exchange Inc.\n\nCookie duration: 395 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Device identifiers, Precise location data, Privacy\nchoices\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## Quantcast\n\nCookie duration: 396 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Privacy choices, Authentication-derived\nidentifiers, Probabilistic identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## BeeswaxIO Corporation\n\nCookie duration: 395 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nPrecise location data, Privacy choices, Probabilistic identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## Sovrn, Inc.\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Users\u2019 profiles, Privacy\nchoices\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Privacy policylaunch\n\n## Adikteev\n\nDoesn't use cookies.\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Device identifiers, Users\u2019 profiles, Authentication-\nderived identifiers, Probabilistic identifiers\n\nmore\n\nUses other forms of storage.\n\nView details | Privacy policylaunch\n\n## RTB House S.A.\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nUsers\u2019 profiles, Privacy choices\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## The UK Trade Desk Ltd\n\nCookie duration: 3629 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nUsers\u2019 profiles, Precise location data, Privacy choices, Authentication-\nderived identifiers, Probabilistic identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## admetrics GmbH\n\nDoesn't use cookies.\n\nData collected and processed: IP addresses, Device characteristics, Browsing\nand interaction data, Privacy choices\n\nmore\n\nView details | Privacy policylaunch\n\n## Nexxen Inc.\n\nCookie duration: 180 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nUsers\u2019 profiles, Privacy choices, Probabilistic identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## Epsilon\n\nCookie duration: 184 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Privacy choices, Authentication-derived\nidentifiers, Probabilistic identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Privacy policylaunch\n\n## Yahoo EMEA Limited\n\nCookie duration: 397 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nUsers\u2019 profiles, Precise location data, Privacy choices, Probabilistic\nidentifiers\n\nmore\n\nCookie duration resets each session.\n\nView details | Storage details | Privacy policylaunch\n\n## ADventori SAS\n\nCookie duration: 90 (days).\n\nData collected and processed: IP addresses, User-provided data, Non-precise\nlocation data, Browsing and interaction data, Device identifiers,\nProbabilistic identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Privacy policylaunch\n\n## TripleLift, Inc.\n\nCookie duration: 90 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nUsers\u2019 profiles, Precise location data, Privacy choices, Authentication-\nderived identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Privacy policylaunch\n\n## Xandr, Inc.\n\nCookie duration: 90 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nUsers\u2019 profiles, Precise location data, Privacy choices, Authentication-\nderived identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## NEORY GmbH\n\nCookie duration: 90 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Privacy choices, Authentication-derived\nidentifiers, Probabilistic identifiers\n\nmore\n\nCookie duration resets each session.\n\nView details | Privacy policylaunch\n\n## Nexxen Group LLC\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Device identifiers, Users\u2019 profiles, Privacy choices,\nProbabilistic identifiers\n\nmore\n\nCookie duration resets each session.\n\nView details | Privacy policylaunch\n\n## NEURAL.ONE\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Privacy choices,\nProbabilistic identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## ADITION (Virtual Minds GmbH)\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Precise location data, Privacy choices,\nProbabilistic identifiers\n\nmore\n\nCookie duration resets each session.\n\nView details | Storage details | Privacy policylaunch\n\n## Active Agent (Virtual Minds GmbH)\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Precise location data, Privacy choices,\nProbabilistic identifiers\n\nmore\n\nCookie duration resets each session.\n\nView details | Storage details | Privacy policylaunch\n\n## Taboola Europe Limited\n\nCookie duration: 366 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nUsers\u2019 profiles, Privacy choices, Probabilistic identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## Equativ\n\nCookie duration: 396 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nUsers\u2019 profiles, Precise location data, Privacy choices, Authentication-\nderived identifiers, Probabilistic identifiers\n\nmore\n\nUses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## Adform A/S\n\nCookie duration: 3650 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Privacy choices, Authentication-derived\nidentifiers, Probabilistic identifiers\n\nmore\n\nCookie duration resets each session.\n\nView details | Storage details | Privacy policylaunch\n\n## Magnite, Inc.\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nPrecise location data, Privacy choices, Probabilistic identifiers\n\nmore\n\nUses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## RATEGAIN ADARA INC\n\nCookie duration: 730 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Privacy choices, Authentication-derived\nidentifiers\n\nmore\n\nView details | Storage details | Privacy policylaunch\n\n## Sift Media, Inc\n\nDoesn't use cookies.\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Device identifiers, Precise location data\n\nmore\n\nView details | Privacy policylaunch\n\n## Rakuten Marketing LLC\n\nCookie duration: 730 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Privacy choices, Authentication-derived\nidentifiers, Probabilistic identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Privacy policylaunch\n\n## Lumen Research Limited\n\nDoesn't use cookies.\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data\n\nmore\n\nView details | Privacy policylaunch\n\n## Amazon Ad Server\n\nCookie duration: 396 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nUsers\u2019 profiles, Privacy choices, Authentication-derived identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## OpenX\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nPrivacy choices\n\nmore\n\nCookie duration resets each session.\n\nView details | Storage details | Privacy policylaunch\n\n## Yieldlab (Virtual Minds GmbH)\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Precise location data, Privacy choices\n\nmore\n\nCookie duration resets each session.\n\nView details | Storage details | Privacy policylaunch\n\n## Roku Advertising Services\n\nCookie duration: 396 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Precise location data, Privacy choices,\nAuthentication-derived identifiers, Probabilistic identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## Nano Interactive Group Ltd.\n\nDoesn't use cookies.\n\nData collected and processed: Device characteristics, Non-precise location\ndata, Browsing and interaction data\n\nmore\n\nView details | Privacy policylaunch\n\n## Simplifi Holdings LLC\n\nCookie duration: 366 (days).\n\nData collected and processed: IP addresses, Device identifiers, Precise\nlocation data\n\nmore\n\nUses other forms of storage.\n\nView details | Privacy policylaunch\n\n## PubMatic, Inc\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Precise location data, Privacy choices,\nAuthentication-derived identifiers, Probabilistic identifiers\n\nmore\n\nUses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## Comscore B.V.\n\nCookie duration: 720 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Browsing and interaction data, Device identifiers, Privacy\nchoices, Authentication-derived identifiers, Probabilistic identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Privacy policylaunch\n\n## Flashtalking\n\nCookie duration: 730 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nUsers\u2019 profiles, Privacy choices, Authentication-derived identifiers,\nProbabilistic identifiers\n\nmore\n\nView details | Privacy policylaunch\n\n## PulsePoint, Inc.\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, Device characteristics, Device\nidentifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Privacy policylaunch\n\n## Smaato, Inc.\n\nCookie duration: 21 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Precise location data, Privacy choices,\nAuthentication-derived identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## Semasio GmbH\n\nCookie duration: 366 (days).\n\nData collected and processed: IP addresses, Browsing and interaction data,\nDevice identifiers, Privacy choices\n\nmore\n\nCookie duration resets each session.\n\nView details | Storage details | Privacy policylaunch\n\n## Crimtan Holdings Limited\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Precise location data, Privacy choices,\nAuthentication-derived identifiers, Probabilistic identifiers\n\nmore\n\nCookie duration resets each session.\n\nView details | Privacy policylaunch\n\n## Genius Sports UK Limited\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nUsers\u2019 profiles, Privacy choices, Authentication-derived identifiers,\nProbabilistic identifiers\n\nmore\n\nCookie duration resets each session.\n\nView details | Storage details | Privacy policylaunch\n\n## Criteo SA\n\nCookie duration: 390 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nUsers\u2019 profiles, Privacy choices, Authentication-derived identifiers,\nProbabilistic identifiers\n\nmore\n\nUses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## Adloox SA\n\nDoesn't use cookies.\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nProbabilistic identifiers\n\nmore\n\nUses other forms of storage.\n\nView details | Privacy policylaunch\n\n## Blis Global Limited\n\nCookie duration: 400 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Precise location data, Privacy choices,\nAuthentication-derived identifiers, Probabilistic identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## Lotame Solutions, Inc\n\nCookie duration: 274 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Browsing and interaction data, Device identifiers, Users\u2019\nprofiles, Privacy choices, Authentication-derived identifiers, Probabilistic\nidentifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Privacy policylaunch\n\n## LiveRamp\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nPrivacy choices, Authentication-derived identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## GroupM UK Limited\n\nCookie duration: 395 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nPrecise location data, Privacy choices, Authentication-derived identifiers,\nProbabilistic identifiers\n\nmore\n\nCookie duration resets each session.\n\nView details | Storage details | Privacy policylaunch\n\n## LoopMe Limited\n\nCookie duration: 90 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Precise location data, Privacy choices,\nProbabilistic identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## Dynata LLC\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Privacy choices, Authentication-derived\nidentifiers\n\nmore\n\nCookie duration resets each session.\n\nView details | Storage details | Privacy policylaunch\n\n## Ask Locala\n\nDoesn't use cookies.\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Device identifiers, Precise location data, Privacy\nchoices\n\nmore\n\nUses other forms of storage.\n\nView details | Privacy policylaunch\n\n## Near Intelligence\n\nDoesn't use cookies.\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nUsers\u2019 profiles, Precise location data, Privacy choices\n\nmore\n\nUses other forms of storage.\n\nView details | Privacy policylaunch\n\n## DoubleVerify Inc.\n\nDoesn't use cookies.\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Privacy choices,\nProbabilistic identifiers\n\nmore\n\nView details | Privacy policylaunch\n\n## BIDSWITCH GmbH\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nPrecise location data, Privacy choices, Authentication-derived identifiers,\nProbabilistic identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## IPONWEB GmbH\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Privacy choices, Authentication-derived identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## NextRoll, Inc.\n\nCookie duration: 183 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Privacy choices\n\nmore\n\nCookie duration resets each session.\n\nView details | Privacy policylaunch\n\n## Teads France SAS\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nUsers\u2019 profiles, Privacy choices, Probabilistic identifiers\n\nmore\n\nUses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## Str\u00f6er SSP GmbH (SSP)\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nUsers\u2019 profiles, Privacy choices, Probabilistic identifiers\n\nmore\n\nUses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## OS Data Solutions GmbH &amp; Co. KG\n\nCookie duration: 90 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Privacy choices, Probabilistic\nidentifiers\n\nmore\n\nUses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## Permodo GmbH\n\nDoesn't use cookies.\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nUsers\u2019 profiles, Privacy choices\n\nmore\n\nUses other forms of storage.\n\nView details | Privacy policylaunch\n\n## Platform161 B.V.\n\nCookie duration: 396 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nUsers\u2019 profiles, Precise location data, Privacy choices, Probabilistic\nidentifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## Adacado Technologies Inc. (DBA Adacado)\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, Non-precise location data,\nBrowsing and interaction data, Privacy choices\n\nmore\n\nCookie duration resets each session.\n\nView details | Storage details | Privacy policylaunch\n\n## Basis Global Technologies, Inc.\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nUsers\u2019 profiles, Precise location data, Privacy choices, Authentication-\nderived identifiers\n\nmore\n\nCookie duration resets each session.\n\nView details | Privacy policylaunch\n\n## SMADEX, S.L.U.\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Device identifiers, Users\u2019\nprofiles, Privacy choices, Probabilistic identifiers\n\nmore\n\nCookie duration resets each session.\n\nView details | Storage details | Privacy policylaunch\n\n## Bombora Inc.\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nUsers\u2019 profiles, Authentication-derived identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## EASYmedia GmbH\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nUsers\u2019 profiles, Precise location data, Privacy choices, Probabilistic\nidentifiers\n\nmore\n\nCookie duration resets each session.\n\nView details | Storage details | Privacy policylaunch\n\n## Remerge GmbH\n\nDoesn't use cookies.\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers\n\nmore\n\nUses other forms of storage.\n\nView details | Privacy policylaunch\n\n## advanced store GmbH\n\nCookie duration: 365 (days).\n\nData collected and processed: Device identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## Magnite CTV, Inc.\n\nCookie duration: 366 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nPrecise location data, Privacy choices, Probabilistic identifiers\n\nmore\n\nView details | Storage details | Privacy policylaunch\n\n## Delta Projects AB\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Precise location data, Privacy choices,\nAuthentication-derived identifiers, Probabilistic identifiers\n\nmore\n\nView details | Storage details | Privacy policylaunch\n\n## usemax advertisement (Emego GmbH)\n\nCookie duration: 365 (days).\n\nData collected and processed: Users\u2019 profiles\n\nmore\n\nCookie duration resets each session.\n\nView details | Storage details | Privacy policylaunch\n\n## emetriq GmbH\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Privacy choices, Authentication-derived\nidentifiers, Probabilistic identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## Publicis Media GmbH\n\nCookie duration: 1825 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Privacy choices, Authentication-derived\nidentifiers, Probabilistic identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Privacy policylaunch\n\n## M.D. Primis Technologies Ltd.\n\nCookie duration: 25 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Privacy choices, Probabilistic identifiers\n\nmore\n\nView details | Storage details | Privacy policylaunch\n\n## OneTag Limited\n\nCookie duration: 396 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nPrivacy choices\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## Cloud Technologies S.A.\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nUsers\u2019 profiles, Privacy choices, Authentication-derived identifiers\n\nmore\n\nCookie duration resets each session.\n\nView details | Privacy policylaunch\n\n## Smartology Limited\n\nDoesn't use cookies.\n\nData collected and processed: IP addresses\n\nmore\n\nUses other forms of storage.\n\nView details | Privacy policylaunch\n\n## Improve Digital\n\nCookie duration: 90 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Precise location data, Privacy choices,\nAuthentication-derived identifiers, Probabilistic identifiers\n\nmore\n\nCookie duration resets each session.\n\nView details | Storage details | Privacy policylaunch\n\n## Adobe Advertising Cloud\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, Device identifiers, Privacy\nchoices, Authentication-derived identifiers\n\nmore\n\nView details | Storage details | Privacy policylaunch\n\n## Bannerflow AB\n\nCookie duration: 366 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Privacy choices\n\nmore\n\nView details | Storage details | Privacy policylaunch\n\n## TabMo SAS\n\nDoesn't use cookies.\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Precise location data, Privacy choices,\nProbabilistic identifiers\n\nmore\n\nUses other forms of storage.\n\nView details | Privacy policylaunch\n\n## Integral Ad Science (incorporating ADmantX)\n\nDoesn't use cookies.\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Privacy choices\n\nmore\n\nView details | Privacy policylaunch\n\n## Wizaly\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Privacy choices,\nAuthentication-derived identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## Weborama\n\nCookie duration: 393 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Privacy choices, Authentication-derived\nidentifiers, Probabilistic identifiers\n\nmore\n\nUses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## Jivox Corporation\n\nCookie duration: 30 (days).\n\nData collected and processed: IP addresses, Non-precise location data,\nBrowsing and interaction data, Device identifiers, Users\u2019 profiles, Precise\nlocation data, Privacy choices\n\nmore\n\nCookie duration resets each session.\n\nView details | Storage details | Privacy policylaunch\n\n## Sage&#43;Archer BV\n\nDoesn't use cookies.\n\nData collected and processed: Non-precise location data\n\nmore\n\nView details | Privacy policylaunch\n\n## On Device Research Limited\n\nCookie duration: 30 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Precise location data\n\nmore\n\nView details | Storage details | Privacy policylaunch\n\n## Rockabox Media Ltd\n\nDoesn't use cookies.\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data\n\nmore\n\nView details | Storage details | Privacy policylaunch\n\n## Exactag GmbH\n\nCookie duration: 180 (days).\n\nData collected and processed: IP addresses, Device characteristics, Browsing\nand interaction data, Device identifiers, Privacy choices, Authentication-\nderived identifiers\n\nmore\n\nCookie duration resets each session.\n\nView details | Storage details | Privacy policylaunch\n\n## Celtra Inc.\n\nDoesn't use cookies.\n\nData collected and processed: IP addresses, Device characteristics, Device\nidentifiers, Precise location data\n\nmore\n\nUses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## mainADV Srl\n\nCookie duration: 30 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Privacy choices\n\nmore\n\nUses other forms of storage.\n\nView details | Privacy policylaunch\n\n## Gemius SA\n\nCookie duration: 1825 (days).\n\nData collected and processed: Device characteristics, Browsing and interaction\ndata, Device identifiers, Users\u2019 profiles, Privacy choices\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## The Kantar Group Limited\n\nCookie duration: 914 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nPrivacy choices\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Privacy policylaunch\n\n## Nielsen Media Research Ltd.\n\nCookie duration: 120 (days).\n\nData collected and processed: IP addresses, Device characteristics, Browsing\nand interaction data, Device identifiers, Privacy choices\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## Solocal SA\n\nCookie duration: 396 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Precise location data, Privacy choices\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## Pixalate, Inc.\n\nDoesn't use cookies.\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers\n\nmore\n\nView details | Storage details | Privacy policylaunch\n\n## Oracle Advertising\n\nCookie duration: 180 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Privacy choices, Authentication-derived\nidentifiers\n\nmore\n\nUses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## Numberly\n\nCookie duration: 180 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Privacy choices, Authentication-derived\nidentifiers\n\nmore\n\nCookie duration resets each session.\n\nView details | Storage details | Privacy policylaunch\n\n## AudienceProject A/S\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Privacy choices, Authentication-derived\nidentifiers, Probabilistic identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## Demandbase, Inc.\n\nCookie duration: 730 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Precise location data, Privacy choices,\nProbabilistic identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## Effiliation / Effinity\n\nCookie duration: 30 (days).\n\nData collected and processed: Device characteristics\n\nmore\n\nCookie duration resets each session.\n\nView details | Storage details | Privacy policylaunch\n\n## Arrivalist Co.\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, Non-precise location data\n\nmore\n\nCookie duration resets each session.\n\nView details | Storage details | Privacy policylaunch\n\n## Seenthis AB\n\nDoesn't use cookies.\n\nData collected and processed: IP addresses, Device characteristics\n\nmore\n\nView details | Privacy policylaunch\n\n## Commanders Act\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, Device identifiers\n\nmore\n\nView details | Storage details | Privacy policylaunch\n\n## travel audience GmbH\n\nCookie duration: 397 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nUsers\u2019 profiles, Precise location data, Authentication-derived identifiers,\nProbabilistic identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Privacy policylaunch\n\n## HUMAN\n\nDoesn't use cookies.\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Device identifiers, Probabilistic identifiers\n\nmore\n\nView details | Privacy policylaunch\n\n## Adludio Ltd.\n\nDoesn't use cookies.\n\nData collected and processed: Device characteristics\n\nmore\n\nView details | Privacy policylaunch\n\n## Blendee srl\n\nCookie duration: 366 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Privacy choices, Authentication-derived\nidentifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## Innovid LLC\n\nCookie duration: 90 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nPrivacy choices\n\nmore\n\nCookie duration resets each session.\n\nView details | Storage details | Privacy policylaunch\n\n## Papirfly AS\n\nDoesn't use cookies.\n\nData collected and processed: Device characteristics\n\nmore\n\nView details | Privacy policylaunch\n\n## Neustar, Inc., a TransUnion company\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Privacy choices, Authentication-derived\nidentifiers, Probabilistic identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Privacy policylaunch\n\n## Verve Group Europe GmbH\n\nDoesn't use cookies.\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Precise location data, Privacy choices,\nAuthentication-derived identifiers\n\nmore\n\nUses other forms of storage.\n\nView details | Privacy policylaunch\n\n## Otto (GmbH &amp; Co KG)\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, User-provided data, Browsing and\ninteraction data, Device identifiers, Users\u2019 profiles, Privacy choices\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## Adobe Audience Manager, Adobe Experience Platform\n\nCookie duration: 180 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Precise location data, Privacy choices,\nAuthentication-derived identifiers, Probabilistic identifiers\n\nmore\n\nCookie duration resets each session.\n\nView details | Storage details | Privacy policylaunch\n\n## Localsensor B.V.\n\nDoesn't use cookies.\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Device identifiers, Precise location data, Privacy\nchoices\n\nmore\n\nUses other forms of storage.\n\nView details | Privacy policylaunch\n\n## Online Solution\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Precise location data, Privacy choices,\nProbabilistic identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Privacy policylaunch\n\n## Relay42 Netherlands B.V.\n\nCookie duration: 730 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Browsing and interaction data, Device identifiers, Users\u2019\nprofiles, Privacy choices, Probabilistic identifiers\n\nmore\n\nView details | Storage details | Privacy policylaunch\n\n## GP One GmbH\n\nCookie duration: Uses session cookies.\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nPrivacy choices\n\nmore\n\nUses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## The MediaGrid Inc.\n\nCookie duration: 365 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nPrecise location data, Privacy choices, Probabilistic identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## MindTake Research GmbH\n\nCookie duration: 180 (days).\n\nData collected and processed: IP addresses, Device characteristics, Browsing\nand interaction data, Device identifiers, Users\u2019 profiles, Probabilistic\nidentifiers\n\nmore\n\nUses other forms of storage.\n\nView details | Privacy policylaunch\n\n## Cint AB\n\nCookie duration: 730 (days).\n\nData collected and processed: IP addresses, Device characteristics, Browsing\nand interaction data, Device identifiers, Privacy choices\n\nmore\n\nUses other forms of storage.\n\nView details | Privacy policylaunch\n\n## Google Advertising Products\n\nCookie duration: 396 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Privacy choices, Authentication-derived\nidentifiers\n\nmore\n\nUses other forms of storage.\n\nView details | Privacy policylaunch\n\n## GfK GmbH\n\nCookie duration: 730 (days).\n\nData collected and processed: IP addresses, User-provided data, Device\ncharacteristics, Non-precise location data, Browsing and interaction data,\nDevice identifiers, Users\u2019 profiles, Privacy choices, Authentication-derived\nidentifiers\n\nmore\n\nUses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## RevJet\n\nCookie duration: 730 (days).\n\nData collected and processed: IP addresses, Non-precise location data, Device\nidentifiers, Users\u2019 profiles, Privacy choices\n\nmore\n\nCookie duration resets each session.\n\nView details | Storage details | Privacy policylaunch\n\n## Protected Media LTD\n\nDoesn't use cookies.\n\nData collected and processed: IP addresses, Device characteristics, Browsing\nand interaction data, Device identifiers, Probabilistic identifiers\n\nmore\n\nView details | Privacy policylaunch\n\n## Oracle Data Cloud - Moat\n\nDoesn't use cookies.\n\nData collected and processed: IP addresses, Non-precise location data\n\nmore\n\nView details | Privacy policylaunch\n\n## Hearts and Science M\u00fcnchen GmbH\n\nCookie duration: 60 (days).\n\nData collected and processed: IP addresses\n\nmore\n\nCookie duration resets each session.\n\nView details | Privacy policylaunch\n\n## Amazon Advertising\n\nCookie duration: 396 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nUsers\u2019 profiles, Privacy choices, Authentication-derived identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Storage details | Privacy policylaunch\n\n## Moloco, Inc.\n\nCookie duration: 730 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Device identifiers\n\nmore\n\nCookie duration resets each session. Uses other forms of storage.\n\nView details | Privacy policylaunch\n\n## Adtriba GmbH\n\nCookie duration: 730 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nPrivacy choices, Authentication-derived identifiers\n\nmore\n\nCookie duration resets each session.\n\nView details | Storage details | Privacy policylaunch\n\n## Objective Partners BV\n\nCookie duration: 90 (days).\n\nData collected and processed: Device identifiers\n\nmore\n\nCookie duration resets each session.\n\nView details | Storage details | Privacy policylaunch\n\n## Ensighten\n\nCookie duration: 1825 (days).\n\nData collected and processed: IP addresses, Device characteristics, Browsing\nand interaction data, Device identifiers, Privacy choices\n\nmore\n\nCookie duration resets each session.\n\nView details | Storage details | Privacy policylaunch\n\n## eBay Inc\n\nCookie duration: 90 (days).\n\nData collected and processed: IP addresses, Device characteristics, Privacy\nchoices\n\nmore\n\nView details | Storage details | Privacy policylaunch\n\n## Hurra Communications GmbH\n\nCookie duration: 366 (days).\n\nData collected and processed: IP addresses, Device characteristics, Non-\nprecise location data, Browsing and interaction data, Device identifiers,\nPrecise location data, Authentication-derived identifiers, Probabilistic\nidentifiers\n\nmore\n\nCookie duration resets each session.\n\nView details | Storage details | Privacy policylaunch\n\nAd partners\n\n## gskinner\n\nPrivacy policylaunch\n\n## Akamai\n\nPrivacy policylaunch\n\n## Meta\n\nPrivacy policylaunch\n\n## Aunica\n\nPrivacy policylaunch\n\n## Booking.com\n\nPrivacy policylaunch\n\n## C3 Metrics\n\nPrivacy policylaunch\n\n## IBM\n\nPrivacy policylaunch\n\n## Evidon\n\nPrivacy policylaunch\n\n## CUBED\n\nPrivacy policylaunch\n\n## Optomaton\n\nPrivacy policylaunch\n\n## intelliAd\n\nPrivacy policylaunch\n\n## Analights\n\nPrivacy policylaunch\n\n## Dstillery\n\nPrivacy policylaunch\n\n## MediaMath\n\nPrivacy policylaunch\n\n## ZMS\n\nPrivacy policylaunch\n\n## Dentsu Aegis Network\n\nPrivacy policylaunch\n\n## Ignition One\n\nPrivacy policylaunch\n\n## Omnicom Media Group\n\nPrivacy policylaunch\n\n## Digiseg\n\nPrivacy policylaunch\n\n## Resonate\n\nPrivacy policylaunch\n\n## Sojern\n\nPrivacy policylaunch\n\n## Haensel AMS\n\nPrivacy policylaunch\n\n## BDSK Handels GmbH & Co. KG\n\nPrivacy policylaunch\n\n## Tradedoubler AB\n\nPrivacy policylaunch\n\n## TrustArc\n\nPrivacy policylaunch\n\n## TruEffect\n\nPrivacy policylaunch\n\n## Marketing Science Consulting Group, Inc.\n\nPrivacy policylaunch\n\n## DENTSU\n\nPrivacy policylaunch\n\n## Kobler\n\nPrivacy policylaunch\n\n## Travel Data Collective\n\nPrivacy policylaunch\n\n## advolution.control\n\nPrivacy policylaunch\n\n## Widespace\n\nPrivacy policylaunch\n\n## LifeStreet\n\nPrivacy policylaunch\n\n## Vimeo\n\nPrivacy policylaunch\n\n## Batch Media\n\nPrivacy policylaunch\n\n## Vodafone GmbH\n\nPrivacy policylaunch\n\n## Magnite\n\nPrivacy policylaunch\n\n## Scenestealer\n\nPrivacy policylaunch\n\n## Netquest\n\nPrivacy policylaunch\n\n## Manage.com\n\nPrivacy policylaunch\n\n## Cloudflare\n\nPrivacy policylaunch\n\n## Salesforce DMP\n\nPrivacy policylaunch\n\n## Netflix\n\nPrivacy policylaunch\n\n## Macromill group\n\nPrivacy policylaunch\n\n## ebuilders\n\nPrivacy policylaunch\n\n## AppLovin Corp.\n\nPrivacy policylaunch\n\n## Fractional Media\n\nPrivacy policylaunch\n\n## Rackspace\n\nPrivacy policylaunch\n\n## Liftoff\n\nPrivacy policylaunch\n\n## MSI-ACI\n\nPrivacy policylaunch\n\n## Navegg\n\nPrivacy policylaunch\n\n## Admedo\n\nPrivacy policylaunch\n\n## Kochava\n\nPrivacy policylaunch\n\n## Mobitrans\n\nPrivacy policylaunch\n\n## ADEX\n\nPrivacy policylaunch\n\n## Impact\n\nPrivacy policylaunch\n\n## Spotad\n\nPrivacy policylaunch\n\n## Aarki\n\nPrivacy policylaunch\n\n## SFR\n\nPrivacy policylaunch\n\n## Cablato\n\nPrivacy policylaunch\n\n## Waystack\n\nPrivacy policylaunch\n\n## Clinch\n\nPrivacy policylaunch\n\n## TreSensa\n\nPrivacy policylaunch\n\n", "frontpage": false}
