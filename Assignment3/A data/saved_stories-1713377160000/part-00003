{"aid": "40061194", "title": "Custom Gestures Library for SwiftUI and RealityKit", "url": "https://github.com/Umain-Vision-Pro/UmainSpatialGestures", "domain": "github.com/umain-vision-pro", "votes": 1, "user": "orjan", "posted_at": "2024-04-17 06:37:21", "comments": 0, "source_title": "GitHub - Umain-Vision-Pro/UmainSpatialGestures: Package for visionOS creating quick gestures for RealityView ModelEntities.", "source_text": "GitHub - Umain-Vision-Pro/UmainSpatialGestures: Package for visionOS creating\nquick gestures for RealityView ModelEntities.\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nUmain-Vision-Pro / UmainSpatialGestures Public\n\n  * Notifications\n  * Fork 1\n  * Star 2\n\nPackage for visionOS creating quick gestures for RealityView ModelEntities.\n\nvision.umain.com\n\n2 stars 1 fork Branches Tags Activity\n\nStar\n\nNotifications\n\n# Umain-Vision-Pro/UmainSpatialGestures\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n0 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nalfredskedenUpdate README.mdApr 12, 20240c80e7b \u00b7 Apr 12, 2024Apr 12, 2024\n\n## History\n\n36 Commits  \n  \n### .github/workflows\n\n|\n\n### .github/workflows\n\n| Update swift.yml| Apr 11, 2024  \n  \n### .swiftpm/xcode\n\n|\n\n### .swiftpm/xcode\n\n| fix: Delete test| Apr 11, 2024  \n  \n### Sources/UmainSpatialGestures\n\n|\n\n### Sources/UmainSpatialGestures\n\n| chore: fix swiftlint (#6)| Apr 12, 2024  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| init| Apr 8, 2024  \n  \n### .swiftlint.yml\n\n|\n\n### .swiftlint.yml\n\n| chore: fix swiftlint (#6)| Apr 12, 2024  \n  \n### Package.swift\n\n|\n\n### Package.swift\n\n| chore: fix swiftlint (#6)| Apr 12, 2024  \n  \n### README.md\n\n|\n\n### README.md\n\n| Update README.md| Apr 12, 2024  \n  \n### usg_background.png\n\n|\n\n### usg_background.png\n\n| fix: update image| Apr 11, 2024  \n  \n## Repository files navigation\n\n# Umain Spatial Gestures\n\n# Custom Gestures Library for SwiftUI and RealityKit\n\nThis Swift package introduces a set of custom gesture extensions for SwiftUI\nand RealityKit, making it easier to implement complex gestures such as drag,\nrotate, magnify, or combinations of these within your SwiftUI applications.\n\n## Installation\n\n  * Add this library to your Xcode project by including it in your package dependencies.\n\n## Features\n\n  * Drag Gesture: Allows entities to be dragged across the screen.\n  * Rotate Gesture: Enables rotation of entities, with optional axis constraints.\n  * Magnify Gesture: Facilitates the scaling of entities through pinch gestures.\n  * Combined Gestures:\n\n    * Drag and Rotate: Combines drag and rotate gestures for a seamless interaction.\n    * Drag and Magnify: Allows entities to be dragged and scaled simultaneously.\n    * Full Gesture: A comprehensive gesture combining drag, rotate, and magnify functionalities, with optional rotation axis constraints.\n\n## Usage\n\n### Importing the Library\n\nEnsure you have imported SwiftUI and RealityKit in your Swift file:\n\n    \n    \n    import SwiftUI import RealityKit import UmainSpatialGestures\n\n### Applying Gestures to Views\n\nYou can apply any of the custom gestures to your views using the provided\nextension methods. Here's how you can use each gesture:\n\n    \n    \n    YourView() .useDragGesture()\n    \n    \n    YourView() .useRotateGesture(constrainedToAxis: .someAxis) // Optionally specify an axis\n    \n    \n    YourView() .useMagnifyGesture()\n    \n    \n    YourView() .useDragAndRotateGesture(constrainedToAxis: .someAxis) // Optionally specify an axis\n    \n    \n    YourView() .useDragAndMagnifyGesture()\n    \n    \n    YourView() .useFullGesture(constrainedToAxis: .someAxis) // Optionally specify an axis\n\n### Note:\n\nIf you are using ModelEntity/Entity it has to contain\n\n  * model.components.set(InputTargetComponent())\n  * model.generateCollisionShapes(recursive: false/true)\n\n### Customization\n\n  * The gestures can be constrained to specific axes (for rotate gestures) by passing a RotationAxis3D value (xAxis, yAxis, zAxis, or nil for no constraint) to the constrainedToAxis parameter.\n\n### Requirements\n\n  * iOS 13.0 or later\n  * Swift 5.0 or later\n  * Xcode 11.0 or later\n\n### Contributing\n\nContributions are welcome! Please fork the repository and submit pull requests\nwith your enhancements.\n\n### Contact\n\nRobin Ellingsen\n\nAlfred Skedeb\u00e4ck\n\n### License\n\nThis library is released under the MIT license.\n\n## About\n\nPackage for visionOS creating quick gestures for RealityView ModelEntities.\n\nvision.umain.com\n\n### Resources\n\nReadme\n\nActivity\n\nCustom properties\n\n### Stars\n\n2 stars\n\n### Watchers\n\n1 watching\n\n### Forks\n\n1 fork\n\nReport repository\n\n## Contributors 3\n\n  * ascoolarobban Robin Ellingsen\n  * alfredskeden Alfred Skedeb\u00e4ck\n  * TheRogue76 Parsa Nasirimehr\n\n## Languages\n\n  * Swift 100.0%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
