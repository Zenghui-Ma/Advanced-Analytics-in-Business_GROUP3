{"aid": "40061298", "title": "F/OSS Comics: 8. The Origins of Unix and the C Language", "url": "https://fosscomics.com/8.%20The%20Origins%20of%20Unix%20and%20the%20C%20Language/", "domain": "fosscomics.com", "votes": 3, "user": "cubix4u", "posted_at": "2024-04-17 06:51:13", "comments": 0, "source_title": "8. The Origins of Unix and the C Language", "source_text": "8\\. The Origins of Unix and the C Language\n\nF/OSS Comics\n\n# 8\\. The Origins of Unix and the C Language\n\nPosted on Sep 4, 2023\n\nIn the 1960's, the Incompatible Timesharing System (ITS) was being heavily\ndeveloped at MIT. Meanwhile, at another location on the east coast of the\nUnited States, there was another lab with the same hacker spirit: AT&T Bell\nLaboratories.\n\nThe groundbreaking Unix and C language, which would go on to change the world,\nwere being developed.\n\nMIT vs. Bell Lab.\n\n> \"I feel the force somewhere...\"\n\nCoincidentally, the people who were working on Multics were also working on\nITS and Unix, including Ken Thompson and Dennis Ritchie from Bell Labs.\n\n> \"I think we need to step away from the Multics project now.\" \"Yeah, the\n> development time has become way longer than we expected.\"\n\nThe Multics project began in 1964, but due to the large code size and\ncomplexity, the schedule fell far behind Bell Labs' expectations.\n\n> \"Overdesigned and overbuilt and over everything.\" \"It was close to\n> unusable[1]\"\n\nIn 1969, Bell Lab. pulled out of the development of Multics.\n\n> \u201cWe\u2019re leaving because we can't meet our schedule.\u201d\n\nBased on his experience developing Multics, Ken Thompson creates a new\noperating system by himself at Bell Labs.\n\n> \u201cDennis, I'm building a new operating system, taking some ideas from\n> Multics. I'm making it smaller and simpler.\u201d \u201cThat\u2019s a good idea. Shall I\n> join you?\u201d\n\nKen Thompson reimplemented many of the key features he had developed in\nMultics in Unix.\n\n> \u201cI can't make something out of nothing\u201d\n\nHe adapted the file system he had already implemented in Multics in Unix on\nPDP-7, and Dennis Richie joined him in the development. Once the development\nwas well underway, a team was organized and they began implementing the\noperating system features we use today, such as the filesystem, process model,\ndevice files, and command line interpreter, for the first time on PDP-7.\n\n> \u201cFirst of all, I'm working on a file system. How about we call it Unix?\u201d\n> \u201cHow about mapping devices to files?\u201d\n\nThen, PDP-11 was introduced, which differed in CPU instructions from the\nPDP-7.\n\n> \"Ken, we have a new PDP-11, why don't we port Unix to it?\" \"That's a great\n> idea, but the problem is that the CPU instructions are different, so we'll\n> have to re-write the Unix code with the PDP-11 assembly language.\"\n\n> \u201cWow, I finally finished porting!\" \"But we can't rewrite the Unix code in\n> assembly every time we buy a new computer, right?\n\n> \u201cDennis, shall we rewrite Unix in the B language? Now we are able to build\n> an OS kernel without assembly.\" \\\n\n> \"Maybe we can port Unix to PDP-11 using the B language\"\n\nB language was also developed for use in Multics by Ken Thompson and Dennis\nRitchie in 1969.\n\n> \"First we need to port the B language to the PDP-11, but there's a problem.\"\n\nIn 1971, Dennis Ritchie added a character type to the B language and rewrote\nthe compiler code to generate PDP-11 machine code[3].\n\n> \u201cDennis, how's the B language porting going?\u201d \u201cThere are a lot of issues,\n> first of all, it\u2019s hard to access the character data type on PDP-11.\u201d\n\n> \"Haha, why don't you completely update the B language this time?\u201d \"I might\n> have to rewrite it from scratch.\"\n\nIn 1973, basic functionalities were complete, and it was called C, which was\njust the next version of B.\n\n> \u201cHow about calling it C?\u201d \"Sounds good\"\n\nDennis Richie began rewriting Unix in C that same year.\n\n> \"Hmm, I don't have to code in assembly anymore\"\n\nDennis added the structure type to the C language to define the user's custom\ndata. Now, the C language is powerful enough to write Unix kernels.\n\nAlthough Unix and C were created in a short period of time by Ken Thompson and\nDannis Richie, most computers, including cell phones, still run on OS based on\nUnix today. In addition, operating system kernels are still developed in C\ntoday.\n\n## References\n\n  1. Multics, wikipedia\n  2. Unix, wikipedia\n  3. History of Unix, wikipedia\n  4. The Development of the C Language bell-labs.com\n  5. The Evolution of the Unix Time-sharing System www.read.seas.harvard.edu/~kohler\n\n\u2190 7. ITS and Hacker Culture\n\n\u00a9 2024 Joone Hur | fosscomics v1.1.17 | Published on Apr 17, 2024\n\n", "frontpage": true}
