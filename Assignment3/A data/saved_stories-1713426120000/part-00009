{"aid": "40069409", "title": "Show HN: Open-source Google Docs for audio transcriptions (Whisper)", "url": "https://github.com/gustavhartz/voxtir", "domain": "github.com/gustavhartz", "votes": 3, "user": "GustavSHartz", "posted_at": "2024-04-17 19:57:24", "comments": 0, "source_title": "GitHub - gustavhartz/voxtir: Collaborative transcription service that keeps getting better", "source_text": "GitHub - gustavhartz/voxtir: Collaborative transcription service that keeps\ngetting better\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\ngustavhartz / voxtir Public\n\n  * Notifications\n  * Fork 0\n  * Star 20\n\nCollaborative transcription service that keeps getting better\n\nvoxtir.com\n\n### License\n\nAGPL-3.0 license\n\n20 stars 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# gustavhartz/voxtir\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n10 Branches\n\n1 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\ngustavhartzFeat/presigned client upload (#151)Nov 2, 2023354250d \u00b7 Nov 2,\n2023Nov 2, 2023\n\n## History\n\n279 Commits  \n  \n### .github/workflows\n\n|\n\n### .github/workflows\n\n| feat: push to main should also trigger docker flow| Oct 22, 2023  \n  \n### .husky\n\n|\n\n### .husky\n\n| feat: husky on frontend| Aug 19, 2023  \n  \n### assets\n\n|\n\n### assets\n\n| Chore/cleanup for test (#136)| Sep 30, 2023  \n  \n### frontend\n\n|\n\n### frontend\n\n| Feat/presigned client upload (#151)| Nov 2, 2023  \n  \n### lambda\n\n|\n\n### lambda\n\n| Feature/model optimization (#146)| Oct 22, 2023  \n  \n### server\n\n|\n\n### server\n\n| Feat/presigned client upload (#151)| Nov 2, 2023  \n  \n### whisper-server\n\n|\n\n### whisper-server\n\n| fix: json typings| Oct 22, 2023  \n  \n### .gitignore\n\n|\n\n### .gitignore\n\n| Feat/setup resend email (#98)| Sep 14, 2023  \n  \n### .prettierignore\n\n|\n\n### .prettierignore\n\n| fix: ensure proper regex for config files| Aug 19, 2023  \n  \n### .prettierrc.json\n\n|\n\n### .prettierrc.json\n\n| Repo setup| May 7, 2023  \n  \n### LICENSE\n\n|\n\n### LICENSE\n\n| Create LICENSE (#112)| Sep 19, 2023  \n  \n### Makefile\n\n|\n\n### Makefile\n\n| Feature/initail routing merge (#52)| Aug 23, 2023  \n  \n### README.md\n\n|\n\n### README.md\n\n| Chore/cleanup for test (#136)| Sep 30, 2023  \n  \n### docker-compose.yaml\n\n|\n\n### docker-compose.yaml\n\n| Repo setup| May 7, 2023  \n  \n## Repository files navigation\n\n# Voxtir \ud83c\udfa4\n\nThis project is the source code for the Voxtir app. The voxtir app is a\ntranscription service solution built for AWS that can be self-hosted as a\ncheaper alternative to public solutions for larger scale operations, but\nprimarly to ensure that there is full transparancy in how the data is stored.\n\nThe solution is built upon the OpenAI Whisper model and a Pyannote for Speaker\nDizaritation model.\n\nThe transcripts are HTML documents conforming to quite strict\nTipTap/Prosemirror schemas. This makes backwardscompatible changes a bit\ndifficult, but has the great benefit of allowing quite easy processing of the\ndocuments into a format that can be used to train/fine-tune your own\ntranscription models.\n\nYou can host this solution your self or let us help you by reaching out at gsh\n(AT) voxtir.com.\n\nWIP: A goal of this software is also to improve performance of publicly\navailable models. Thus we will offer free services to any entity willing to\nshare the transcribed data.\n\n## The app\n\nThis is how (at the time of writing \ud83d\ude4f ) the app looks.\n\nDocument\n\nDocument overview panel\n\nThe app allows for sharing between users and collaborative editing of\ndocuments.\n\n## The costs\n\nSelf-hosted The smallest setup in AWS we have created costs around 130$ a\nmonth in fixed costs and around 0.25$ pr. transcribed hour using the medium\nmodel. This should be able to handle up to at least 50 concurrent workers\nwriting the editor. There is no limit on the number of transcriptions that can\nbe run at once. This is determined by AWS Quotas.\n\nVoxtir We currently only offer a free beta version, but plan to charge 0$ pr.\ntranscribed hour where the transcript is corrected and shared with other users\nand 0.5$ pr. transcribed hour if kept private using the large models. We can\nalso host a completely private instance for you incorporating IP-restrictions.\n\n## The infrastructure\n\nThe code consists of four different \"services\". There is:\n\n  * React Typescript Vite frontend\n  * Express Typescript Nodejs backend\n  * whisper-server which is a python app intended to run on AWS Batch Transform as a Flask API.\n  * AWS lambda running ffmpeg\n\nHigh-level diagram\n\nFrontend The frontend is a typescript frontend using React vite as the\nframework. It's pretty basic and primarly consists of the tiptap editor along\nwith some general structure for how to navigate the user projects. There are\ntwo types of connections to the backend. The collabrative editing in the\ntiptap editor requires Websockets, and the api is a Graphql api.\n\nTechnologies\n\n  * Graphql\n  * Tiptap\n  * Typescript\n  * React\n  * Vite\n  * Tailwind\n\nWe built it to be hosted from an S3 bucket. More info in the corresponding\nfolder\n\nBackend The backend is a nodejs server that handles everything and is\nconnected to the database. This backend is hosted in AWS ECS and is intended\nto be able to scale horizontally, with multiple new instances spun up.\n\nTechnologies\n\n  * Websocket\n  * Graphql\n  * Express\n  * Typescript\n  * AWS S3\n  * AWS Sagemaker\n  * AWS Amplify\n  * AWS Fargate (ECS)\n  * Resend\n  * RDS\n  * PostgreSQL\n  * Prisma\n\nDatabase There is a single PostgreSQL database connected to the backend.\nMigrations and patches are handled by prisma in the backend.\n\nDevops code There is a seperate devops repo. It's not shared just due to\nsecurity reasons, but you should be able to infer the production setup from\nthe various visualizations.\n\nAuth Auth is maintained by auth0 as due to the good support, security, and\ndocumentation. The initial approach in this repo is based on the sample below.\nIf you want to understand the logic, please refer to that documentation\n\nVisit the \"React/TypeScript + React Router 6 Code Sample: User Authentication\nFor Basic Apps\" page for instructions on how to configure and run this code\nsample and how to integrate it with an API server of your choice to create a\nfull-stack code sample.\n\n## Development and Contributions\n\nIn the pre-production phase there is no distinction between the development\nand production branch\n\ncommits should be made using. External link is optional\n\n    \n    \n    <branch-type>/<branch-name>_<external-link (JIRA etc.)> # example bug/database-connection-pool_445\n\ntypes include\n\n    \n    \n    wip Works in progress; stuff I know won't be finished soon feat Feature I'm adding or expanding bug Bug fix or experiment junk Throwaway branch created to experiment\n\n### Develop locally\n\nWhisper-server This project can be run on it's own. See it's corresponding\nfolder\n\nFrontend\n\n  1. create an .env file from the example\n\n    1. Get a hold of the auth0 clientid and domain (ask your buddy)\n  2. npm i\n  3. npm run generate\n  4. npm run dev\n\nThe frontend has a lot of functionality that is dependent on the backend. Thus\nyou might need to spin that up first.\n\nServer We follow the standard apollo naming convention found here\n\nRun the commands in the package.json folder\n\n  1. npm i\n  2. npm run generate\n  3. npm run tsc # one terminal\n  4. npm run dev # other terminal\n\nDocker The server runs of a docker container in production. Try it locally\nusing\n\n    \n    \n    # Build docker docker build -t voxtir-backend . # If mac m1 we need to use buildx to set the target architecture docker buildx build --platform linux/amd64 -t voxtir-app-backend . # Run docker docker run -p 3000:3000 -e APP_PORT=3000 voxtir-backend\n\nIf you wan't to access the /graphql endpoint in the browser for the sandbox -\nthen you need to modify your headers to include the auth0 token. It can be\nobtained by modifying the frontend code and logging the token. The could be\nsimpler ways of doing this too.\n\nDatabase\n\n    \n    \n    docker-compose up -d postgres\n\nOnce you change the schema in the schema.prisma, apply the migrations in the\nlocal database using prisma. This is found in the server folder.\n\nIf yo want to see the database you can use npx prisma studio --schema\nsrc/prisma/schema.prisma from the server folder\n\n### IDE\n\nVSCode\n\n## About\n\nCollaborative transcription service that keeps getting better\n\nvoxtir.com\n\n### Topics\n\nai ml transformers saas whisper\n\n### Resources\n\nReadme\n\n### License\n\nAGPL-3.0 license\n\nActivity\n\n### Stars\n\n20 stars\n\n### Watchers\n\n0 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases\n\n1 tags\n\n## Packages 0\n\nNo packages published\n\n## Contributors 2\n\n  * gustavhartz Gustav Hartz\n  * MadsFrost Mads\n\n## Languages\n\n  * TypeScript 88.3%\n  * Python 6.2%\n  * MDX 1.9%\n  * CSS 1.2%\n  * JavaScript 1.0%\n  * Dockerfile 0.6%\n  * Other 0.8%\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
