{"aid": "40145431", "title": "Zenoh: Zero Overhead Network Protocol", "url": "https://zenoh.io/", "domain": "zenoh.io", "votes": 1, "user": "ubj", "posted_at": "2024-04-24 15:20:02", "comments": 0, "source_title": "Zenoh - The Zero Overhead, Pub/Sub, Store, Query, and Compute Protocol.", "source_text": "Zenoh - The Zero Overhead, Pub/Sub, Store, Query, and Compute Protocol.\n\n  * Home\n  * Documentation\n  * Use Cases\n  * Community\n  * Adopters\n  * Media\n  * Blog\n\n# Zenoh\n\nZero Overhead Network Protocol.\n\nZenoh /zeno/ is a pub/sub/query protocol unifying data in motion, data at rest\nand computations. It elegantly blends traditional pub/sub with geo distributed\nstorage, queries and computations, while retaining a level of time and space\nefficiency that is well beyond any of the mainstream stacks.\n\nLearn more\n\n### Eloquent\n\nFirst class abstractions for pub/sub, geo-distributed storages, query, and\nqueryables simplify the development of distributed applications, at any scale.\n\nPub/Sub Zenoh provides efficient publish/subscribe primitives, supporting\nmultiple levels of reliability, dynamic discovery, fragmentation, and wire-\nlevel batching.\n\nStorages Zenoh provides primitives for defining geo-distributed storages with\nsharding and replication.\n\nQueries and Queryables Zenoh provides well-defined semantics for querying and\naggregating. It also allows applications to register computations that will be\ntriggered by queries; a simple mechanism that allows many patterns to be\nimplemented, such as RPC and map-reduce.\n\n### Scalable\n\nZenoh protocol and its implementations are decentralized and can scale-out as\nwell as scale-down.\n\nScalable Routing Zenoh provides scale-out through a scalable routing\ninfrastructure that allows your applications to be deployed at Internet scale.\n\nLow Power Networks Zenoh has been designed to run across extremely constrained\ntransports such as LPWAN and LowPAN. To maximise the usable bandwidth, Zenoh\ncan run on OSI Layer 2 and has a minimal wire overhead of 4 bytes.\n\nConstrained Devices Zenoh implementations can be extremely resource\nconstrained. Our smallest implementation takes as little as 300 bytes\nfootprint on an Atmel 8-bit microcontroller.\n\n### Fast\n\nZenoh is fast to learn and extremely performant.\n\nFast Adoption Zenoh has a very simple API that makes it extremely fast to get\nstarted and productive. APIs are available for the most popular programming\nlanguages and more are added regularly.\n\nLow Latency Zenoh has an extremely low latency, thus it is appropriate for\napplications that require extremely low overhead and reaction times.\n\nHigh Throughput Zenoh delivers extremely high throughput and allows you to\nfurther its off-the-shelf performance through the batching API.\n\n##### Eclipse Incubation\n\nEclipse zenoh TM is an incubating project under the Eclipse Foundation.\n\n##### More Information\n\nLegal\n\nPrivacy policy\n\nTerms of use\n\nCopyright\n\nReport a security issue\n\nEclipse Public License 2.0\n\nApache License 2.0\n\nEclipse Foundation\n\n##### Sponsored by:\n\n##### Follow us\n\nGitHub\n\nDiscord\n\nYoutube\n\nAbout\n\nEclipse zenoh TM is free, open source and always will be.\n\nCopyright \u00a9 2022 Eclipse Foundation\n\nBuilt with HUGO\n\n", "frontpage": false}
