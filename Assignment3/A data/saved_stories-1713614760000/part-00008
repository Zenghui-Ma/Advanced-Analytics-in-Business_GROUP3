{"aid": "40095142", "title": "Run 8 (different) Unreal Games on a single GPU on AWS", "url": "https://github.com/OorbitCo/XBeam", "domain": "github.com/oorbitco", "votes": 1, "user": "88bodyproblem", "posted_at": "2024-04-20 05:50:53", "comments": 0, "source_title": "GitHub - OorbitCo/XBeam: XBeam\u2122 Cloud Streaming Solution", "source_text": "GitHub - OorbitCo/XBeam: XBeamTM Cloud Streaming Solution\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nOorbitCo / XBeam Public\n\n  * Notifications\n  * Fork 0\n  * Star 3\n\nXBeamTM Cloud Streaming Solution\n\n### License\n\nView license\n\n3 stars 0 forks Branches Tags Activity\n\nStar\n\nNotifications\n\n# OorbitCo/XBeam\n\nThis commit does not belong to any branch on this repository, and may belong\nto a fork outside of the repository.\n\n1 Branch\n\n0 Tags\n\n## Folders and files\n\nName| Name| Last commit message| Last commit date  \n---|---|---|---  \n  \n## Latest commit\n\nOorbitDevUpdate README.mdApr 19, 202416182ff \u00b7 Apr 19, 2024Apr 19, 2024\n\n## History\n\n8 Commits  \n  \n### InfraHelper @ 05fb4fb\n\n|\n\n### InfraHelper @ 05fb4fb\n\n| add Infra Helper Module| Apr 19, 2024  \n  \n### WorkloadIaaC @ 71b3cec\n\n|\n\n### WorkloadIaaC @ 71b3cec\n\n| Update XBeam Deps to latest version| Apr 19, 2024  \n  \n### WorkloadInstaller @ 1db313a\n\n|\n\n### WorkloadInstaller @ 1db313a\n\n| Update XBeam Deps to latest version| Apr 19, 2024  \n  \n### .gitmodules\n\n|\n\n### .gitmodules\n\n| add Infra Helper Module| Apr 19, 2024  \n  \n### README.md\n\n|\n\n### README.md\n\n| Update README.md| Apr 19, 2024  \n  \n### license.txt\n\n|\n\n### license.txt\n\n| Create license.txt| Apr 18, 2024  \n  \n## Repository files navigation\n\n##### Oorbit Inc. \u00a92024\n\n# XBeamTM\n\n### Quick Setup Guide (v4.24.0.1)\n\n##### Welcome to the XBeamTM access source code and infra Auto-Installer.\n\nWith the code in this project, you can build the FrontEnd requirements of\nXBeamTM, for a variety of targeted platforms, including desktop, mobile,\nembedded links (social media apps) and LG TV platform (TBA). Automatically\ninstall and deploy all infrastructure requirements on your AWS clusters\nwithout the need to code or DevOps.\n\nPrerequisite:\n\n  * AWS account and AWS CLI for windows.\n  * Latest Go Lang installation.\n  * Latest Pulumi for windows.\n  * Git for windows\n  * RabbitMQ Installation\n  * SMB enabled network drive\n  * Requires a domain with Wildcard SSL certificate\n  * UE5 Windows or Linux games with \u2018PixelStreamingPlugin\u2019 enabled\n  * Windows PC to run the installation code\n\n##### Follow these steps to setup your own Cloud Streaming service:\n\n  1. Create an AWS account (if you don't have one yet)\n\n  2. Download and install AWS CLI for windows, follow this link: Getting Started Install\n\n  3. Install GO Lang: Go Installer\n\n  4. Install Pulumi: Pulumi Installer\n\n  * Note: How to setup AWS credentials to use with Pulumi: Installation Configuration\n\n  5. Make sure you have installed git for windows: Github Desktop Installer\n\n  6. Clone Oorbit XBeam repository: Run these commands in Windows terminal:\n\n    \n    \n    git clone https://github.com/OorbitCo/XBeam git submodule update --init cd WorkloadIaaC\n\n  7. Edit Pulumi.dev.yaml based on your needs. (e.g eks:adminUsername , eks:accountId , worker:windowsPassword, etc...)\n\n  8. run this command in windows terminal:\n\n    \n    \n    pulumi up --config-file .\\Pulumi.dev.yaml\n\n  * Note: this process may take up to 60 minutes. (Wait until finished before moving to next step)\n\n  9. Setup and deploy SMB enabled network drive: The network drive must be set up and present within the same region as this cluster, otherwise will result in severe throughput issues and long spin up times for the games. Minimum required IOPS: 64000 Minimum required bandwidth: 5 Gbits (depending on required concurrency) Make sure port 445 is open. (OS firewall and AWS cluster security group)\n\n  10. Install and deploy RabbitMQ on AWS (DO NOT use active MQ) (Refer to AWS documentation)\n\n  11. Once you have installed step 9 and 10 continue to windows terminal, change directory to WorkloadInstaller folder and run the following commands:\n\n    \n    \n    go build -o installer.exe . Installer.exe -k ..\\WorkloadIaaC\\kubeconfig -s smb://username:password@ip/sharename -c domain-pub.cert -p domain-priv.key -r amqps://username:password@hostname -g region\n\nUsage Notes\n\n    \n    \n    -s smb://username:password #Username and password to access network drive @ip/sharename #Ip address for the network drive / shared folder name: e.g mygames (shared folder name should not contain SPACE,symbols, or unicode characters) -c domain-pub.cert #SSL Public cert file local path for your domain -p domain-priv.key #SSL Private cert file local path for your domain -r amqps://username:password@hostname #RabbitMQ User/Pass and Hostname -g region #Desired AWS region to setup the Kubernetes cluster.\n\nFull command example:\n\n    \n    \n    Installer.exe -k c:\\users\\oorbit\\desktop\\XBeam\\WorkloadIaaC\\kubeconfig -s smb://shareduser:oorbitpassword@217.219.65.84/mygames -c oorbit-pub.cert -p oorbit-priv.key -r amqps://oorbitbroker:oorbitpasword@b-94d8e31a-243c-4c29-a87a-6bb8b7822f3e.mq.us-west-2.amazonaws.com -g us-east-1\n\n  12. Upload UE5 pixel streaming enabled games to your SMB enabled network drive.\n\n  13. To start a game, publish the Json below on create.pod exchange in your RabbitMQ. Set your desired AWS region as the routing-key. Use the following example path Games/Linux/Spaceship/SpaceshipCruiser.sh that is relative to the shared directory, e.g mygames.\n\n    \n    \n    { \"os\": \"linux\", \"type\": \"shared\", \"request\": { \"args\": \"-ForceRes -ResX=1920 -ResY=1080 -RenderOffscreen -Unattended -AudioMixer -PixelStreamingURL=ws://127.0.0.1:8888 -AllowPixelStreamingCommands=false -PixelStreamingH264Profile=BASELINE -PixelStreamingWebRTCMaxBitrate=30000000 -PixelStreamingEncoderMultipass=DISABLED -dx11\", \"path\": \"/smb/Games/theone/Linux/sd2/SpaceshipCruiser.sh\", \"custom_args\": \"-x -y\", \"env\": [ { \"key\": \"X\", \"value\": \"Y\" } ] }, \"username\": \"theone\", \"source\": \"browser\", \"duration\": 60, \"pass_id\": \"243283fa71ec4c858244b834e9deae4c\", \"app\": \"Fruit_Zombies\", \"preview\": false, \"streamer\": \"pre5\", \"resource\": { \"type\": \"dynamic\", \"cpu_min\": 1000, \"cpu_max\": 1600, \"memory_min\": 1000, \"memory_max\": 1000 } }\n\nUsage Notes Parameter Details: os : game-compatible operating system. Valid\nvalues are windows,linux type: type of the application, Valid value shared\nrequest: an object that refers to game details such as launch arguments , game\npath, custom arguments, custom environment variables username: username\nsource: tracking accessed platforms, for example, such as Web,Mobile,Ads, etc\n... duration : maximum duration of the game , (will be used in future\nversions) pass_id : unique id of the session (should only contain a-zA-Z) app\n: name of the game preview : reserved for future version streamer: Unreal\ncompatible streamer, available values are : (post5,pre5) resource: resource\nlimits for the game resource.type : sets compute availability limits ,\navailable values are : static,dynamic static: will use values set in cpu_min /\ncpu_max and memory_min / memory_max dynamic: uses predefined values set by\nOorbit infra. GPU resources are managed by Oorbit infra.\n\n  14. Establish connection to a running game: Listen to on.pod.created Queue in RabbitMQ, this will provide the IP and port of the running game. For a successful stream, the IP and port must be converted to a URL via the domain provided in step 11. (you can use any conversion service such as sslip.io for easy, on the fly conversion)\n\n  15. The game will auto stop on two conditions: 60s timer if no connection is detected. 60s after the stream has been disconnected.\n\nThis Quick Guide is updated frequently, please check time to time for new\nfeatures and changes.\n\nAny questions or further assistance please contact us: support@oorbit.com\n\n## About\n\nXBeamTM Cloud Streaming Solution\n\n### Resources\n\nReadme\n\n### License\n\nView license\n\nActivity\n\nCustom properties\n\n### Stars\n\n3 stars\n\n### Watchers\n\n0 watching\n\n### Forks\n\n0 forks\n\nReport repository\n\n## Releases\n\nNo releases published\n\n## Packages 0\n\nNo packages published\n\n## Contributors 2\n\n  * MrOplus DivByZero\n  * OorbitDev Oorbit\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": false}
