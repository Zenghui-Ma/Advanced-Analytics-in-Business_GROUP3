{"aid": "40094955", "title": "Overcoming GitHub's 100MB Video Limit: Introducing GithubVideoCompressor", "url": "https://github.com/lance13c/github-video-compressor/releases/tag/0.0.5", "domain": "github.com/lance13c", "votes": 3, "user": "Lance13c", "posted_at": "2024-04-20 05:03:44", "comments": 0, "source_title": "Release 0.0.5 \u00b7 lance13c/github-video-compressor", "source_text": "Release 0.0.5 \u00b7 lance13c/github-video-compressor \u00b7 GitHub\n\nSkip to content\n\nSign in\n\n# Search code, repositories, users, issues, pull requests...\n\nSearch syntax tips\n\nSign in\n\nSign up\n\nYou signed in with another tab or window. Reload to refresh your session. You\nsigned out in another tab or window. Reload to refresh your session. You\nswitched accounts on another tab or window. Reload to refresh your session.\nDismiss alert\n\nlance13c / github-video-compressor Public\n\ngenerated from Jonghakseo/chrome-extension-boilerplate-react-vite\n\n  * Notifications\n  * Fork 0\n  * Star 2\n\n# 0.0.5\n\nLatest\n\nLatest\n\nlance13c released this 15 Apr 12:18\n\n\u00b7 5 commits to main since this release\n\n0.0.5\n\n02d9ce3\n\n## Background\n\nThis app compresses video files over 50MB in the Github pull requests. Taking\n350MB videos down to less than 100MB. It is helpful if you accidentally record\nmore than 100MB (the github limit) for a demo video you wish to put in a\nGithub PR.\n\nEnjoy larger video uploads, while keeping your proprietary company data from\nleaving your machine.\n\n## Limitations / Requirements\n\n  * The application currently only works on MacOS with M-series chips.\n  * The Chrome Browser (other chromium based browsers are unsupported right now, but can work with manually manifest file changes)\n\n## How to Install\n\nIf something doesn't work, please post about your problem in a reply. Thank\nyou.\n\nThis installation video file went from 231.7MB to 20.82MB\n\n  1. Unzip the folder you downloaded.\n  2. Transfer \"GithubVideoCompressor.app\" into your Applications folder. Right-click \"GithubVideoCompressor.app\" and press \"Open.\" A warning message will pop up, click \"Open\". It may take a few attempts to open it. Just keep trying. It should eventually work. The app does take 3 seconds to boot the UI.\n  3. When the app opens, follow the three installation steps in the app.\n  4. Once installed, completely close the application. The compression cannot work if the app is running in the background.\n\n## Benefits\n\n  * Security - All compressing happens local on your machine. Avoid accidentally uploading proprietary company data to potentially malicious \"free\" video compression servers.\n  * Usability - It just works. It handles the whole compression pipeline out of the box. Attach or drop a video file in the Github pull request comment or description box, and it will compress and upload the video the same way Github does. (Only compresses videos above 50MB)\n  * No Background App - The desktop app only boots and runs when it is in use. It is never takes up machine resources unnecessarily.\n  * Speed - Compression combined with the upload time should be nearly equivalent or faster than directly uploading 50MB videos to Github (depends on internet speed and computer resources).\n\n## Troubleshooting\n\n  * The log file can be found here on Mac: ~/Library/Application Support/github_video_compressor_app/logs.\n  * If the manifest file is edited or updated after installing the chrome extension. The chrome extension might need to be toggled on and off.\n  * You can also check chrome extension errors in the service worker chrome://extensions/, and click the link Inspect views service worker link. You may need to enable \"Developer mode\" in the top right corner of the Chrome Extensions manager.\n\n## How it works\n\nThis combines a Chrome extension with a desktop application to provide the\nfastest native video compression available.\n\nWhen you drop a video into a Github PR, the chrome extension detects that\nvideo and captures it. The chrome extension then sends a Native Messaging\nrequest to the desktop app to boot. The desktop app sends back a token used\nfor authentication and starts a local HTTP server on port 7777. The chrome\nextension then sends the video to the HTTP server authenticating the\nconnection with the token. The desktop application compresses the video with\nyour machine's native ffmpeg and returns the compressed video to the chrome\nextension via an HTTP response. Then it will attempt to upload the video to\nGithub, and then insert the correct link to that video back in the\ncomment/description textarea.\n\nOther considerations. Why not use ffmpeg-wasm? What is the purpose of using\nthe Native Message API.\n\nThese were all deliberate choices that will be discussed in an upcoming blog\npost.\n\n## Possible Future Improvements\n\n  * Better chrome extension error notifications.\n  * Knowing if the chrome extension is working or not (it is currently not clear if it is running).\n\n## Footer\n\n\u00a9 2024 GitHub, Inc.\n\nYou can\u2019t perform that action at this time.\n\n", "frontpage": true}
