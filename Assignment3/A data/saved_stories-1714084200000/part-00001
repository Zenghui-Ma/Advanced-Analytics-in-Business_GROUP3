{"aid": "40159563", "title": "Is There Any Hope for Asynchronous Design?", "url": "https://semiengineering.com/is-there-any-hope-for-asynchronous-design/", "domain": "semiengineering.com", "votes": 1, "user": "orbital-decay", "posted_at": "2024-04-25 16:27:59", "comments": 0, "source_title": "Is There Any Hope For Asynchronous Design?", "source_text": "Is There Any Hope For Asynchronous Design?\n\nSubscribe\n\nChinese (Simplified) English\n\n  * Home\n  * Systems & Design\n  * Low Power - High Performance\n  * Manufacturing, Packaging & Materials\n  * Test, Measurement & Analytics\n  * Auto, Security & Pervasive Computing\n\n  * Special Reports\n  * Business & Startups\n  * Jobs\n  * Knowledge Center\n  * Technical Papers\n\n    * Home\n\n';\n\n    * AI/ML/DL\n    * Architectures\n    * Automotive/ Aerospace\n    * Communication/Data Movement\n    * Design & Verification\n    * Lithography\n    * Manufacturing\n    * Materials\n    * Memory\n    * Optoelectronics / Photonics\n    * Packaging\n    * Power & Performance\n    * Quantum\n    * Security\n    * Test, Measurement & Analytics\n    * Transistors\n    * Z-End Applications\n  * Events & Webinars\n\n    * Events\n    * Webinars\n  * Videos & Research\n\n    * Videos\n    * Industry Research\n  * Newsletters & Store\n\n    * Newsletters\n    * Store\n\n  * MENU\n\n    * Home\n    * Special Reports\n    * Systems & Design\n    * Low Power-High Performance\n    * Manufacturing, Packaging & Materials\n    * Test, Measurement & Analytics\n    * Auto, Security & Pervasive Computing\n    * Knowledge Center\n    * Videos\n    * Startup Corner\n    * Business & Startups\n    * Jobs\n    * Technical Papers\n    * Events\n    * Webinars\n    * Industry Research\n    * Newsletters\n    * Store\n    * Special Reports\n\nHome > Systems & Design > Is There Any Hope For Asynchronous Design?\n\n6 Shares\n\n4\n\nSystems & Design\n\n# Is There Any Hope For Asynchronous Design?\n\n6 Shares\n\n4\n\nThis approach has long held promise, but never managed to deliver. Is there a\nfundamental problem, or is it just bad luck?\n\nApril 25th, 2024 - By: Brian Bailey\n\nIn an era when power has become a fundamental design constraint, questions\npersist about whether asynchronous logic has a role to play. It is a design\nstyle said to have significant benefits and yet has never resulted in more\nthan a few experiments.\n\nSynchronous design utilizes a clock, where the clock frequency is set by the\nlongest and slowest path in the design. That includes potential variation that\ncan happen in the manufacturing process. A common practice during test is to\nseparate out chips based on performance into different bins. Otherwise, all\nchips that do not operate above a defined frequency would be considered\ndefective.\n\nThis is all made more complex because of clock skew. Even though a clock\nsignal may be generated from a single point, it will encounter delays as it\npasses across a chip. Clock skew is the difference in arrival times of the\nclocks relative to the signals it is intended to clock. This, too, is subject\nto fabrication variation.\n\nTo help mitigate these problems, multiple clocks are often used, or other\ncomplex design methodologies deployed. While this creates asynchronously\ncoupled domains, it creates a new class of problems, namely clock domain\ncrossing.\n\nIn addition, clocks consume a lot of power. Because a clock propagates to so\nmany places on a chip, the clock line has a large amount of capacitance\nassociated with it. Every clock edge means that the capacitance has to be\ncharged or discharged, which slows it down and consumes a lot of power.\nAlternatively, buffers are added to reduce the capacitive load on each\nindividual buffer, but that means there are now multiple buffers, which in\nturn consume more power.\n\nWith an increasing number of chips approaching the reticle limit, it becomes\nimpossible to operate a chip from a single synchronous clock. \u201cIf you can\u2019t\nget across the chip in one clock cycle, you have to look at things as being\nlocally synchronous, but have longer distance runs that are either\nasynchronous clocked, where you go through synchronizers, or you use\nmethodologies from the good old CPU times \u2014 you build a low-skew clock grid,\u201d\nsaid Michael Frank, retired fellow from Arteris. \u201cThe problem is that clocks\ntake power, and you have big rebuffered trees that feed a large number of\nflops.\u201d\n\nWhat makes synchronous design so attractive is that once the longest path has\nbeen found, timing essentially can be ignored, as all operations are divided\ninto discrete steps. This is an important factor in tools, such as synthesis.\n\n\u201cAsynchronous design is one of these technologies that has endlessly promised,\nbut it\u2019s really hard to build, other than in fairly limited cases,\u201d says Rob\nAitken, fellow at Synopsys. \u201cThis is over-generalizing, but if you take a\ngiven piece of RTL, and assume that RTL has been optimized for synchronous\ndesign, and you try to implement the same thing using asynchronous design, the\nfirst thing you wind up doing is de-tuning the RTL slightly to make it more\namenable to asynchronous design. Then you implement it asynchronously, and you\nsee if the benefit is better than the amount of de-tuning you had to do to get\nit asynchronous in the first place. The world will eventually find a way to\nbenefit from it, but for now, it\u2019s hard to beat fully synchronous design, just\nbecause that\u2019s what everything is optimized for.\u201d\n\nTools must exist before there can be any fundamental change. \u201cThe problem with\nasynchronous design is the typical chicken and egg problem \u2014 no tools, no\nusers; no users, no tools,\u201d says Marly Roncken, director of the Asynchronous\nResearch Center at Portland State University. \u201cThis holds big companies back\nand makes asynchronous the domain of startups and research centers. There are\npieces of asynchronous logic in synchronous design, though synchronous\ndesigners will probably not call that out as much. I would love to see a\nseamless integration in the tools domain, so we can use synchronous and\nasynchronous as complementary parts, each working where its strengths are.\u201d\n\nSo will there ever be a compelling event to make asynchronous design become\nessential? \u201cIf you give me a set of design goals that include power and\nenergy, you can hit those a lot faster with an asynchronous approach than if\nyou have to do the same thing synchronously,\u201d says Rajit Manohar, professor of\nelectrical engineering and computer science at Yale University. \u201cThis is\nespecially true if the target is aggressive. With enough time and effort,\nengineers can optimize anything, and there are a lot of very good engineers\nout there. I don\u2019t want to say it may never be possible for you to hit this\nparticular performance point. Engineers can do a lot to optimize their design\nwhen they have the right tooling and the right support and competence.\u201d\n\nHistorical attempts Back in the 1980s and 1990s, many of the top system houses\nof the day explored the opportunities of asynchronous design. This was using\nthe tools of the day, all of which were designed for synchronous logic.\nSeveral techniques were tried, but ultimately none of those companies went on\nto adopt asynchronous design practices.\n\nIn the 1980s, most designs were done by hand. \u201cBetter tools allowed you to do\nfancier chips, and then you could use the faster processors to run more\nsophisticated tools,\u201d says Yale\u2019s Manohar. \u201cThere was a virtuous cycle of\nevolution. Today, we have sophisticated EDA tools to design very complex\nsynchronous chips. What happened is that the asynchronous design methodology\nwasn\u2019t mature enough to catch that cycle. The first synchronous processor was\ndesigned in the 1970s. The first asynchronous processor wasn\u2019t designed until\n1989. That\u2019s a pretty large number of years between those two.\u201d\n\nIn one research paper^1, the author identified 10 different ways to describe\nasynchronous systems and the synthesis approaches associated with those.\n\u201cMaking a strong comparison between each, especially in the critical issues of\nperformance, area, and power usage, is difficult, and unfortunately there\nhaven\u2019t been many actual comparisons made,\u201d wrote Scott Hauck. \u201cEven worse,\nthere hasn\u2019t been any truly compelling evidence of real benefits of\nasynchronous circuits over synchronous approaches, though several impressive\nexamples have been built. The fundamental issue of which approach is best in\nperformance or area or power among the asynchronous styles, as well as if any\nasynchronous approach is worth the extra effort of abandoning the prevalent\nsynchronous model, is still open.\u201d\n\nThose asynchronous techniques do not include the one that is most prevalent in\nthose early experiments. \u201cThe current asynchronous approach is basically\ntaking a Turing machine, which is synchronous, and trying to make an\nasynchronous system out of it,\u201d says Ron Lavallee, president of You Know\nSolutions. \u201cYou have to start with something that is stateless and\nasynchronous, and simply build circuits that match that. Developing\nasynchronous systems was just too hard when compared to a traditional\nsynchronous design approach. Also, it is difficult to make a synchronous-\nsystem Turing machine into an asynchronous system.\u201d\n\nThe lack of a defined design philosophy has continued to plague asynchronous\ndesign. \u201cIt\u2019s easy to get burned with asynchronous design,\u201d says Manohar. \u201cIf\nI look at synchronous design, you pick up a VLSI book, they show you 50\ndifferent latches. They show you all possible circuit styles, even though\ncommercial tools don\u2019t support many of them. They have decided that there\u2019s a\nparticular style of synchronous logic that works well. They know how to make\nit work. They can get good results, and that\u2019s what they support. That is what\neverybody is using. The same thing is true in asynchronous logic. There are a\nlot of different approaches, and some of them work well and some of them don\u2019t\nwork so well. It\u2019s difficult for somebody from the outside to know which one\nto use. If you pick the wrong one, you\u2019re going to get into trouble. That is\npart of the problem. There aren\u2019t that many people producing asynchronous\nchips on a regular basis who have built this expertise. A lot of it is\neducation and having tools and automation to support methodologies you can\ncount on when you\u2019re designing your chip.\u201d\n\nWhen looking for a good candidate to do an asynchronous design, start with\ncircuits where the time taken to perform operations is data-dependent, meaning\nthat some results can be computed quickly, while others take longer. If there\nis a desire to do the computation in a fixed time period, it has to be\nadjusted for the longest possible computation time.\n\n\u201cMultiplication is a simple example,\u201d says Manohar. \u201cSupposing I was writing a\npiece of software and need to multiply two numbers. I might profile my code\nand I find the multiplier is the slow part. Then I realize that most of the\ntime, X is zero. If I\u2019m a software developer, I would add a conditional that\nif X = 0, return 0. Otherwise, do the operation. That is not a great idea for\nany clocked implementation. In the worst case, I added a test to see if X is\nzero. It fails, and then I have to do the multiplication, and I make the\nfrequency lower. In an asynchronous case, that\u2019s an improvement because on\naverage, I\u2019m doing better. This is something you have to look at from an\nalgorithmic perspective.\u201d\n\nLanguages and tools And that is where the big stumbling block comes in,\nbecause every EDA language in use today is optimized for synchronous entry\nmethodologies.\n\n\u201cWe started with decision flow charts,\u201d says You Know Solutions\u2019 Lavallee.\n\u201cThese got deployed across thousands of systems at General Motors\u2019 power\ntrain, a manufacturing system. One of the issues we had was getting people to\nthink of flow charts in a parallel fashion. They work by propagating multiple-\ndecision flow charts simultaneously, and initiating event functions as the\npropagation proceeds. This propagation can be in a physical, biological, or\nchemical substrate. A flow chart (see figure 1) is a set of events, actions\nand tests. One complaint about flow charts is they can resemble spaghetti\ncode. We solved that years ago by making them a true parallel programming\nlanguage. You draw a separate flow chart for each task or function. That helps\nwith the complexity by breaking one big flow chart down into multiple small\nones. On top of that, we add objects. Objects allow you to encapsulate action\nand test structures into a higher-level action and test. And you can keep\ndoing this through as many levels as you want.\u201d\n\nFig 1: Flowchart for an asynchronous full adder. Source: You Know Solutions\n\nYale has a hardware description language. \u201cIt\u2019s a message-passing programming\nlanguage, where the messages are communication between components,\u201d says\nManohar. \u201cYou can use the syntax to describe a data flow design. You can use\nthe syntax to have loops and communication. It\u2019s based on CSP, which was Tony\nHoare\u2019s language developed in 1979, but with some semantic changes.\u201d\n\nBut it is a lot more difficult to start with a language such as Verilog. \u201cMany\nsynchronous tools lack asynchronous capabilities at the basic core part of\ntheir software,\u201d says Portland State\u2019s Roncken. \u201cThis is very apparent in\ntiming analysis and test tools, tools that everyone needs. We are tying our\nresearch to the asynchronous tools being constructed at Yale, which in turn\nbuilds on in-depth knowledge and past experience from Caltech, Philips\nElectronics, Manchester University, Intel, and other big players in the\nasynchronous domain from past and present.\u201d\n\nThe research at Yale is supported by DARPA\u2019s Electronics Resurgence Initiative\n(ERI). \u201cWe have put together an ASIC flow for asynchronous circuits,\u201d says\nManohar. \u201cWe have developed a number of things that allow us to design\nasynchronous circuits with the same efficiency, using much less effort that it\ntakes you to design a complex synchronous chip. But what we\u2019re trying to do is\nto show that we can design high-quality chips automatically, or with much\nlower effort than it would take to do a clocked design.\u201d\n\nVerification can present some very different challenges. One of them is\nrepeatability. While a simulation is deterministic \u2014 events will always happen\nin the same order each time you perform a simulation \u2014 it can be difficult to\norchestrate things that involve multiple asynchronous activities. This tends\nto be a huge problem in live systems. But even within a simulation, it can\nmake understanding system state difficult to capture and comprehend. Very\nminor changes can cause much larger changes in outcomes than with synchronous\ndesign, which filters many of those problems out.\n\nThis also causes significant problems when a reference model is being used for\nverification. While both models may be correct, they can exhibit different\nbehavior, especially in the presence of asynchronous activity. Special care\nmust be taken to ensure the reference model can synchronize with the design\nmodel.\n\n\u201cThere are certain things that are similar, and certain things that are quite\ndifferent,\u201d says Manohar. \u201cWe are doing some work in the space using formal\nmethods and theorem provers to be able to verify properties on asynchronous\ndesigns. At a higher level of abstraction, we need other types of verification\nbecause we have to check that asynchronous computation is correctly\nimplemented by gates. We have developed certain verification strategies, and\nthey look much more like the strategies used for software verification.\u201d\n\nSome aspects may be simpler. \u201cVerification of a clockless flow chart system is\neasier because every signal path does not need to be verified,\u201d says Lavallee.\n\u201cOnce the atomic structure of an action or test block has been thoroughly\nverified for the substrate used, then there is no need to verify them again.\nVerification is then only the flow line signal paths and the overall behavior\nof the system.\u201d\n\nFew designs are likely to be fully asynchronous, meaning that both styles have\nto meld together. \u201cAdaptive systems could potentially solve the problem of\nvariability,\u201d says Synopsys\u2019 Aitken. \u201cYou will end up in those situations\nbeing bitten by some more mundane concerns. I designed my thing and made it\nasynchronous, and now it\u2019s better, but there are really two pieces that are\nthe classic failure points for asynchronous. One is test. Recently this has\nchanged, but historically the answer to testing an asynchronous circuit was to\nsynchronize it and then run scan. The other one is really just the number of\ntricks that get played in synchronous design in order to borrow from clock\ncycles, in order to make sure that the signal integrity on the clock waveforms\nis not absolutely miserable. There are a number of not really asynchronous,\nbut not fully synchronous things that happen. Those capabilities enable\nsynchronous designs to get some really serious performance and power gains. It\nmeans the benefit of a fully asynchronous system isn\u2019t really as much as it\nmight be in theory.\n\nThe connection point between the two worlds is already well known because of\nthe clock domain crossing (CDC) problem. \u201cMetastability issues happen when you\nhave two asynchronous clocks, and their edges \u2014 the relative gap between the\nactive edges \u2014 varies dynamically,\u201d says Prakash Narain, president and CEO of\nReal Intent. \u201cAt some point it will become small enough that the flop-to-flop\npath will not meet timing. You have to compensate for that by ensuring the CDC\ncrossings follow a specific set of logic design principles. For die-to-die\ninterconnect, which is relatively slower, we do have the globally\nasynchronous, locally synchronous (GALS) methodology. You have one clock\ndomain, but within that clock domain you create islands of totally synchronous\nlogic where the timing is met. Between those islands, you say that the clock\ntree is not balanced, so I\u2019m going to treat them as if it is an asynchronous\ncrossing. It is the same source clock, with the same frequency, but there will\nbe a phase difference. That may allow you some simplification, but typically\nit doesn\u2019t.\u201d\n\nCarving out a small piece of a synchronous design is not the way to go. \u201cIn my\nexperience, the biggest advantages we get using asynchronous design is because\nwe think about the entire problem differently,\u201d says Manohar. \u201cWe often come\nup with a solution that would not work well in the clocked approach, but which\ngives good results because we\u2019re using asynchronous logic.\u201d\n\nConclusion So is there an opportunity for asynchronous design? \u201cIf what we\nknow today about asynchronous design and how to automate various steps was\nknown in 1988, the story might be different,\u201d Manohar says. \u201cWe are at an\ninteresting point where companies that traditionally were viewed as software\ncompanies are now spinning silicon. And that\u2019s an interesting opportunity\nbecause there may be a group of people looking at the problem of chip design\nwith fresh eyes. That\u2019s an opportunity for asynchronous design.\u201d\n\nReference\n\n  1. Asynchronous Design Methodologies: An Overview. Scott Hauck. Proceedings of the IEEE Vol 83 No. 1. January 1995\n\nRelated Reading Accellera Preps New Standard For Clock-Domain Crossing Goal is\nto streamline the clock-domain crossing (CDC) flow between IP vendors,\nintegrators, and tool vendors.\n\n6 Shares\n\n4\n\nTags: Arteris asynchronous design CDC clock skew EDA GALS Portland State\nUniversity Real Intent semiconductor clocks Synopsys Yale University You Know\nSolutions YouKnowSolutions\n\n### Brian Bailey\n\n(all posts) Brian Bailey is Technology Editor/EDA for Semiconductor\nEngineering.\n\n### Leave a Reply Cancel reply\n\n### Technical Papers\n\n  * Merging Power and Arithmetic Optimization Via Datapath Rewriting (Intel, Imperial College London) April 19, 2024 by Technical Paper Link\n  * RF General-Purpose Photonic Processor April 17, 2024 by Technical Paper Link\n  * Memristor Crossbar Architecture for Encryption, Decryption and More April 16, 2024 by Technical Paper Link\n  * Single-Molecule Transistor Using Quantum Interference April 16, 2024 by Technical Paper Link\n  * Feasibility and Potential of Quantum Computing For a Typical EDA Optimization Problem April 16, 2024 by Technical Paper Link\n\n## Knowledge Centers Entities, people and technologies explored\n\n## Related Articles\n\n### Money Pours Into New Fabs And Facilities\n\nInvestments boom as countries and companies vie for supply chain security and\ntechnology leadership.\n\nby Liz Allan\n\n### The Rising Price Of Power In Chips\n\nMore data requires faster processing, which leads to a whole bunch of problems\n\u2014 not all of which are obvious or even solvable.\n\nby Ed Sperling\n\n### Chiplet IP Standards Are Just The Beginning\n\nData and protocol interoperability standards are needed for EDA tools, and\nthere are more hurdles ahead. Customized chiplets will be required for AI\napplications.\n\nby Ann Mutschler\n\n### The Future Of Memory\n\nFrom attempts to resolve thermal and power issues to the roles of CXL and\nUCIe, the future holds a number of opportunities for memory.\n\nby Karen Heyman\n\n### Backside Power Delivery Gears Up For 2nm Devices\n\nBut this novel approach to optimizing logic performance depends on advancing\nlithography, etching, polishing, and bonding processes.\n\nby Laura Peters\n\n### Silicon Photonics Manufacturing Ramps Up\n\nThe promise of photonics ICs is spurring innovation, but complex processes and\na lack of open foundries are keeping it from reaching its full potential.\n\nby Gregory Haley\n\n### Visa Shakeup On Tap To Help Solve Worker Shortage\n\nAdjustments to H-1B visa program could help keep highly qualified engineers in\nthe U.S.\n\nby Liz Allan\n\n### X-ray Inspection In The Semiconductor Industry\n\nUtilizing multiple technologies helps create a more complete inspection\npicture.\n\nby Chris Rand\n\n  * ### Sponsors\n\n  * Advertise with us\n\n  * Advertise with us\n\n  * Advertise with us\n\n  * ### Newsletter Signup\n\n* ### Popular Tags\n\n2.5D 5G 7nm advanced packaging AI ANSYS Apple Applied Materials ARM automotive\nbusiness Cadence EDA eSilicon EUV finFETs GlobalFoundries Google IBM imec\nInfineon Intel IoT IP Keysight Lam Research machine learning memory Mentor\nMentor Graphics MIT Moore's Law Nvidia NXP Qualcomm Rambus Samsung security\nSEMI Siemens Siemens EDA software Synopsys TSMC verification\n\n* ### Recent Comments\n\n  * Anne Meixner on Too Much Fab And Test Data, Low Utilization\n  * Mark Hahn on CXL: The Future Of Memory Interconnect?\n  * Dr. Richard Roy on Future-Proofing Automotive V2X\n  * Frank-Peter Ludwig on Enabling Advanced Devices With Atomic Layer Processes\n  * Piyush Kumar Mishra on Using AI/ML To Minimize IR Drop\n  * Rakesh on Timing Library LVF Validation For Production Design Flows\n  * Mike Cawthorn on What Will That Chip Cost?\n  * Liz Allan on Early STEM Education Key To Growing Future Chip Workforce\n  * Rob Pearson - RIT on Early STEM Education Key To Growing Future Chip Workforce\n  * Maury Wood on Examining The Impact Of Chip Power Reduction On Data Center Economics\n  * Erik Jan Marinissen on Chiplet IP Standards Are Just The Beginning\n  * Peter Bennet on Design Tool Think Tank Required\n  * Dr. Dev Gupta on Chiplet IP Standards Are Just The Beginning\n  * Jesse on Hunting For Open Defects In Advanced Packages\n  * Matt on Chip Ecosystem Apprenticeships Help Close The Talent Gap\n  * Leonard Schaper IEEE-LF on 2.5D Integration: Big Chip Or Small PCB?\n  * Apex on Nanoimprint Finally Finds Its Footing\n  * AKC on Gearing Up For Hybrid Bonding\n  * Allen Rasafar on Backside Power Delivery Gears Up For 2nm Devices\n  * Nathaniel on Intel, And Others, Inside\n  * Chris G on Intel, And Others, Inside\n  * Richard Collins on Too Much Fab And Test Data, Low Utilization\n  * Jerry Magera on Why Chiplets Are So Critical In Automotive\n  * Jenn Mullen on Shattered Silos: 2024\u2019s Top Technology Trends\n  * Valerio Del Vecchio on Security Becoming Core Part Of Chip Design \u2014 Finally\n  * Lucas on Hybrid Bonding Basics: What Is Hybrid Bonding?\n  * Robin Grindley on Expand Your Semiconductor\u2019s Market With Programmable Data Planes\n  * V.P.Sampath on RISC-V Micro-Architectural Verification\n  * Thermal Guy on Is UCIe Really Universal?\n  * Colt Wright on Shattered Silos: 2024\u2019s Top Technology Trends\n  * Nicolas Dujarrier on The Future Of Memory\n  * Tony on Challenges Of Logic BiST In Automotive ICs\n  * Raymond Meixner's child on Visa Shakeup On Tap To Help Solve Worker Shortage\n  * Michael Alan Bruzzone on How Is The Chip Industry Really Doing?\n  * Art Scott on How Is The Chip Industry Really Doing?\n  * Liz Allan on Rethinking Engineering Education In The U.S.\n  * Telkom University on Rethinking Engineering Education In The U.S.\n  * Ramesh Babu Varadharajan on SRAM\u2019s Role In Emerging Memories\n  * jake_leone on Visa Shakeup On Tap To Help Solve Worker Shortage\n  * d0x on How Secure Are FPGAs?\n  * Mike Bradley on RISC-V Micro-Architectural Verification\n  * Charles E. Bauer ,Ph.D. on Visa Shakeup On Tap To Help Solve Worker Shortage\n  * AMAN SINGH on Power Aware Intent And Structural Verification Of Low-Power Designs\n  * jake_leone on Visa Shakeup On Tap To Help Solve Worker Shortage\n  * Ed Trevis on Visa Shakeup On Tap To Help Solve Worker Shortage\n  * AMAN SINGH on Get To Know The Gate-Level Power Aware Simulation\n  * Pitchumani Guruswamy on RISC-V Micro-Architectural Verification\n  * Manil Vasantha on AI Accelerator Architectures Poised For Big Changes\n  * Ramachandra on Packaging Demands For RF And Microwave Devices\n  * garry on New Insights Into IC Process Defectivity\n  * Brian Bailey on The Good Old Days Of EDA\n  * Ann Mutschler on AI Accelerator Architectures Poised For Big Changes\n  * Ann Mutschler on AI Accelerator Architectures Poised For Big Changes\n  * John Derrick on AI Accelerator Architectures Poised For Big Changes\n  * allan cox on AI Accelerator Architectures Poised For Big Changes\n  * Madhusudhanan RAVISHANKAR on Curbing Automotive Cybersecurity Attacks\n  * Eric Cigan on The Good Old Days Of EDA\n  * Peter Flake on The Good Old Days Of EDA\n  * Mike Cummings on MEMS: New Materials, Markets And Packaging\n  * Brian Bailey on The Good Old Days Of EDA\n  * Bill Martin on The Good Old Days Of EDA\n  * Gretchen Patti on 3D-ICs May Be The Least-Cost Option\n  * Carlos on An Entangled Heterarchy\n  * Ann Mutschler on Flipping Processor Design On Its Head\n  * Gil Russell on Flipping Processor Design On Its Head\n  * Ed Sperling on China Unveils Memory Plans\n  * David on The Limits Of AI-Generated Models\n  * Bill on The Limits Of AI-Generated Models\n  * Dr. Dev Gupta on Gearing Up For Hybrid Bonding\n  * Faizan on China Unveils Memory Plans\n  * Jan Hoppe on Streamlining Failure Analysis Of Chips\n  * Riko R on Why Curvy Design Now? Manufacturing Is Possible And Scaling Needs It\n  * Derrick Meyer on Higher Automotive MCU Performance With Interface IP\n  * Kevin Cameron on Why Silent Data Errors Are So Hard To Find\n  * Rale on How Secure Are RISC-V Chips?\n  * Ed Sperling on Patterns And Issues In AI Chip Design\n  * Chip Greely on Building Better Bridges In Advanced Packaging\n  * Art Scott on Setting Standards For The Chip Industry\n  * Muhammet on Higher Creepage And Clearance Make For More Reliable Systems\n  * Andy Deng on Quantum Plus AI Widens Cyberattack Threat Concerns\n  * Dr. Rahul Razdan on The Threat Of Supply Chain Insecurity\n  * Roger on Patterns And Issues In AI Chip Design\n  * David Leary on Improving Reliability In Chips\n  * Ann Mutschler on The Threat Of Supply Chain Insecurity\n  * Cliff Greenberg on Setting Standards For The Chip Industry\n  * Kevin Parmenter on The Threat Of Supply Chain Insecurity\n  * Esther soria on Automotive Complexity, Supply Chain Strength Demands Tech Collaboration\n  * Kumar Venkatramani on Predicting The Future For Semiconductors\n  * Spike on Is UCIe Really Universal?\n  * David Sempek on Power Semis Usher In The Silicon Carbide Era\n  * Dp on Specialization Vs. Generalization In Processors\n  * Eric on Addressing The ABF Substrate Shortage With In-Line Monitoring\n  * Karl Stevens Logic Designer on Software-Hardware Co-Design Becomes Real\n  * Jim Handy on MRAM Getting More Attention At Smallest Nodes\n  * Nicolas Dujarrier on MRAM Getting More Attention At Smallest Nodes\n  * Lou Covey on Are In-Person Conferences Sustainable?\n  * Cas Wonsowicz on AI Transformer Models Enable Machine Vision Object Detection\n  * Nancy Zavada on Are In-Person Conferences Sustainable?\n  * Fred Chen on High-NA Lithography Starting To Take Shape\n  * Dave Taht on Wi-Fi 7 Moves Forward, Adding Yet Another Protocol\n  * Robert Boissy on Rethinking Engineering Education In The U.S.\n  * Allen Rasafar on High-NA Lithography Starting To Take Shape\n  * Mathias Tomandl on Multi-Beam Writers Are Driving EUV Mask Development\n  * K on High-NA Lithography Starting To Take Shape\n  * Adibhatla krishna Rao on How Do Robots Navigate?\n  * Doug L. on Getting Rid Of Heat In Chips\n  * Ken Rygler on DAC/Semicon West Wednesday\n  * Mark Camenzind on Why IC Industry Is Great Place To Work\n  * Peter Bennet on The True Cost Of Software Changes\n  * ALLEN RASAFAR on Balancing AI And Engineering Expertise In The Fab\n  * Ron Lavallee on The True Cost Of Software Changes\n  * Alex Peterson on Welcome To EDA 4.0 And The AI-Driven Revolution\n  * Allen Rasafar on Managing Yield With EUV Lithography And Stochastics\n  * Art Scott on Rethinking Engineering Education In The U.S.\n  * Paul Clifton on Week In Review: Semiconductor Manufacturing, Test\n  * Mark L Schattenburg on A Highly Wasteful Industry\n  * Gordon Harling on Rethinking Engineering Education In The U.S.\n  * Santosh Kurinec on Rethinking Engineering Education In The U.S.\n  * Brian Bailey on Rethinking Engineering Education In The U.S.\n  * CdrFrancis Leo on Will There Be Enough Silicon Wafers?\n\nEDA Looks Beyond Chips Ed Sperling\n\nDealing With AI/ML Uncertainty Karen Heyman\n\n### About\n\n  * About us\n  * Contact us\n  * Advertising on SemiEng\n  * Newsletter SignUp\n\n### Navigation\n\n  * Homepage\n  * Special Reports\n  * Systems & Design\n  * Low Power-High Perf\n  * Manufacturing, Packaging & Materials\n  * Test, Measurement & Analytics\n  * Auto, Security & Pervasive Computing\n\n  * Videos\n  * Jobs\n  * Technical Papers\n  * Events\n  * Webinars\n  * Knowledge Centers\n  * Industry Research\n  * Business & Startups\n  * Newsletters\n  * Store\n\n### Connect With Us\n\n  * Facebook\n  * Twitter @semiEngineering\n  * LinkedIn\n  * YouTube\n\nCopyright \u00a92013-2024 SMG | Terms of Service | Privacy Policy\n\nThis site uses cookies. By continuing to use our website, you consent to our\nCookies Policy\n\nACCEPT\n\nManage consent\n\n#### Privacy Overview\n\nThis website uses cookies to improve your experience while you navigate\nthrough the website. The cookies that are categorized as necessary are stored\non your browser as they are essential for the working of basic functionalities\nof the website. We al...\n\nNecessary\n\nAlways Enabled\n\nNecessary cookies are absolutely essential for the website to function\nproperly. This category only includes cookies that ensures basic\nfunctionalities and security features of the website. These cookies do not\nstore any personal information.\n\nNon-necessary\n\nAny cookies that may not be particularly necessary for the website to function\nand is used specifically to collect user personal data via analytics, ads,\nother embedded contents are termed as non-necessary cookies. It is mandatory\nto procure user consent prior to running these cookies on your website.\n\nSAVE & ACCEPT\n\n# Search results\n\nFiltersShow filters\n\nSort by:\n\n\u2022\u2022\n\n## No results found\n\n## Filter options\n\n", "frontpage": false}
