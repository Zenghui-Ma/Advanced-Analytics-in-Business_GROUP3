{"aid": "39975196", "title": "Embedding Models", "url": "https://ollama.com/blog/embedding-models", "domain": "ollama.com", "votes": 1, "user": "ushakov", "posted_at": "2024-04-09 00:40:21", "comments": 0, "source_title": "Embedding models \u00b7 Ollama Blog", "source_text": "Embedding models \u00b7 Ollama Blog\n\n# Embedding models\n\n## April 8, 2024\n\nOllama supports embedding models, making it possible to build retrieval\naugmented generation (RAG) applications that combine text prompts with\nexisting documents or other data.\n\n## What are embedding models?\n\nEmbedding models are models that are trained specifically to generate vector\nembeddings: long arrays of numbers that represent semantic meaning for a given\nsequence of text:\n\nThe resulting vector embedding arrays can then be stored in a database, which\nwill compare them as a way to search for data that is similar in meaning.\n\n## Example embedding models\n\nModel| Parameter Size  \n---|---  \nmxbai-embed-large| 334M| View model  \nnomic-embed-text| 137M| View model  \nall-minilm| 23M| View model  \n  \n## Usage\n\nTo generate vector embeddings, first pull a model:\n\n    \n    \n    ollama pull mxbai-embed-large\n\nNext, use the REST API, Python or JavaScript libraries to generate vector\nembeddings from the model:\n\n_REST API\n\n    \n    \n    curl http://localhost:11434/api/embeddings -d '{ \"model\": \"mxbai-embed-large\", \"prompt\": \"Llamas are members of the camelid family\" }'\n\n_Python library\n\n    \n    \n    ollama.embeddings( model='mxbai-embed-large', prompt='Llamas are members of the camelid family', )\n\n_Javascript library\n\n    \n    \n    ollama.embeddings({ model: 'mxbai-embed-large', prompt: 'Llamas are members of the camelid family', })\n\nOllama also integrates with popular tooling to support embeddings workflows\nsuch as LangChain and LlamaIndex.\n\n## Example\n\nThis example walks through building a retrieval augmented generation (RAG)\napplication using Ollama and embedding models.\n\n### Step 1: Generate embeddings\n\n    \n    \n    pip install ollama chromadb\n\nCreate a file named example.py with the contents:\n\n    \n    \n    import ollama import chromadb documents = [ \"Llamas are members of the camelid family meaning they're pretty closely related to vicu\u00f1as and camels\", \"Llamas were first domesticated and used as pack animals 4,000 to 5,000 years ago in the Peruvian highlands\", \"Llamas can grow as much as 6 feet tall though the average llama between 5 feet 6 inches and 5 feet 9 inches tall\", \"Llamas weigh between 280 and 450 pounds and can carry 25 to 30 percent of their body weight\", \"Llamas are vegetarians and have very efficient digestive systems\", \"Llamas live to be about 20 years old, though some only live for 15 years and others live to be 30 years old\", ] client = chromadb.Client() collection = client.create_collection(name=\"docs\") # store each document in a vector embedding database for i, d in enumerate(documents): response = ollama.embeddings(model=\"mxbai-embed-large\", prompt=d) embedding = response[\"embedding\"] collection.add( ids=[str(i)], embeddings=[embedding], documents=[d] )\n\n### Step 2: Retrieve\n\nNext, add the code to retrieve the most relevant document given an example\nprompt:\n\n    \n    \n    # an example prompt prompt = \"What animals are llamas related to?\" # generate an embedding for the prompt and retrieve the most relevant doc response = ollama.embeddings( prompt=prompt, model=\"mxbai-embed-large\" ) results = collection.query( query_embeddings=[response[\"embedding\"]], n_results=1 ) data = results['documents'][0][0]\n\n### Step 3: Generate\n\nLastly, use the prompt and the document retrieved in the previous step to\ngenerate an answer!\n\n    \n    \n    # generate a response combining the prompt and data we retrieved in step 2 output = ollama.generate( model=\"llama2\", prompt=f\"Using this data: {data}. Respond to this prompt: {prompt}\" ) print(output['response'])\n\nThen, run the code:\n\n    \n    \n    python example.py\n\nLlama 2 will answer the prompt What animals are llamas related to? using the\ndata:\n\n    \n    \n    Llamas are members of the camelid family, which means they are closely related to two other animals: vicu\u00f1as and camels. All three species belong to the same evolutionary lineage and share many similarities in terms of their physical characteristics, behavior, and genetic makeup. Specifically, llamas are most closely related to vicu\u00f1as, with which they share a common ancestor that lived around 20-30 million years ago. Both llamas and vicu\u00f1as are members of the family Camelidae, while camels belong to a different family (Dromedary).\n\n### Coming soon\n\nMore features are coming to support workflows that involve embeddings:\n\n  * Batch embeddings: processing multiple input data prompts simultaneously\n  * OpenAI API Compatibility: support for the /v1/embeddings OpenAI-compatible endpoint\n  * More embedding model architectures: support for ColBERT, RoBERTa, and other embedding model architectures\n\n\u00a9 2024 Ollama\n\nBlog Docs GitHub Discord X (Twitter) Meetups\n\n  * Blog\n  * Docs\n  * GitHub\n\n  * Discord\n  * X (Twitter)\n  * Meetups\n\n\u00a9 2024 Ollama\n\n", "frontpage": false}
