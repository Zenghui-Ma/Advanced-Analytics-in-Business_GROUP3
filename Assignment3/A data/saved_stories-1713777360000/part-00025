{"aid": "40111141", "title": "Lossless Acceleration of Long Sequence Generation", "url": "https://arxiv.org/abs/2404.11912", "domain": "arxiv.org", "votes": 1, "user": "eshoyuan", "posted_at": "2024-04-22 03:10:54", "comments": 0, "source_title": "TriForce: Lossless Acceleration of Long Sequence Generation with Hierarchical Speculative Decoding", "source_text": "[2404.11912] TriForce: Lossless Acceleration of Long Sequence Generation with\nHierarchical Speculative Decoding\n\nSkip to main content\n\nWe gratefully acknowledge support from the Simons Foundation, member\ninstitutions, and all contributors. Donate\n\n> cs > arXiv:2404.11912\n\n# Computer Science > Computation and Language\n\narXiv:2404.11912 (cs)\n\n[Submitted on 18 Apr 2024]\n\n# Title:TriForce: Lossless Acceleration of Long Sequence Generation with\nHierarchical Speculative Decoding\n\nAuthors:Hanshi Sun, Zhuoming Chen, Xinyu Yang, Yuandong Tian, Beidi Chen\n\nView a PDF of the paper titled TriForce: Lossless Acceleration of Long\nSequence Generation with Hierarchical Speculative Decoding, by Hanshi Sun and\n4 other authors\n\nView PDF HTML (experimental)\n\n> Abstract:With large language models (LLMs) widely deployed in long content\n> generation recently, there has emerged an increasing demand for efficient\n> long-sequence inference support. However, key-value (KV) cache, which is\n> stored to avoid re-computation, has emerged as a critical bottleneck by\n> growing linearly in size with the sequence length. Due to the auto-\n> regressive nature of LLMs, the entire KV cache will be loaded for every\n> generated token, resulting in low utilization of computational cores and\n> high latency. While various compression methods for KV cache have been\n> proposed to alleviate this issue, they suffer from degradation in generation\n> quality. We introduce TriForce, a hierarchical speculative decoding system\n> that is scalable to long sequence generation. This approach leverages the\n> original model weights and dynamic sparse KV cache via retrieval as a draft\n> model, which serves as an intermediate layer in the hierarchy and is further\n> speculated by a smaller model to reduce its drafting latency. TriForce not\n> only facilitates impressive speedups for Llama2-7B-128K, achieving up to\n> 2.31\\times on an A100 GPU but also showcases scalability in handling even\n> longer contexts. For the offloading setting on two RTX 4090 GPUs, TriForce\n> achieves 0.108s/token\\unicode{x2014}only half as slow as the auto-regressive\n> baseline on an A100, which attains 7.78\\times on our optimized offloading\n> system. Additionally, TriForce performs 4.86\\times than DeepSpeed-Zero-\n> Inference on a single RTX 4090 GPU. TriForce's robustness is highlighted by\n> its consistently outstanding performance across various temperatures. The\n> code is available at this https URL.\n\nSubjects:| Computation and Language (cs.CL); Machine Learning (cs.LG)  \n---|---  \nCite as:| arXiv:2404.11912 [cs.CL]  \n(or arXiv:2404.11912v1 [cs.CL] for this version)  \nhttps://doi.org/10.48550/arXiv.2404.11912arXiv-issued DOI via DataCite  \n  \n## Submission history\n\nFrom: Hanshi Sun [view email] [v1] Thu, 18 Apr 2024 05:25:54 UTC (2,535 KB)\n\nFull-text links:\n\n## Access Paper:\n\nView a PDF of the paper titled TriForce: Lossless Acceleration of Long\nSequence Generation with Hierarchical Speculative Decoding, by Hanshi Sun and\n4 other authors\n\n  * View PDF\n  * HTML (experimental)\n  * TeX Source\n  * Other Formats\n\nview license\n\nCurrent browse context:\n\ncs.CL\n\n< prev | next >\n\nnew | recent | 2404\n\nChange to browse by:\n\ncs cs.LG\n\n### References & Citations\n\n  * NASA ADS\n  * Google Scholar\n  * Semantic Scholar\n\na export BibTeX citation Loading...\n\n## BibTeX formatted citation\n\n\u00d7\n\nData provided by:\n\n### Bookmark\n\n# Bibliographic and Citation Tools\n\nBibliographic Explorer (What is the Explorer?)\n\nLitmaps (What is Litmaps?)\n\nscite Smart Citations (What are Smart Citations?)\n\n# Code, Data and Media Associated with this Article\n\nCatalyzeX Code Finder for Papers (What is CatalyzeX?)\n\nDagsHub (What is DagsHub?)\n\nGotit.pub (What is GotitPub?)\n\nPapers with Code (What is Papers with Code?)\n\nScienceCast (What is ScienceCast?)\n\n# Demos\n\nReplicate (What is Replicate?)\n\nHugging Face Spaces (What is Spaces?)\n\nTXYZ.AI (What is TXYZ.AI?)\n\n# Recommenders and Search Tools\n\nInfluence Flower (What are Influence Flowers?)\n\nConnected Papers (What is Connected Papers?)\n\nCORE Recommender (What is CORE?)\n\n  * Author\n  * Venue\n  * Institution\n  * Topic\n\n# arXivLabs: experimental projects with community collaborators\n\narXivLabs is a framework that allows collaborators to develop and share new\narXiv features directly on our website.\n\nBoth individuals and organizations that work with arXivLabs have embraced and\naccepted our values of openness, community, excellence, and user data privacy.\narXiv is committed to these values and only works with partners that adhere to\nthem.\n\nHave an idea for a project that will add value for arXiv's community? Learn\nmore about arXivLabs.\n\nWhich authors of this paper are endorsers? | Disable MathJax (What is MathJax?)\n\n  * About\n  * Help\n\n  * Contact\n  * Subscribe\n\n  * Copyright\n  * Privacy Policy\n\n  * Web Accessibility Assistance\n  * arXiv Operational Status Get status notifications via email or slack\n\n", "frontpage": false}
