{"aid": "40103505", "title": "Nuxt Parallel Routes and Modal Routes", "url": "https://nuxt-pages-plus.pages.dev/routing/modal-routes/", "domain": "nuxt-pages-plus.pages.dev", "votes": 1, "user": "serkodev", "posted_at": "2024-04-21 06:08:50", "comments": 0, "source_title": "Modal Routes", "source_text": "Modal Routes \u00b7 Nuxt Pages Plus\n\nNuxt Pages Plus\n\nNuxt Pages Plus\n\n# Modal Routes\n\nModal Routes can navigate modals routes with real-time URL changes for\nseamless browsing.\n\nFor example, imagine your website has a page called /shop that lists various\nproduct links. When a user clicks on a product link, such as /item/5, the\ndetails of the product are displayed in a modal, while the URL is\nsimultaneously updated to /item/5.\n\nThis approach offers several advantages. Not only does it help users\nintuitively understand their current location on the site, but it also allows\nthem to copy and share the URL with others easily.\n\nWhen a user navigates directly to /item/5, the page is displayed normally\ninstead of as a modal. This setup ensures that the user experience is\nseamless, whether accessing the item details through a link on the shop page\nor by entering the URL directly into the browser.\n\n## Usage\n\nBefore we start, make sure you installed nuxt-pages-plus module to your Nuxt\nproject.\n\nFor instance, here's how your original Nuxt project setup with two routes: /\nand /info:\n\npages/index.vue\n\n    \n    \n    <template> <div> <NuxtLink to=\"/info\">Go Info</NuxtLink> </div> </template>\n\npages/info.vue\n\n    \n    \n    <template> <div> <NuxtLink to=\"/\">Go Home</NuxtLink> </div> </template>\n\napp.vue\n\n    \n    \n    <template> <NuxtPage /> </template>\n\nIn this tutorial, we will to add a modal route for /info and add a button on\nindex.vue. When you click the button, an info modal will pop up on the page,\nand the URL will change to /info.\n\n### Preparation\n\nFirst, you need to change your <NuxtPage /> in your app.vue file.\n\nOption 1: Replace <NuxtPage /> with <PlusModalNuxtPage />.\n\napp.vue\n\n    \n    \n    <template> - <NuxtPage /> + <PlusModalNuxtPage /> </template>\n\nOption 2: You can use PlusModalNuxtPage to wrap your NuxtPage component and\npass the route prop to it.\n\napp.vue\n\n    \n    \n    <template> <PlusModalNuxtPage v-slot=\"{ route }\"> <NuxtPage :route=\"route\" /> </PlusModalNuxtPage> </template>\n\n### Adding Modal Routes\n\nFirst, add a new file @my-modal/info.vue (or any name you prefer) to your\n~/pages directory:\n\npages/@my-modal/info.vue\n\n    \n    \n    <template> <Teleport to=\"body\"> <div> <p>I am info modal</p> <button @click=\"$modalRouter.close()\">Close</button> </div> </Teleport> </template>\n\n  * <Teleport> is a native component in Vue 3 that allows you to move components to a specified location, here moving the modal to the body of the document.\n  * $modalRouter.close() is a method used to close the modal.\n\n### Displaying Modal Routes\n\nAfter creating the modal route, you can now display the modal route on your\npage by adding a <PlusModalLink> and <PlusModalPage> component.\n\npages/index.vue\n\n    \n    \n    <template> <div> <NuxtLink to=\"/info\">Go Info</NuxtLink> + <PlusModalLink to=\"/info\">Show Info Modal</PlusModalLink> + <PlusModalPage name=\"my-modal\" /> </div> </template>\n\n  * PlusModalLink functions similarly to NuxtLink but performs soft-navigation that changes the URL to /info without a full page navigation.\n  * PlusModalPage in here is used to display the content of the my-modal modal route. When the URL is /info, it will display the content from @my-modal/info.vue. You can add <PlusModalPage> to layout for showing modal in all pages or add it to a specific page like this example.\n\nThat's it! You've successfully added a modal route to your Nuxt application.\n\n## How it works?\n\nModal Routes uses History API for saving the \"background view\" of the modal\nand pass it's route to the route prop of RouterView. There is a Vue RFC by\n@posva demonstrating the idea.\n\n## Navigation in Modal\n\nWhen a modal route is opened, you can navigate to another modal route while\nkeeping the modal open.\n\nConsider the example of developing a gallery application:\n\npages/home.vue\n\n    \n    \n    <template> <div> <PlusModalLink to=\"/image/1\"> <img src=\"/image/1\" /> </PlusModalLink> <PlusModalPage name=\"modal\" /> </div> </template>\n\nWhen a user clicks on an image link (/image/1) from the /home page, a modal\nopens displaying detailed information about the image. Inside the modal, there\nare \"Next\" and \"Previous\" buttons allowing the user to browse through images:\n\npages/@modal/image/[id].vue\n\n    \n    \n    <template> <div> Image Modal <PlusModalLink :to=\"`/image/${parseInt(id) - 1}`\">Prev</PlusModalLink> <img :src=\"`/image/${id}`\" /> <PlusModalLink :to=\"`/image/${parseInt(id) + 1}`\">Next</PlusModalLink> <button @click=\"$modalRouter.close()\">Close</button> </div> </template>\n\nThe modal remains open as the user navigates through images, and when the\n\"Close\" button is pressed, the modal closes and the route returns to /home.\n\n### Nested Navigation in Modal\n\nContinuing with the gallery application example, suppose you want to open\nanother set of modals within @modal/image/[id].vue to view comments, such as\n/comments/[id].\n\npages/@modal/image/[id].vue\n\n    \n    \n    <template> <div> Image Modal <PlusModalLink :to=\"`/image/${parseInt(id) - 1}`\">Prev</PlusModalLink> <img :src=\"`/image/${id}`\" /> <PlusModalLink :to=\"`/image/${parseInt(id) + 1}`\">Next</PlusModalLink> <PlusModalLink :to=\"`/comments/${id}`\">Comments</PlusModalLink> <button @click=\"$modalRouter.close()\">Close</button> </div> </template>\n\npages/@modal/comments/[id].vue\n\n    \n    \n    <template> <div> Comments <CommentsComponent :id=\"id\" /> <button @click=\"$modalRouter.close()\">Close</button> </div> </template>\n\nThe challenge arises when pressing the \"Close\" button in the comments modal;\nthe default behavior would take you back to /home. To ensure that closing the\ncomments modal takes you back to the image modal instead of /home, you can\nutilize the open prop on PlusModalLink.\n\npages/@modal/image/[id].vue\n\n    \n    \n    <template> <div> Image Modal <PlusModalLink :to=\"`/image/${parseInt(id) - 1}`\">Prev</PlusModalLink> <img :src=\"`/image/${id}`\" /> <PlusModalLink :to=\"`/image/${parseInt(id) + 1}`\">Next</PlusModalLink> <PlusModalLink open :to=\"`/comments/${id}`\">Comments</PlusModalLink> <button @click=\"$modalRouter.close()\">Close</button> </div> </template>\n\nThis adjustment ensures that upon closing the comments modal, the navigation\nreturns to the image modal instead of defaulting back to /home. This enhances\nthe continuity and user experience of navigating through modals within your\napplication.\n\n## Examples\n\n  * Live Example - Gallery\n  * More examples source code\n\nEdit this page on GitHub\n\nRoutingParallel Routes\n\nComponents<PlusParallelPage />\n\nTable of Contents\n\n  * Usage\n\n    * Preparation\n    * Adding Modal Routes\n    * Displaying Modal Routes\n  * How it works?\n  * Navigation in Modal\n\n    * Nested Navigation in Modal\n  * Examples\n\nPowered by Docus\n\n", "frontpage": false}
