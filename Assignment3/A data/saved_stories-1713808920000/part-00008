{"aid": "40111881", "title": "uLisp: Performance of Popular Microcontroller Boards", "url": "http://www.ulisp.com/show?36M3", "domain": "ulisp.com", "votes": 1, "user": "tosh", "posted_at": "2024-04-22 06:33:11", "comments": 0, "source_title": "uLisp - Performance", "source_text": "uLisp - Performance\n\nBESbswyBESbswyBESbswyBESbswyBESbswyBESbswy\n\n  * Home\n  * Reference\n  * Forum\n\n# uLisp\n\nGetting started\n\n  * Lisp for microcontrollers\n  * Performance\n  * Using uLisp\n  * Using uLisp from a terminal\n  * Integral documentation\n  * Debugging in uLisp\n  * Using the program editor\n  * SD card interface\n  * I2C and SPI serial interfaces\n  * Lisp Library\n  * Download uLisp\n  * uLisp Sensor Library\n  * Forum\n\nSelf-contained Lisp computers\n\n  * LilyGO T-Deck uLisp Machine\n  * Lisp Badge LE\n  * Lisp Badge\n  * Pocket Op Amp Lab\n  * Tiny Lisp Computer\n\n8/16-bit platforms\n\n  * Arduino Uno and Nano\n  * Arduino Mega 2560\n  * ATmega1284\n  * ATmega4809 boards\n  * AVR DA and DB series boards\n\n32/64-bit platforms\n\n  * Arduino M0 boards\n  * Adafruit M0 boards\n  * QT Py SAMD21 and XIAO SAMD21\n  * Adafruit Neo Trinkey\n  * Adafruit M4 boards\n  * Adafruit PyGamer and PyBadge\n  * Seeed Studio Wio Terminal\n  * Adafruit nRF52840 boards\n  * Circuit Playground Bluefruit\n  * Seeed Studio XIAO nRF52840\n  * BBC Micro:bit and Calliope Mini\n  * Maxim MAX32620FTHR\n  * Teensy 4.0 and 4.1\n  * RP2040 boards\n  * QT Py RP2040 and XIAO RP2040\n  * LILYGO T-Display RP2040\n  * ESP8266 boards\n  * ESP32 boards\n  * QT Py ESP32 Pico\n  * ESP32-S2, ESP-S3, and ESP-C3 boards\n  * ESP32 boards with a TFT display\n  * Sipeed MAiX RISC-V boards\n  * Arduino Uno R4 Boards\n\nSimple examples\n\n  * Blinking primes\n  * Tweetmaze\n  * Mood light\n  * LED 8x8 dot-matrix display\n  * Simon game\n  * I2C clock\n  * Data logging\n  * Ringing the changes\n  * Driving DotStar RGB LEDs\n  * LCD character display\n  * DDS signal generator\n  * Temperature sensor\n  * Simple data plotter\n  * Thermocouple interface\n  * Benchmarks\n\nGames\n\n  * Animals\n  * Eliza chatbot\n  * Simple arcade game\n  * Simple maze game\n  * Bulls & Cows game\n  * Mini text adventure game\n\nLarger examples\n\n  * Route finder\n  * Calculating with fractions\n  * Infinite precision arithmetic\n  * Scrolling text display\n  * Dot-matrix clock\n  * Graphics display interface in Lisp\n  * Plotting to a colour TFT display\n  * GPS interface using uLisp\n  * GPS mapping application\n  * Query language\n  * uLisp GSM server\n  * A LoRaWAN node using uLisp\n  * Solving resistor networks\n  * Fast Fourier Transform\n  * Sudoku solver\n  * Automatic uLisp to C converter\n  * Simple object system\n\nGraphics examples\n\n  * Graphics utilities\n  * Plotting the Hofstadter Q sequence\n  * Surface of rotation\n  * Ray tracing with uLisp\n  * Prime number spiral\n  * Dragon curve\n  * Mandelbrot set\n  * Barnsley Fern\n\nWi-Fi examples\n\n  * Wi-Fi examples\n  * Wireless Message Display\n\nAssemblers\n\n  * AVR assembler overview\n  * AVR assembler examples\n  * AVR NeoPixel driver using assembler\n  * ARM assembler overview\n  * ARM assembler instructions\n  * ARM assembler examples\n  * ARM NeoPixel driver using assembler\n  * RISC-V assembler overview\n  * RISC-V assembler instructions\n  * RISC-V assembler examples\n  * Mandelbrot set using assembler\n  * Returning a floating-point result\n\nTutorials\n\n  * Getting started\n  * Lists\n  * Expressions\n  * Defining functions\n  * Variables\n  * Strings\n  * Testing a result\n  * Manipulating lists\n  * Processing items in a list\n  * Recursion\n  * Returning functions\n  * Lisp for C programmers\n  * Thinking in a Lispy way\n\nReference\n\n  * Language reference\n  * Floating-point extensions\n  * Graphics extensions\n  * Wi-Fi extensions\n  * Programming AVR registers\n  * Programming ARM registers\n  * Error messages\n  * Adding useful functions to uLisp\n\nImplementation\n\n  * Implementation\n  * Objects\n  * Symbols\n  * Built-in symbols\n  * Strings\n  * Arrays\n  * Read, Evaluate, Print\n  * Garbage collection\n  * Tail-call optimization\n  * Saving and loading images\n  * Assembler and defcode\n  * Debugging uLisp\n  * Adding your own functions\n  * Converting between C and uLisp\n  * Porting uLisp to a new platform\n  * uLisp Builder\n  * uLisp Zero\n\nExtending uLisp\n\n  * Arbitrary-precision arithmetic extension\n  * NeoPixel extension\n\nOther information\n\n  * FAQ\n  * About me\n  * Contact\n  * Legal stuff\n\nRSS Feed\n\nuLisp news!\n\n## Performance\n\n### Overview\n\nOther SAMD21-based ARM M0 boards, such as the MKRZero, Adafruit Gemma M0,\nAdafruit ItsyBitsy M0, and Adafruit Feather M0 Adalogger are similar in\nperformance to the Arduino Zero.\n\nOther SAMD51-based ARM M4 boards, such as the Adafruit ItsyBitsy M4 and\nAdafruit Feather M4, are similar in performance to the Adafruit Metro M4.\n\nOther ESP8266 or ESP32-based boards are similar in performance to the Adafruit\nESP8266 Feather or Adafruit ESP32 Feather respectively.\n\nOther RP2040-based boards, such as the Raspberry Pi Pico W and Adafruit\nFeather RP2040, are similar in performance to the Raspberry Pi Pico.\n\nOther K210-based RISC-V boards, such as the Sipeed MAiX One Dock and Sipeed\nMAiX BiT, are similar in performance to the Sipeed Maixduino.\n\n### Platforms\n\nThe following table gives a summary of the performance of the different boards\nsupported by the latest release of uLisp for each platform:\n\n#### AVR-Nano version\n\nPlatform| Processor| Clock| Objects| Image| Code| GC time| Tak| Q2  \n---|---|---|---|---|---|---|---|---  \nArduino Uno| ATmega328| 16 MHz| 319| 256| \u2020| 0.5 ms| 63.3 s  \nArduino Nano| ATmega328| 16 MHz| 319| 256| \u2020| 0.5 ms| 63.3 s  \nArduino Nano Every| ATmega4809| 20 MHz| 1066| 64| \u2020| 1.4 ms| 53.3 s| 105.4 s  \nATmega4809 Curiosity Nano| ATmega4809| 20 MHz| 1066| 64| \u2020| 1.4 ms| 49 s| 112\ns  \n  \n#### AVR version\n\nPlatform| Processor| Clock| Objects| Image| Code| GC time| Tak| Q2  \n---|---|---|---|---|---|---|---|---  \nArduino Mega 2560| ATmega2560| 16 MHz| 1343| 1024| \u2020| 2.1 ms| 53.8 s| 110.7 s  \nLisp Badge| ATmega1284| 16 MHz| 2944| All| 96| 4.7 ms| 54.6 s| 109.2 s  \nAVR128DA48 Curiosity Nano| AVR128DA48| 24 MHz| 2919| All| 96| 2.6 ms| 33.1 s|\n66.7 s  \nAVR128DB48 Curiosity Nano| AVR128DB48| 24 MHz| 2919| All| 96| 2.6 ms| 33.1 s|\n66.7 s  \n  \n#### ARM version\n\nPlatform| Processor| Clock| Objects| Image| Code| GC time| Tak| Q2| FFT  \n---|---|---|---|---|---|---|---|---|---  \nArduino Zero| ATSAMD21| 48 MHz| 2639| All| 128| 2.4 ms| 12 s| 51 s| 348 ms  \nArduino MKRZero| ATSAMD21| 48 MHz| 2639| All| 128| 2.2 ms| 18.3 s| 43.6 s| 446\nms  \nAdafruit Gemma M0| ATSAMD21| 48 MHz| 2815| All| 128| 2.4 ms| 14.9 s| 33.8 s|\n445 ms  \nAdafruit QT-Py SAMD21| ATSAMD21| 48 MHz| 2815| All| 128| 1.3 ms| 14.9 s| 33.8\ns| 445 ms  \nAdafruit ItsyBitsy M0| ATSAMD21| 48 MHz| 2815| All| 128| 1.3 ms| 14.9 s| 33.8\ns| 445 ms  \nAdafruit Feather M0| ATSAMD21| 48 MHz| 2815| All| 128| 1.3 ms| 14.9 s| 34.3 s|\n445 ms  \nAdafruit Neo Trinkey| ATSAMD21| 48 MHz| 2815| All| 128| 1.2 ms| 15.2 s| 35.6\ns| 445 ms  \nSeeed Studio XIAO SAMD21| ATSAMD21| 48 MHz| 2815| All| 128| 2.4 ms| 14 s| 41\ns| 445 ms  \nAdafruit Metro M4 Grand Central| ATSAMD51| 120 MHz| 28672| All| 256| 4.6 ms|\n4.2 s| 11 s| 122 ms  \nAdafruit Metro M4| ATSAMD51| 120 MHz| 20480| All| 256| 3.3 ms| 4.4 s| 9.8 s|\n122 ms  \nAdafruit ItsyBitsy M4| ATSAMD51| 120 MHz| 20607| All| 256| 3.3 ms| 4.4 s| 9.9\ns| 121 ms  \nAdafruit Feather M4| ATSAMD51| 120 MHz| 20607| All| 256| 3.3 ms| 4.5 s| 10.2\ns| 121 ms  \nAdafruit PyGamer and PyBadge| ATSAMD51| 120 MHz| 20607| All| 256| 3.3 ms| 4.4\ns| 10.2 s| 121 ms  \nSeeed Studio Wio Terminal| ATSAMD51| 120 MHz| 20479| All| 256| 3.3 ms| 5.3 s|\n13.0 s| 121 ms  \nBBC Micro:bit| nRF51822| 16 MHz| 1343| *| 64| 2.2 ms| 36.7 s| 77.9 s  \nCalliope mini| nRF51822| 16 MHz| 3328| *| 64| 5.3 ms| 34 s| 82 s| 1110 ms  \nBBC Micro:bit V2| nRF52833| 64 MHz| 12927| *| 128| 6.7 ms| 8.6 s| 18.9 s| 246\nms  \nAdafruit CLUE| nRF52840| 64 MHz| 21119| All| 256| 7.8 ms| 12.7 s| 31.8 s| 199\nms  \nAdafruit ItsyBitsy nRF52840| nRF52840| 64 MHz| 21119| All| 256| 6.8 ms| 12.6\ns| 31.4 s| 199 ms  \nSeeed Studio XIAO nRF52840| nRF52840| 64 MHz| 21119| All| 256| 6.8 ms| 12.6 s|\n31.5 s| 199 ms  \nRaspberry Pi Pico| RP2040| 133 MHz| 22911| All| 256| 3.7 ms| 7.2 s| 17.7 s|\n174 ms  \nRaspberry Pi Pico W| RP2040| 133 MHz| 22911| All| 256| 3.7 ms| 7.2 s| 17.7 s|\n174 ms  \nAdafruit Feather RP2040| RP2040| 133 MHz| 22912| All| 256| 4.0 ms| 5.6 s| 13.0\ns| 174 ms  \nAdafruit Qt-Py RP2040| RP2040| 133 MHz| 22911| All| 256| 3.7 ms| 8.9 s| 22.3\ns| 174 ms  \nSeed Studio XIAO RP2040| RP2040| 133 MHz| 22911| All| 256| 3.7 ms| 9.2 s| 23.1\ns| 174 ms  \nMaxim MAX32620FTHR| MAX32620| 96 MHz| 24576| *| 256| 8.7 ms| 6.7 s| 14.7 s|\n179 ms  \nTeensy 4.0 and 4.1| iMXRT1062| 600 MHz| 60000| All| 256| 1.2 ms| 0.4 s| 0.98\ns| 12 ms  \nArduino UNO R4 Minima| RA4M1| 48 MHz| 2160| 1024| 128| 0.9 ms| 10.3 s| 22.6 s|\n335 ms  \nArduino UNO R4 WiFi| RA4M1| 48 MHz| 1800| 1024| 128| 0.8 ms| 10.4 s| 22.8 s|\n344 ms  \n  \n#### ESP version\n\nPlatform| Processor| Clock| Objects| Image| Code| GC time| Tak| Q2| FFT  \n---|---|---|---|---|---|---|---|---|---  \nAdafruit Huzzah Feather| ESP8266| 160 MHz| 3928| 512| \u2020| 0.8 ms| 13.3 s| 209\nms  \nAdafruit ESP32 Feather| ESP32| 240 MHz| 9216| All| \u2020| 0.4 ms| 8.1 s| 21.2 s|\n242 ms  \nAdafruit ESP32-S2 Feather| ESP32-S2| 240 MHz| 8160| All| \u2020| 0.6 ms| 2.7 s| 6.0\ns| 90 ms  \nAdafruit ESP32-S2 QT-Py| ESP32-S2| 240 MHz| 8160| All| \u2020| 0.6 ms| 2.7 s| 6.0\ns| 90 ms  \nUnexpected Maker Feather S2| ESP32-S2| 240 MHz| 8160| All| \u2020| 0.6 ms| 2.7 s|\n6.0 s| 90 ms  \nESP32-S2-Saola-1| ESP32-S2| 240 MHz| 8160| All| \u2020| 0.6 ms| 5.7 s| 14.9 s| 169\nms  \nESP32-C3-DevKitM-1| ESP32-C3| 160 MHz| 9216| All| \u2020| 0.9 ms| 7.8 s| 20.3 s|\n235 ms  \nESP32-S3-DevKitM-1| ESP32-S3| 240 MHz| 22000| All| \u2020| 0.9 ms| 6.1 s| 16.0 s|\n180 ms  \n  \n#### RISC-V version\n\nPlatform| Processor| Clock| Objects| Image| Code| GC time| Tak| Q2| FFT  \n---|---|---|---|---|---|---|---|---|---  \nSipeed MAiX RISC-V boards| K210| 400 MHz| 79999| *| 512| 6.5 ms| 1.1 s| 2.3 s|\n28 ms  \n  \n#### Key\n\nObjects gives the number of Lisp objects of storage available, each equivalent\nto 4 bytes on the 8/16-bit platforms and 8 bytes on the 32-bit platforms.\n\nImage gives the number of objects that can be saved to non-volatile storage\nusing save-image, or All which means that the whole workspace can be saved. *\nThese platforms don't provide non-volatile storage for saving an image, but\nyou can save images to an SD card with a suitable interface.\n\nCode gives the number of bytes of machine code that can be stored by the\nassembler, by default, on AVR, ARM, or RISC-V platforms. \u2020 means not\navailable.\n\nGC time gives the time taken for a garbage collection.\n\nTak gives the time taken to calculate the recursive integer function (tak 18\n12 6); see Benchmarks.\n\nQ2 gives the time taken to calculate the recursive integer function (q2 7 8);\nsee Benchmarks.\n\nFFT (32-bit platforms only) gives the time taken to run the floating-point\n32-point fft benchmark; see Fast Fourier Transform.\n\nPrevious: Lisp for microcontrollers\n\nNext: Using uLisp\n\nCopyright 2024\n\n", "frontpage": false}
